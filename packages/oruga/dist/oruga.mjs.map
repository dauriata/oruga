{"version":3,"file":"oruga.mjs","sources":["../src/utils/helpers.ts","../src/utils/programmatic.ts","../src/utils/plugins.ts","../src/utils/config.ts","../src/utils/icons.ts","../src/composables/unrefElement.ts","../src/composables/defineClasses.ts","../src/composables/usePropValue.ts","../src/composables/useEventListener.ts","../src/utils/ssr.ts","../src/composables/useMatchMedia.ts","../src/components/field/FieldBody.vue","../src/components/field/Field.vue","../src/components/field/useFieldShare.ts","../src/composables/useInputHandler.ts","../src/composables/useDebounce.ts","../src/composables/useParentProvider.ts","../src/composables/useProgrammatic.ts","../src/composables/useClickOutside.ts","../src/composables/useScrollingParent.ts","../src/components/icon/Icon.vue","../src/components/input/Input.vue","../src/components/utils/PositionWrapper.vue","../src/directives/trapFocus.ts","../src/components/dropdown/Dropdown.vue","../src/components/dropdown/DropdownItem.vue","../src/components/autocomplete/Autocomplete.vue","../src/components/autocomplete/index.ts","../src/components/button/Button.vue","../src/components/button/index.ts","../src/components/carousel/Carousel.vue","../src/components/carousel/CarouselItem.vue","../src/components/carousel/index.ts","../src/components/checkbox/Checkbox.vue","../src/components/checkbox/index.ts","../src/components/collapse/Collapse.vue","../src/components/collapse/index.ts","../src/components/select/Select.vue","../src/components/utils/PickerWrapper.vue","../src/components/datepicker/utils.ts","../src/components/datepicker/useDatepickerMixins.ts","../src/components/datepicker/DatepickerTableRow.vue","../src/components/datepicker/DatepickerTable.vue","../src/components/datepicker/DatepickerMonth.vue","../src/components/datepicker/Datepicker.vue","../src/components/datepicker/index.ts","../src/components/timepicker/useTimepickerMixins.ts","../src/components/timepicker/Timepicker.vue","../src/components/datetimepicker/Datetimepicker.vue","../src/components/datetimepicker/index.ts","../src/components/dropdown/index.ts","../src/components/field/index.ts","../src/components/icon/index.ts","../src/components/input/index.ts","../src/components/loading/Loading.vue","../src/utils/InstanceRegistry.ts","../src/components/loading/LoadingProgrammatic.ts","../src/components/loading/index.ts","../src/components/menu/Menu.vue","../src/components/menu/MenuItem.vue","../src/components/menu/index.ts","../src/components/modal/Modal.vue","../src/components/modal/ModalProgrammatic.ts","../src/components/modal/index.ts","../src/components/notification/Notification.vue","../src/components/notification/NotificationNotice.vue","../src/components/notification/NotificationProgrammatic.ts","../src/components/notification/index.ts","../src/components/pagination/PaginationButton.vue","../src/components/pagination/Pagination.vue","../src/components/pagination/index.ts","../src/components/radio/Radio.vue","../src/components/radio/index.ts","../src/components/select/index.ts","../src/components/skeleton/Skeleton.vue","../src/components/skeleton/index.ts","../src/components/sidebar/Sidebar.vue","../src/components/sidebar/SidebarProgrammatic.ts","../src/components/sidebar/index.ts","../src/components/tooltip/Tooltip.vue","../src/components/slider/SliderThumb.vue","../src/components/slider/SliderTick.vue","../src/components/slider/Slider.vue","../src/components/slider/index.ts","../src/components/steps/Steps.vue","../src/components/steps/StepItem.vue","../src/components/steps/index.ts","../src/components/switch/Switch.vue","../src/components/switch/index.ts","../src/components/utils/SlotComponent.ts","../src/components/table/TableMobileSort.vue","../src/components/table/TableColumn.vue","../src/components/table/TablePagination.vue","../src/components/table/Table.vue","../src/components/table/index.ts","../src/components/tabs/Tabs.vue","../src/components/tabs/TabItem.vue","../src/components/tabs/index.ts","../src/components/taginput/Taginput.vue","../src/components/taginput/index.ts","../src/components/timepicker/index.ts","../src/components/tooltip/index.ts","../src/components/upload/Upload.vue","../src/components/upload/index.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Generates a random string\r\n */\r\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\r\n\r\n/**\r\n * +/- function to native math sign\r\n */\r\nfunction signPoly(value: number): number {\r\n    if (value < 0) return -1;\r\n    return value > 0 ? 1 : 0;\r\n}\r\nexport const sign = Math.sign || signPoly;\r\n\r\n/**\r\n * Native modulo bug with negative numbers\r\n * @param n\r\n * @param mod\r\n * @returns {number}\r\n */\r\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\r\n\r\n/**\r\n * Asserts a value is beetween min and max\r\n * @param val\r\n * @param min\r\n * @param max\r\n * @returns {number}\r\n */\r\nexport function bound(val: number, min: number, max: number): number {\r\n    return Math.max(min, Math.min(max, val));\r\n}\r\n\r\nexport const isObject = <T>(obj: T): boolean =>\r\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\r\n\r\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\r\n\r\nexport const blankIfUndefined = (value: string): string =>\r\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\r\n\r\nexport const defaultIfUndefined = <T>(\r\n    value: T | undefined,\r\n    defaultValue: T,\r\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\r\n\r\nexport const toCssDimension = (width: string | number): string | number =>\r\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\r\n\r\n/**\r\n * Extension of indexOf method by equality function if specified\r\n */\r\nexport function indexOf<T>(\r\n    array: T[],\r\n    obj: T,\r\n    fn: (value: T, array: T[]) => boolean,\r\n): number {\r\n    if (!array) return -1;\r\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\r\n    return array.findIndex((value, index, arr) => fn(value, arr));\r\n}\r\n\r\n/**\r\n * Deeply check if two values are equal\r\n */\r\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\r\n    // Check if only one value is empty.\r\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\r\n\r\n    // If both objects are identical, return true.\r\n    if (valueA === valueB) return true;\r\n\r\n    // Check if both values are objecs.\r\n    if (isObject(valueA) && isObject(valueB)) {\r\n        // Get the keys of both objects.\r\n        const keys1 = Object.keys(valueA);\r\n        const keys2 = Object.keys(valueB);\r\n\r\n        // Check if the number of keys is the same.\r\n        if (keys1.length !== keys2.length) return false;\r\n\r\n        // Iterate through the keys and compare their values recursively.\r\n        for (const key of keys1) {\r\n            const val1 = valueA[key];\r\n            const val2 = valueB[key];\r\n            const areObjects = isObject(val1) && isObject(val2);\r\n            if (\r\n                (areObjects && !isEqual(val1, val2)) ||\r\n                (!areObjects && val1 !== val2)\r\n            )\r\n                return false;\r\n        }\r\n        // If all checks pass, the objects are deep equal.\r\n        return true;\r\n    }\r\n\r\n    // Check if both values are arrays.\r\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\r\n        // Check if the number of keys is the same.\r\n        if (valueA.length !== valueB.length) return false;\r\n        // Check if each value of the array is the same.\r\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\r\n        // If all checks pass, the arrays are deep equal.\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Clone an obj with Object.assign\r\n */\r\nexport function clone<T extends object>(obj: T): T {\r\n    return Object.assign({}, obj);\r\n}\r\n\r\n/**\r\n * Merge function to replace Object.assign with deep merging possibility\r\n */\r\nexport function merge(target: any, source: any, deep = false): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n    if (!deep) return Object.assign(target, source);\r\n    else return mergeDeep(target, source);\r\n}\r\n\r\n/**\r\n * Performs a deep merge of `source` into `target`.\r\n * Mutates `target` only but not its objects and arrays.\r\n *\r\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\r\n */\r\nexport function mergeDeep(target: any, source: any): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n\r\n    Object.getOwnPropertyNames(source).forEach((key) => {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n\r\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n            target[key] = targetValue.concat(sourceValue);\r\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n            target[key] = mergeDeep(\r\n                Object.assign({}, targetValue),\r\n                sourceValue,\r\n            );\r\n        } else {\r\n            target[key] = sourceValue;\r\n        }\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Get a value of an object property/path even if it's nested\r\n */\r\nexport function getValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    defaultValue?: T,\r\n): T {\r\n    const value = path\r\n        .split(\".\")\r\n        .reduce(\r\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\r\n            obj,\r\n        ) as T;\r\n    return typeof value !== \"undefined\" ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Set a value of an object property/path even if it's nested\r\n */\r\nexport function setValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    value: T,\r\n): void {\r\n    const p = path.split(\".\");\r\n    if (p.length === 1) {\r\n        obj[path] = value;\r\n        return;\r\n    }\r\n    const field = p[0];\r\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\r\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\r\n}\r\n\r\nexport function removeElement(el: Element): void {\r\n    if (typeof el.remove !== \"undefined\") {\r\n        el.remove();\r\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n\r\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\r\n    const root = document.createElement(\"div\");\r\n    root.style.position = \"absolute\";\r\n    root.style.left = \"0px\";\r\n    root.style.top = \"0px\";\r\n    const wrapper = document.createElement(\"div\");\r\n    root.appendChild(wrapper);\r\n    wrapper.appendChild(el);\r\n    document.body.appendChild(root);\r\n    return root;\r\n}\r\n\r\n/**\r\n * Escape regex characters\r\n * http://stackoverflow.com/a/6969486\r\n */\r\nexport function escapeRegExpChars(value: string): string {\r\n    if (!value) return value;\r\n    // eslint-disable-next-line no-useless-escape\r\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\n/**\r\n * Remove accents/diacritics in a string in JavaScript\r\n * https://stackoverflow.com/a/37511463\r\n */\r\nexport function removeDiacriticsFromString(value: string): string {\r\n    if (!value) return value;\r\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * Mobile detection\r\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\r\n */\r\nexport const isMobileAgent = {\r\n    Android: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Android/i),\r\n    BlackBerry: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/BlackBerry/i),\r\n    iOS: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\r\n    Opera: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Opera Mini/i),\r\n    Windows: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/IEMobile/i),\r\n    any: (): boolean =>\r\n        isMobileAgent.Android() ||\r\n        isMobileAgent.BlackBerry() ||\r\n        isMobileAgent.iOS() ||\r\n        isMobileAgent.Opera() ||\r\n        isMobileAgent.Windows(),\r\n};\r\n","import { ref } from \"vue\";\r\nimport type { OrugaProgrammatic } from \"@/types\";\r\n\r\n/** Oruga object for programmatic components */\r\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\r\n\r\n/** Add components to the oruga object */\r\nexport function addProgrammatic(property: string, component: object): void {\r\n    oruga.value[property] = component;\r\n}\r\n\r\n/** Composable for internal and external usage of programmatic components*/\r\nexport function useOruga(): OrugaProgrammatic {\r\n    return oruga.value;\r\n}\r\n","import type { App, Component, Plugin } from \"vue\";\r\nimport { useOruga, addProgrammatic } from \"./programmatic\";\r\n\r\nexport let VueInstance: App;\r\n\r\n/** set the global vue instance */\r\nexport const setVueInstance = (Vue: App): void => {\r\n    VueInstance = Vue;\r\n};\r\n\r\n/** register a plugin to the vue app instance */\r\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\r\n    app.use(plugin);\r\n};\r\n\r\n/** register a component to the vue app instance */\r\nexport const registerComponent = (app: App, component: Component): void => {\r\n    app.component(component.name, component);\r\n};\r\n\r\n/** register a global programmatic component to the oruga object */\r\nexport const registerComponentProgrammatic = (\r\n    app: App,\r\n    property: string,\r\n    component: Component,\r\n): void => {\r\n    // set global vue instance\r\n    setVueInstance(app);\r\n    // use composable for unified access to programmatic oruga object\r\n    const oruga = useOruga();\r\n    // add component (manipulates the programmatic oruga object)\r\n    addProgrammatic(property, component);\r\n\r\n    // add provide and $oruga (only needed once)\r\n    if (!(app._context.provides && app._context.provides.oruga))\r\n        app.provide(\"oruga\", oruga);\r\n    if (!app.config.globalProperties.$oruga)\r\n        app.config.globalProperties.$oruga = oruga;\r\n};\r\n","import { ref, toRaw, type App } from \"vue\";\r\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\r\nimport { setVueInstance } from \"./plugins\";\r\nimport type { OrugaOptions } from \"@/types\";\r\n\r\ndeclare module \"../index\" {\r\n    interface OrugaProgrammatic {\r\n        config: typeof ConfigProgrammatic;\r\n    }\r\n}\r\n\r\nconst globalOptions = ref<OrugaOptions>({\r\n    iconPack: \"mdi\",\r\n    useHtml5Validation: true,\r\n    statusIcon: true,\r\n    transformClasses: undefined,\r\n});\r\n\r\nexport const setOptions = (options: OrugaOptions): void => {\r\n    globalOptions.value = options;\r\n};\r\n\r\nexport const getOptions = (): OrugaOptions => {\r\n    return clone(toRaw(globalOptions.value));\r\n};\r\n\r\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\r\n    return getValueByPath(globalOptions.value, path, defaultValue);\r\n};\r\n\r\nexport const setOption = <T>(path: string, defaultValue: T): void => {\r\n    setValueByPath(globalOptions.value, path, defaultValue);\r\n};\r\n\r\nexport const ConfigProgrammatic = {\r\n    getOption,\r\n    getOptions,\r\n    setOption,\r\n    setOptions(options: OrugaOptions): void {\r\n        setOptions(merge(getOptions(), options, true));\r\n    },\r\n};\r\n\r\nexport const OrugaConfig = {\r\n    install(app: App, options?: OrugaOptions): void {\r\n        // set global vue instance\r\n        setVueInstance(app);\r\n        // set options\r\n        setOptions(merge(getOptions(), options, true));\r\n    },\r\n};\r\n","import { getOption } from \"./config\";\r\nimport { merge } from \"./helpers\";\r\n\r\nexport type IconConfig = {\r\n    sizes?: { default: string; [key: string]: string };\r\n    iconPrefix?: string;\r\n    internalIcons?: Record<string, string>;\r\n};\r\n\r\nconst mdiIcons = {\r\n    sizes: {\r\n        default: \"mdi-24px\",\r\n        small: null,\r\n        medium: \"mdi-36px\",\r\n        large: \"mdi-48px\",\r\n    },\r\n    iconPrefix: \"mdi-\",\r\n};\r\n\r\nconst faIcons = () => {\r\n    const iconComponent = getOption(\"iconComponent\");\r\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\r\n    return {\r\n        sizes: {\r\n            default: null,\r\n            small: null,\r\n            medium: \"lg\",\r\n            large: \"2xl\",\r\n        },\r\n        iconPrefix: faIconPrefix,\r\n        internalIcons: {\r\n            check: \"check\",\r\n            information: \"info-circle\",\r\n            alert: \"exclamation-triangle\",\r\n            \"alert-circle\": \"exclamation-circle\",\r\n            \"arrow-up\": \"arrow-up\",\r\n            \"chevron-right\": \"angle-right\",\r\n            \"chevron-left\": \"angle-left\",\r\n            \"chevron-down\": \"angle-down\",\r\n            \"chevron-up\": \"angle-up\",\r\n            eye: \"eye\",\r\n            \"eye-off\": \"eye-slash\",\r\n            \"caret-down\": \"caret-down\",\r\n            \"caret-up\": \"caret-up\",\r\n            \"close-circle\": \"times-circle\",\r\n            close: \"times\",\r\n            loading: \"circle-notch\",\r\n        },\r\n    };\r\n};\r\n\r\nconst getIcons = (): Record<string, IconConfig> => {\r\n    let icons: Record<string, IconConfig> = {\r\n        mdi: mdiIcons,\r\n        fa: faIcons(),\r\n        fas: faIcons(),\r\n        far: faIcons(),\r\n        fad: faIcons(),\r\n        fab: faIcons(),\r\n        fal: faIcons(),\r\n    };\r\n\r\n    const customIconPacks =\r\n        getOption<Record<string, IconConfig>>(\"customIconPacks\");\r\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\r\n\r\n    return icons;\r\n};\r\n\r\nexport default getIcons;\r\n","import {\r\n    toValue,\r\n    type ComponentPublicInstance,\r\n    type MaybeRefOrGetter,\r\n    type MaybeRef,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nexport type MaybeElement =\r\n    | Element\r\n    | Document\r\n    | Window\r\n    | HTMLElement\r\n    | SVGElement\r\n    | Component\r\n    | ComponentPublicInstance\r\n    | undefined\r\n    | null;\r\n\r\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\r\n    T extends ComponentPublicInstance\r\n        ? Exclude<MaybeElement, ComponentPublicInstance>\r\n        : T extends Component\r\n          ? HTMLElement\r\n          : T | undefined;\r\n\r\n/**\r\n * Get the dom element of a ref of element or Vue component instance\r\n *\r\n * @param elRef\r\n */\r\nexport function unrefElement<T extends MaybeElement>(\r\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\r\n): UnRefElementReturn<T> {\r\n    const plain = toValue(elRef);\r\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\r\n}\r\n","import {\r\n    ref,\r\n    watch,\r\n    isRef,\r\n    toValue,\r\n    getCurrentInstance,\r\n    effectScope,\r\n    onScopeDispose,\r\n    getCurrentScope,\r\n    type MaybeRefOrGetter,\r\n    type Ref,\r\n    type ComponentInternalInstance,\r\n} from \"vue\";\r\n\r\nimport { getOptions } from \"@/utils/config\";\r\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\r\n\r\nimport type {\r\n    ClassBind,\r\n    ClassDefinition,\r\n    ComponentProps,\r\n    TransformFunction,\r\n} from \"@/types\";\r\n\r\n// named tuple as prop definition\r\ntype ComputedClass = readonly [\r\n    className: string,\r\n    defaultClass: string,\r\n    suffix?: MaybeRefOrGetter<string>,\r\n    apply?: MaybeRefOrGetter<boolean>,\r\n];\r\n\r\n/** Helperfunction to get all active classes from a class binding list */\r\nexport const getActiveClasses = (classes: ClassBind[]): string[] => {\r\n    if (!classes) return [];\r\n    return classes.flatMap((bind) =>\r\n        Object.keys(bind).filter((key) => key && bind[key]),\r\n    );\r\n};\r\n\r\n/**\r\n * Calculate dynamic classes based on class definitions\r\n */\r\nexport function defineClasses(\r\n    ...classDefinitions: ComputedClass[]\r\n): Ref<ClassBind[]> {\r\n    // getting a hold of the internal instance of the component in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"defineClasses must be called within a component setup function.\",\r\n        );\r\n\r\n    // create an effect scope object to capture reactive effects\r\n    const scope = effectScope();\r\n\r\n    // reactive classes container\r\n    const classes = ref<ClassBind[]>([]);\r\n\r\n    classes.value = classDefinitions.map((defintion, index) => {\r\n        const className = defintion[0];\r\n        const defaultClass = defintion[1];\r\n        const suffix = defintion[2];\r\n        const apply = defintion[3];\r\n\r\n        function getClassBind(): ClassBind {\r\n            // compute class based on definition parameter\r\n            const computedClass = computeClass(\r\n                vm,\r\n                className,\r\n                defaultClass,\r\n                toValue(suffix),\r\n            );\r\n\r\n            // if apply is not defined or true\r\n            const applied = !isDefined(apply) || toValue(apply);\r\n\r\n            // return class bind property\r\n            return { [computedClass]: applied };\r\n        }\r\n\r\n        // if suffix is defined, watch suffix changed and recalculate class\r\n        if (isDefined(suffix) && isRef(suffix)) {\r\n            scope.run(() => {\r\n                watch(\r\n                    () => toValue(suffix),\r\n                    (value, oldValue) => {\r\n                        // only recompute when value has really changed\r\n                        if (value === oldValue) return;\r\n                        // recompute the class bind property\r\n                        const classBind = getClassBind();\r\n                        // update class binding property by class index\r\n                        classes.value[index] = classBind;\r\n                    },\r\n                );\r\n            });\r\n        }\r\n\r\n        // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\r\n        if (isDefined(apply) && isRef(apply)) {\r\n            scope.run(() => {\r\n                watch(\r\n                    () => toValue(apply),\r\n                    (applied, oldValue) => {\r\n                        // only change apply when value has really changed\r\n                        if (applied === oldValue) return;\r\n\r\n                        // get class binding property by class index\r\n                        const classBind = classes.value[index];\r\n\r\n                        // update the apply class binding state\r\n                        Object.keys(classBind).forEach(\r\n                            (key) => (classBind[key] = applied),\r\n                        );\r\n\r\n                        // update the class binding property by class index\r\n                        classes.value[index] = classBind;\r\n                    },\r\n                );\r\n            });\r\n        }\r\n\r\n        // return computed class based on parameter\r\n        return getClassBind();\r\n    });\r\n\r\n    // check if there is a current active effect scope\r\n    if (getCurrentScope())\r\n        // Registers a dispose callback on the current active effect scope.\r\n        // The callback will be invoked when the associated effect scope is stopped.\r\n        onScopeDispose(() => {\r\n            // stop all effects when appropriate\r\n            if (scope) scope.stop();\r\n        });\r\n\r\n    // return reactive classes\r\n    return classes;\r\n}\r\n\r\n/**\r\n * Compute a class by a field name\r\n */\r\nfunction computeClass(\r\n    vm: ComponentInternalInstance,\r\n    field: string,\r\n    defaultValue?: string,\r\n    suffix = \"\",\r\n): string {\r\n    // get component props\r\n    const props = vm.props;\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    if (!configField)\r\n        throw new Error(\"component must define the 'configField' option.\");\r\n\r\n    // get component instance override property\r\n    const config = props.override === true ? {} : getOptions();\r\n\r\n    // get global config override property\r\n    const globalOverride =\r\n        props.override || getValueByPath(config, \"override\", false);\r\n    // get component config override property\r\n    const localOverride = getValueByPath(\r\n        config,\r\n        `${configField}.override`,\r\n        globalOverride,\r\n    );\r\n    // get field specific config override property\r\n    const overrideClass = getValueByPath(\r\n        config,\r\n        `${configField}.${field}.override`,\r\n        localOverride,\r\n    );\r\n\r\n    // get global tranform class\r\n    const globalTransformClasses = getValueByPath<TransformFunction>(\r\n        config,\r\n        \"transformClasses\",\r\n        undefined,\r\n    );\r\n    // get field specific tranform class\r\n    const localTransformClasses = getValueByPath<TransformFunction>(\r\n        config,\r\n        `${configField}.transformClasses`,\r\n        undefined,\r\n    );\r\n\r\n    // get config class definition\r\n    let globalClass =\r\n        getValueByPath<ClassDefinition>(\r\n            config,\r\n            `${configField}.${field}.class`,\r\n            \"\",\r\n        ) ||\r\n        getValueByPath<ClassDefinition>(config, `${configField}.${field}`, \"\");\r\n    // get instance class override\r\n    let currentClass = getValueByPath<ClassDefinition>(props, field, \"\");\r\n\r\n    // procsess instance class\r\n    if (Array.isArray(currentClass)) {\r\n        currentClass = currentClass.join(\" \");\r\n    }\r\n    if (typeof currentClass === \"function\") {\r\n        const props = getProps(vm);\r\n        currentClass = currentClass(suffix, props);\r\n    } else {\r\n        currentClass = suffixProcessor(currentClass as string, suffix);\r\n    }\r\n\r\n    // process confic class\r\n    if (Array.isArray(globalClass)) {\r\n        globalClass = globalClass.join(\" \");\r\n    }\r\n    if (typeof globalClass === \"function\") {\r\n        const props = getProps(vm);\r\n        globalClass = globalClass(suffix, props);\r\n    } else {\r\n        globalClass = suffixProcessor(globalClass as string, suffix);\r\n    }\r\n\r\n    // process default value\r\n    if (defaultValue.includes(\"{*}\")) {\r\n        defaultValue = defaultValue.replace(\r\n            /\\{\\*\\}/g,\r\n            blankIfUndefined(suffix),\r\n        );\r\n    } else {\r\n        defaultValue = defaultValue + blankIfUndefined(suffix);\r\n    }\r\n\r\n    // if override is false add default value\r\n    // add global config classes\r\n    // add instance classes\r\n    let appliedClasses = (\r\n        `${!overrideClass ? defaultValue : \"\"} ` +\r\n        `${blankIfUndefined(globalClass)} ` +\r\n        `${blankIfUndefined(currentClass)}`\r\n    )\r\n        .trim()\r\n        .replace(/\\s\\s+/g, \" \");\r\n\r\n    // apply component local transformclass if available\r\n    if (localTransformClasses) {\r\n        appliedClasses = localTransformClasses(appliedClasses);\r\n    }\r\n    // else apply global transformclass if available\r\n    else if (globalTransformClasses) {\r\n        appliedClasses = globalTransformClasses(appliedClasses);\r\n    }\r\n\r\n    return appliedClasses;\r\n}\r\n\r\nfunction suffixProcessor(input: string, suffix: string): string {\r\n    return blankIfUndefined(input)\r\n        .split(\" \")\r\n        .filter((cls) => cls.length > 0)\r\n        .map((cls) => cls + blankIfUndefined(suffix))\r\n        .join(\" \");\r\n}\r\n\r\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\r\n    let props = vm.proxy.$props;\r\n\r\n    // get all props which ends with \"Props\", these are compressed parent props\r\n    // append these parent props as root level prop\r\n    Object.keys(props)\r\n        .filter((key) => key.endsWith(\"Props\"))\r\n        .forEach((key) => (props = { ...props, ...props[key] }));\r\n\r\n    // TODO: revert object escape\r\n    return { props };\r\n};\r\n","import {\r\n    computed,\r\n    ref,\r\n    watch,\r\n    nextTick,\r\n    type ExtractPropTypes,\r\n    type WritableComputedRef,\r\n    type Ref,\r\n    type UnwrapRef,\r\n    type ComponentObjectPropsOptions,\r\n} from \"vue\";\r\n\r\n/**\r\n * Adaption of {@link https://vueuse.org/core/useVModel/} options.\r\n */\r\nexport interface PropBindingOptions<Passive extends boolean = false> {\r\n    /**\r\n     * When passive is set to `true`, it will use `watch` to sync with props and ref.\r\n     * Instead of relying on the `v-model` or `.sync` to work.\r\n     *\r\n     * @default false\r\n     */\r\n    passive?: Passive;\r\n    /**\r\n     * When eventName is set, it's value will be used to overwrite the emit event name.\r\n     *\r\n     * @default undefined\r\n     */\r\n    eventName?: string;\r\n    /**\r\n     * Attempting to check for changes of properties in a deeply nested object or array.\r\n     * Apply only when `passive` option is set to `true`\r\n     *\r\n     * @default false\r\n     */\r\n    deep?: boolean;\r\n}\r\n\r\nexport function usePropBinding<T>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<false>,\r\n): WritableComputedRef<T>;\r\n\r\nexport function usePropBinding<T>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<true>,\r\n): Ref<UnwrapRef<T>>;\r\n\r\n/**\r\n * Use two-way model binding in script setup syntax.\r\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\r\n * @param name Property name\r\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\r\n * @param emit EmitFn\r\n * @param options Extened usage options\r\n * @returns Ref<T>\r\n */\r\nexport function usePropBinding<T, Passive extends boolean>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<Passive>,\r\n): Ref<UnwrapRef<T>> | WritableComputedRef<T> {\r\n    const event = options?.eventName || `update:${name!.toString()}`;\r\n\r\n    if (options?.passive) {\r\n        const proxy = ref<T>(props[name!]);\r\n        let isUpdating = false;\r\n\r\n        watch(\r\n            () => props[name!],\r\n            (value) => {\r\n                if (!isUpdating) {\r\n                    isUpdating = true;\r\n                    proxy.value = value;\r\n                    nextTick(() => (isUpdating = false));\r\n                }\r\n            },\r\n        );\r\n\r\n        watch(\r\n            proxy,\r\n            (value) => {\r\n                if ((!isUpdating && value !== props[name!]) || options.deep)\r\n                    emit(event, value as T);\r\n            },\r\n            { deep: options.deep },\r\n        );\r\n\r\n        return proxy;\r\n    } else {\r\n        return computed<T>({\r\n            get() {\r\n                return props[name!] as T;\r\n            },\r\n            set(value) {\r\n                emit(event, value);\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport function useVModelBinding<T>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: PropBindingOptions<false>,\r\n): WritableComputedRef<T>;\r\n\r\nexport function useVModelBinding<T>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: PropBindingOptions<true>,\r\n): Ref<UnwrapRef<T>>;\r\n\r\n/**\r\n * Use two-way binded modelValue property in script setup syntax.\r\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\r\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\r\n * @param emit EmitFn\r\n * @param options Extened usage options\r\n * @returns Ref<T>\r\n */\r\nexport function useVModelBinding<T, Options extends PropBindingOptions>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: Options,\r\n): WritableComputedRef<T> | Ref<UnwrapRef<T>> {\r\n    return usePropBinding(\"modelValue\", props, emit, options);\r\n}\r\n","import {\r\n    onBeforeUnmount,\r\n    onMounted,\r\n    type MaybeRefOrGetter,\r\n    type Component,\r\n} from \"vue\";\r\nimport { isObject } from \"@/utils/helpers\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\ntype EventTarget = Element | Document | Window | Component;\r\ntype EventListenerOptions = AddEventListenerOptions & {\r\n    /** Register event listener immediate or on mounted hook. */\r\n    immediate?: boolean;\r\n};\r\n\r\n/**\r\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\r\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\r\n *\r\n * @param event event name\r\n * @param listener event listener function\r\n * @param el default docuemnt\r\n * @return stop function\r\n */\r\nexport function useEventListener(\r\n    event: string,\r\n    listener: (evt?: any) => any,\r\n    el: MaybeRefOrGetter<EventTarget> = document,\r\n    options?: EventListenerOptions,\r\n): () => void {\r\n    let cleanup: () => void;\r\n\r\n    const register = (): void => {\r\n        if (!el) return;\r\n\r\n        const target = unrefElement(el);\r\n        // create a clone of options, to avoid it being changed reactively on removal\r\n        const optionsClone = isObject(options) ? { ...options } : options;\r\n        target.addEventListener(event, listener, optionsClone);\r\n        cleanup = (): void =>\r\n            target.removeEventListener(event, listener, optionsClone);\r\n    };\r\n\r\n    const stop = (): void => {\r\n        if (typeof cleanup === \"function\") cleanup();\r\n    };\r\n\r\n    if (options?.immediate) register();\r\n    else {\r\n        onMounted(() => register());\r\n        onBeforeUnmount(() => stop());\r\n    }\r\n\r\n    return stop;\r\n}\r\n","// Polyfills for SSR\r\n\r\nexport const isClient = typeof window !== \"undefined\";\r\nexport const isSSR = typeof window === \"undefined\";\r\n\r\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\r\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\r\nexport const File = isSSR ? Object : window.File;\r\n","import { getCurrentInstance, ref } from \"vue\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { isClient } from \"@/utils/ssr\";\r\n\r\n/**\r\n * Checks if the match media is mobile.\r\n * @param mobileBreakpoint px breakpoint\r\n */\r\nexport function useMatchMedia(mobileBreakpoint?: string) {\r\n    const isMobile = ref(false);\r\n    const mediaQuery = ref();\r\n\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useMatchMedia must be called within a component setup function.\",\r\n        );\r\n    // get component props\r\n    const props = vm.props;\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    if (!configField)\r\n        throw new Error(\"component must define the 'configField' option.\");\r\n\r\n    // get mobileBreakpoint width value\r\n    let width = props.mobileBreakpoint;\r\n    if (!width) {\r\n        const defaultWidth = getOption(\r\n            `mobileBreakpoint`,\r\n            mobileBreakpoint || \"1023px\",\r\n        );\r\n\r\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\r\n    }\r\n\r\n    // define match media query ref\r\n    mediaQuery.value = isClient\r\n        ? window.matchMedia(`(max-width: ${width})`)\r\n        : undefined;\r\n\r\n    if (mediaQuery.value) {\r\n        isMobile.value = mediaQuery.value.matches;\r\n        useEventListener(\"change\", onMatchMedia, mediaQuery.value);\r\n    } else {\r\n        isMobile.value = false;\r\n    }\r\n\r\n    function onMatchMedia(event: any): void {\r\n        isMobile.value = event.matches;\r\n    }\r\n\r\n    return { isMobile };\r\n}\r\n","<script lang=\"ts\">\r\nimport {\r\n    defineComponent,\r\n    h,\r\n    resolveComponent,\r\n    Comment,\r\n    Text,\r\n    useSlots,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport { injectField } from \"./useFieldShare\";\r\n\r\nimport type { ClassBind } from \"@/types\";\r\n\r\nexport default defineComponent({\r\n    name: \"OFieldBody\",\r\n    configField: \"field\",\r\n    props: {\r\n        classes: {\r\n            type: Array as PropType<ClassBind[]>,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props) {\r\n        // inject parent field component if used inside one\r\n        const { parentField } = injectField();\r\n\r\n        const slots = useSlots();\r\n\r\n        return () => {\r\n            let first = true;\r\n            const slot = slots.default();\r\n            const children =\r\n                slot.length === 1 && Array.isArray(slot[0].children)\r\n                    ? slot[0].children\r\n                    : slot;\r\n            return h(\r\n                \"div\",\r\n                { class: props.classes },\r\n                children.map((element: any) => {\r\n                    let message;\r\n                    if (element.type === Comment || element.type === Text) {\r\n                        return element;\r\n                    }\r\n                    if (first) {\r\n                        message = parentField.value.fieldMessage;\r\n                        first = false;\r\n                    }\r\n                    return h(\r\n                        resolveComponent(\"OField\"),\r\n                        {\r\n                            variant: parentField.value.fieldVariant,\r\n                            message,\r\n                        },\r\n                        () => [element],\r\n                    );\r\n                }),\r\n            );\r\n        };\r\n    },\r\n});\r\n</script>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, watch, type PropType } from \"vue\";\r\n\r\nimport OFieldBody from \"./FieldBody.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useMatchMedia } from \"@/composables\";\r\n\r\nimport { injectField, provideField } from \"../field/useFieldShare\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Fields are used to add functionality to controls and to attach/group components and elements together\r\n * @displayName Field\r\n * @style _field.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OField\",\r\n    configField: \"field\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /**\r\n     * Color of the field and help message, also adds a matching icon.\r\n     * Used by Input, Select and Autocomplete.\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: { type: String, default: undefined },\r\n    /** Field label */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Vertical size of input\r\n     * @values small, medium, large\r\n     */\r\n    labelSize: {\r\n        type: String,\r\n        default: () => getOption(\"field.labelsize\"),\r\n    },\r\n    /** Same as native for set on the label */\r\n    labelFor: { type: String, default: undefined },\r\n    /** Help message text */\r\n    message: { type: String, default: undefined },\r\n    /**\r\n     * Direct child components/elements of Field will be grouped horizontally\r\n     * (see which ones at the top of the page).\r\n     */\r\n    grouped: { type: Boolean, default: false },\r\n    /** Allow controls to fill up multiple lines, making it responsive */\r\n    groupMultiline: { type: Boolean, default: false },\r\n    /** Group label and control on the same line for horizontal forms */\r\n    horizontal: { type: Boolean, default: false },\r\n    /** Field automatically attach controls together */\r\n    addons: { type: Boolean, default: true },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"field.mobileBreakpoint\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to align label and control in horizontal forms */\r\n    horizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when fields are grouped together */\r\n    groupedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when fields fill up multiple lines */\r\n    groupMultilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label size */\r\n    labelSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label when horizontal */\r\n    labelHorizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field body */\r\n    bodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** \"Class for field body when horizontal */\r\n    bodyHorizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for components automatically attached together when inside a field */\r\n    addonsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the field message */\r\n    messageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the message field variant */\r\n    variantMessageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the label field variant */\r\n    variantLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of file component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the focused field */\r\n    focusedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the filled field */\r\n    filledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\n/** Set internal variant when prop change. */\r\nconst fieldVariant = ref(props.variant);\r\nwatch(\r\n    () => props.variant,\r\n    (v) => (fieldVariant.value = v),\r\n);\r\n\r\n/** Set internal message when prop change. */\r\nconst fieldMessage = ref(props.message);\r\nwatch(\r\n    () => props.message,\r\n    (v) => (fieldMessage.value = v),\r\n);\r\n\r\n/** this can be set from outside to update the focus state. */\r\nconst isFocused = ref(false);\r\n/** this can be set from outside to update the filled state. */\r\nconst isFilled = ref(false);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField } = injectField();\r\n\r\n/** Set parent message if we use Field in Field. */\r\nwatch(\r\n    () => fieldMessage.value,\r\n    (value) => {\r\n        if (parentField?.value?.hasInnerField) {\r\n            if (!parentField.value.fieldVariant)\r\n                parentField.value.setVariant(fieldVariant.value);\r\n            if (!parentField.value.fieldMessage)\r\n                parentField.value.setMessage(value);\r\n        }\r\n    },\r\n);\r\n\r\nconst slots = useSlots();\r\n\r\nconst hasLabel = computed(() => props.label || !!slots.label);\r\n\r\nconst hasMessage = computed(\r\n    () =>\r\n        !!(!parentField?.value?.hasInnerField && fieldMessage.value) ||\r\n        !!slots.message,\r\n);\r\n\r\nconst hasInnerField = computed(\r\n    () => props.grouped || props.groupMultiline || hasAddons(),\r\n);\r\n\r\nfunction hasAddons(): boolean {\r\n    if (!props.addons || props.horizontal) return false;\r\n\r\n    let renderedNode = 0;\r\n    // [Vue warn]: Slot \"default\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\r\n    const slot = slots.default();\r\n    if (slot) {\r\n        const children =\r\n            slot.length === 1 && Array.isArray(slot[0].children)\r\n                ? slot[0].children\r\n                : slot;\r\n        renderedNode = children.filter((n) => !!n).length;\r\n    }\r\n    return renderedNode > 1 && props.addons && !props.horizontal;\r\n}\r\n\r\n// --- Field Dependency Injection Feature ---\r\n\r\nconst rootRef = ref();\r\n\r\nfunction setFocus(value: boolean): void {\r\n    isFocused.value = value;\r\n}\r\nfunction setFilled(value: boolean): void {\r\n    isFilled.value = value;\r\n}\r\nfunction setVariant(value: string): void {\r\n    fieldVariant.value = value;\r\n}\r\nfunction setMessage(value: string): void {\r\n    fieldMessage.value = value;\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed(() => ({\r\n    $el: rootRef.value,\r\n    props,\r\n    hasInnerField: hasInnerField.value,\r\n    hasMessage: hasMessage.value,\r\n    fieldVariant: fieldVariant.value,\r\n    fieldMessage: fieldMessage.value,\r\n    setFocus,\r\n    setFilled,\r\n    setVariant,\r\n    setMessage,\r\n}));\r\n\r\n// Provide field component data via dependency injection.\r\nprovideField(provideData);\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-field\"],\r\n    [\r\n        \"horizontalClass\",\r\n        \"o-field--horizontal\",\r\n        null,\r\n        computed(() => !!props.horizontal),\r\n    ],\r\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\r\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\r\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\r\n);\r\n\r\nconst messageClasses = defineClasses(\r\n    [\"messageClass\", \"o-field__message\"],\r\n    [\r\n        \"variantMessageClass\",\r\n        \"o-field__message-\",\r\n        fieldVariant,\r\n        computed(() => !!fieldVariant.value),\r\n    ],\r\n);\r\n\r\nconst labelClasses = defineClasses(\r\n    [\"labelClass\", \"o-field__label\"],\r\n    [\r\n        \"labelSizeClass\",\r\n        \"o-field__label-\",\r\n        computed(() => props.labelSize),\r\n        computed(() => !!props.labelSize),\r\n    ],\r\n    [\r\n        \"variantLabelClass\",\r\n        \"o-field__label-\",\r\n        fieldVariant,\r\n        computed(() => !!fieldVariant.value),\r\n    ],\r\n);\r\n\r\nconst labelHorizontalClasses = defineClasses([\r\n    \"labelHorizontalClass\",\r\n    \"o-field__horizontal-label\",\r\n]);\r\n\r\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\r\n\r\nconst bodyHorizontalClasses = defineClasses([\r\n    \"bodyHorizontalClass\",\r\n    \"o-field__horizontal-body\",\r\n]);\r\n\r\nconst innerFieldClasses = defineClasses(\r\n    [\"rootClass\", \"o-field\"],\r\n    [\r\n        \"groupMultilineClass\",\r\n        \"o-field--grouped-multiline\",\r\n        null,\r\n        computed(() => props.groupMultiline),\r\n    ],\r\n\r\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\r\n    [\r\n        \"addonsClass\",\r\n        \"o-field--addons\",\r\n        null,\r\n        computed(() => !props.grouped && hasAddons()),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" data-oruga=\"field\" :class=\"rootClasses\">\r\n        <div v-if=\"horizontal\" :class=\"labelHorizontalClasses\">\r\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label\r\n                -->\r\n                <slot name=\"label\">{{ label }}</slot>\r\n            </label>\r\n        </div>\r\n        <template v-else>\r\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label\r\n                -->\r\n                <slot name=\"label\">{{ label }}</slot>\r\n            </label>\r\n        </template>\r\n\r\n        <o-field-body v-if=\"horizontal\" :classes=\"bodyHorizontalClasses\">\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </o-field-body>\r\n\r\n        <div v-else-if=\"hasInnerField\" :class=\"bodyClasses\">\r\n            <div :class=\"innerFieldClasses\">\r\n                <!--\r\n                   @slot Default content\r\n                -->\r\n                <slot />\r\n            </div>\r\n        </div>\r\n\r\n        <template v-else>\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </template>\r\n\r\n        <p v-if=\"hasMessage && !horizontal\" :class=\"messageClasses\">\r\n            <!--\r\n                @slot Override the message\r\n            -->\r\n            <slot name=\"message\"> {{ fieldMessage }} </slot>\r\n        </p>\r\n    </div>\r\n</template>\r\n","import { computed, inject, provide, type ComputedRef } from \"vue\";\r\n\r\nimport Field from \"./Field.vue\";\r\nimport { getOption } from \"@/utils/config\";\r\n\r\nexport type FieldProps = InstanceType<typeof Field>[\"$props\"];\r\n\r\ntype FieldData = {\r\n    $el: Element;\r\n    props: FieldProps;\r\n    hasInnerField: boolean;\r\n    hasMessage: boolean;\r\n    fieldVariant: string;\r\n    fieldMessage: string;\r\n    setFocus: (value: boolean) => void;\r\n    setFilled: (value: boolean) => void;\r\n    setVariant: (value: string) => void;\r\n    setMessage: (value: string) => void;\r\n};\r\n\r\n/** provide/inject key */\r\nconst $field = Symbol();\r\n\r\n/** provide/inject type */\r\ntype ProvidedField = ComputedRef<FieldData>;\r\n\r\n/**\r\n * Provide field component data via dependency injection.\r\n * Provided data is a computed ref to enjure reactivity.\r\n */\r\nexport function provideField(data: ProvidedField): void {\r\n    provide<ProvidedField>($field, data);\r\n}\r\n\r\n/** Inject parent field component if used inside one. **/\r\nexport function injectField() {\r\n    const parentField = inject<ProvidedField>($field, undefined);\r\n\r\n    /**\r\n     * Get the type prop from parent if it's a Field.\r\n     */\r\n    const statusVariant = computed(() => {\r\n        if (!parentField?.value) return undefined;\r\n        else if (!parentField.value.fieldVariant) return undefined;\r\n        else {\r\n            if (typeof parentField.value.fieldVariant === \"string\") {\r\n                return parentField.value.fieldVariant;\r\n            } else if (Array.isArray(parentField.value.fieldVariant)) {\r\n                for (const key in parentField.value.fieldVariant as any) {\r\n                    if (parentField.value.fieldVariant[key]) {\r\n                        return key;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    /**\r\n     * Get the message prop from parent if it's a Field.\r\n     */\r\n    const statusMessage = computed(() =>\r\n        !parentField.value\r\n            ? parentField.value.fieldMessage || parentField.value.hasMessage\r\n            : \"\",\r\n    );\r\n\r\n    /**\r\n     * Icon name based on the variant.\r\n     */\r\n    const statusVariantIcon = computed<string>(() => {\r\n        const statusVariantIcon = getOption(\"statusVariantIcon\", {\r\n            success: \"check\",\r\n            danger: \"alert-circle\",\r\n            info: \"information\",\r\n            warning: \"alert\",\r\n        });\r\n        return statusVariantIcon[statusVariant.value] || \"\";\r\n    });\r\n\r\n    return {\r\n        parentField,\r\n        statusVariant,\r\n        statusVariantIcon,\r\n        statusMessage,\r\n    };\r\n}\r\n","import {\r\n    nextTick,\r\n    ref,\r\n    computed,\r\n    type ExtractPropTypes,\r\n    type MaybeRefOrGetter,\r\n    type Component,\r\n} from \"vue\";\r\nimport { injectField } from \"@/components/field/useFieldShare\";\r\nimport { unrefElement } from \"./unrefElement\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isSSR } from \"@/utils/ssr\";\r\n\r\n// This should cover all types of HTML elements that have properties related to\r\n// HTML constraint validation, e.g. .form and .validity.\r\nconst validatableFormElementTypes = isSSR\r\n    ? []\r\n    : [\r\n          HTMLButtonElement,\r\n          HTMLFieldSetElement,\r\n          HTMLInputElement,\r\n          HTMLObjectElement,\r\n          HTMLOutputElement,\r\n          HTMLSelectElement,\r\n          HTMLTextAreaElement,\r\n      ];\r\n\r\nexport type ValidatableFormElement = InstanceType<\r\n    (typeof validatableFormElementTypes)[number]\r\n>;\r\n\r\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\r\n    return validatableFormElementTypes.some((t) => el instanceof t)\r\n        ? (el as ValidatableFormElement)\r\n        : null;\r\n}\r\n\r\n/**\r\n * Form input handler functionalities\r\n */\r\nexport function useInputHandler(\r\n    /** input ref element - can be a html element or a vue component*/\r\n    inputRef: MaybeRefOrGetter<ValidatableFormElement | Component>,\r\n    /** emitted input events */\r\n    emits: {\r\n        /** on input focus event */\r\n        (e: \"focus\", value: Event): void;\r\n        /** on input blur event */\r\n        (e: \"blur\", value: Event): void;\r\n        /** on input invalid event */\r\n        (e: \"invalid\", value: Event): void;\r\n    },\r\n    /** validation configuration props */\r\n    props: Readonly<\r\n        ExtractPropTypes<{\r\n            useHtml5Validation?: boolean;\r\n            validationMessage?: string;\r\n        }>\r\n    >,\r\n) {\r\n    // inject parent field component if used inside one\r\n    const { parentField } = injectField();\r\n\r\n    const element = computed<ValidatableFormElement>(() => {\r\n        const el = unrefElement<Component | HTMLElement>(inputRef);\r\n        if (!el) {\r\n            console.warn(\"useInputHandler: inputRef contains no element\");\r\n            return undefined;\r\n        }\r\n        if (el.getAttribute(\"data-oruga-input\"))\r\n            // if element is the input element\r\n            return el as ValidatableFormElement;\r\n\r\n        const inputs = el.querySelector(\"[data-oruga-input]\");\r\n\r\n        if (!inputs) {\r\n            console.warn(\r\n                \"useInputHandler: Underlaying Oruga input component not found\",\r\n            );\r\n            return undefined;\r\n        }\r\n        // return underlaying the input element\r\n        return inputs as ValidatableFormElement;\r\n    });\r\n\r\n    // --- Input Focus Feature ---\r\n\r\n    const isFocused = ref(false);\r\n\r\n    /** Focus the underlaying input element. */\r\n    function setFocus(): void {\r\n        nextTick(() => {\r\n            if (element.value) element.value.focus();\r\n        });\r\n    }\r\n\r\n    /** Click the underlaying input element. */\r\n    function doClick(): void {\r\n        nextTick(() => {\r\n            if (element.value) element.value.click();\r\n        });\r\n    }\r\n\r\n    function onBlur(event?: Event): void {\r\n        isFocused.value = false;\r\n        if (parentField?.value) parentField.value.setFocus(false);\r\n        emits(\"blur\", event);\r\n        checkHtml5Validity();\r\n    }\r\n\r\n    function onFocus(event?: Event): void {\r\n        isFocused.value = true;\r\n        if (parentField?.value) parentField.value.setFocus(true);\r\n        emits(\"focus\", event);\r\n    }\r\n\r\n    // --- Validation Feature ---\r\n\r\n    const isValid = ref(true);\r\n\r\n    function setFieldValidity(variant, message): void {\r\n        nextTick(() => {\r\n            if (parentField?.value) {\r\n                // Set type only if not defined\r\n                if (!parentField.value.props.variant) {\r\n                    parentField.value.setVariant(variant);\r\n                }\r\n                // Set message only if not defined\r\n                if (!parentField.value.props.message) {\r\n                    parentField.value.setMessage(message);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check HTML5 validation, set isValid property.\r\n     * If validation fail, send 'danger' type,\r\n     * and error message to parent if it's a Field.\r\n     */\r\n    function checkHtml5Validity(): boolean {\r\n        if (!props.useHtml5Validation) return;\r\n\r\n        if (!element.value) return;\r\n        if (element.value.validity.valid) {\r\n            setFieldValidity(null, null);\r\n            isValid.value = true;\r\n        } else {\r\n            setInvalid();\r\n            isValid.value = false;\r\n        }\r\n\r\n        return isValid.value;\r\n    }\r\n\r\n    function setInvalid(): void {\r\n        const variant = \"danger\";\r\n        const message =\r\n            props.validationMessage || element.value.validationMessage;\r\n        setFieldValidity(variant, message);\r\n    }\r\n\r\n    function onInvalid(event: Event): void {\r\n        checkHtml5Validity();\r\n        const validatable = asValidatableFormElement(event.target);\r\n        if (validatable && parentField?.value && props.useHtml5Validation) {\r\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\r\n            // We still want to focus the form's first invalid input, though.\r\n            event.preventDefault();\r\n            let isFirstInvalid = false;\r\n            if (validatable.form != null) {\r\n                const formElements = validatable.form.elements;\r\n                for (let i = 0; i < formElements.length; ++i) {\r\n                    const element = asValidatableFormElement(\r\n                        formElements.item(i),\r\n                    );\r\n                    if (element?.willValidate && !element.validity.valid) {\r\n                        isFirstInvalid = validatable === element;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isFirstInvalid) {\r\n                const fieldElement = parentField.value.$el;\r\n                const invalidHandler = getOption(\"invalidHandler\");\r\n                if (invalidHandler instanceof Function) {\r\n                    invalidHandler(validatable, fieldElement);\r\n                } else {\r\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\r\n                    // which should mean that the message will be visible onscreen.\r\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\r\n                    // If we can't use it, we'll just fall back to focusing the field.\r\n                    const canScrollToField = fieldElement\r\n                        ? fieldElement.scrollIntoView != undefined\r\n                        : false;\r\n                    validatable.focus({ preventScroll: canScrollToField });\r\n                    if (canScrollToField) {\r\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        emits(\"invalid\", event);\r\n    }\r\n\r\n    return {\r\n        isFocused,\r\n        isValid,\r\n        setFocus,\r\n        doClick,\r\n        onFocus,\r\n        onBlur,\r\n        checkHtml5Validity,\r\n        onInvalid,\r\n    };\r\n}\r\n","/**\r\n * Debounce a function\r\n * @param func function to debounce\r\n * @param wait debounce time to wait\r\n * @param immediate call immediate\r\n * @returns function to call\r\n */\r\nexport function useDebounce<A extends Array<unknown>>(\r\n    func: (...args: A) => void,\r\n    wait: number,\r\n    immediate?: boolean,\r\n): (...args: A) => void {\r\n    let timeout: NodeJS.Timeout;\r\n    return (...args: A) => {\r\n        const later = () => {\r\n            timeout = null;\r\n            if (!immediate) func.apply(this, args);\r\n        };\r\n        const callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(this, args);\r\n    };\r\n}\r\n","import {\r\n    computed,\r\n    getCurrentInstance,\r\n    inject,\r\n    nextTick,\r\n    onUnmounted,\r\n    provide,\r\n    ref,\r\n    type Component,\r\n    type ComputedRef,\r\n    type Ref,\r\n} from \"vue\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\nexport type ProviderItem<T = unknown> = {\r\n    index: number;\r\n    data: ComputedRef<T>;\r\n    identifier: string;\r\n};\r\n\r\ntype PovidedData<P, I = unknown> = {\r\n    registerItem: (data: ComputedRef<I>) => ProviderItem<I>;\r\n    unregisterItem: (item: ProviderItem<I>) => void;\r\n    data?: ComputedRef<P>;\r\n};\r\n\r\ntype ProviderParentOptions<T = unknown> = {\r\n    /**\r\n     * Override the provide/inject key.\r\n     * Default is the component configField attribute\r\n     */\r\n    key?: string;\r\n    /**\r\n     * Additional data provided for the child to the item\r\n     */\r\n    data?: ComputedRef<T>;\r\n};\r\n\r\n/**\r\n * Provide functionalities and data to child components\r\n * @param rootRef Root element of the provider component\r\n * @param data Additional data to provide\r\n * @param options additional options\r\n */\r\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\r\n    rootRef?: Ref<HTMLElement | Component>,\r\n    options?: ProviderParentOptions<ParentData>,\r\n): {\r\n    childItems: Ref<ProviderItem<ItemData>[]>;\r\n    sortedItems: Ref<ProviderItem<ItemData>[]>;\r\n} {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProviderChild must be called within a component setup function.\",\r\n        );\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    const key = options?.key ? options.key : configField;\r\n\r\n    const childItems = ref<ProviderItem<ItemData>[]>([]) as Ref<\r\n        ProviderItem<ItemData>[]\r\n    >;\r\n    const sequence = ref(1);\r\n\r\n    /**\r\n     * When items are added/removed sort them according to their position\r\n     */\r\n    const sortedItems = computed(() =>\r\n        childItems.value.slice().sort((a, b) => a.index - b.index),\r\n    );\r\n\r\n    function registerItem(\r\n        data?: ComputedRef<ItemData>,\r\n    ): ProviderItem<ItemData> {\r\n        const index = childItems.value.length;\r\n        const identifier = nextSequence();\r\n        const item = { index, data, identifier };\r\n        childItems.value.push(item);\r\n        if (rootRef?.value) {\r\n            nextTick(() => {\r\n                const ids = childItems.value\r\n                    .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\r\n                    .join(\",\");\r\n                const parent = unrefElement(rootRef);\r\n                const children = parent.querySelectorAll(ids);\r\n                const sortedIds = Array.from(children).map((el: any) =>\r\n                    el.getAttribute(\"data-id\").replace(`${key}-`, \"\"),\r\n                );\r\n\r\n                childItems.value.forEach(\r\n                    (item) =>\r\n                        (item.index = sortedIds.indexOf(`${item.identifier}`)),\r\n                );\r\n            });\r\n        }\r\n        return item;\r\n    }\r\n\r\n    function unregisterItem(item: ProviderItem): void {\r\n        childItems.value = childItems.value.filter((i) => i !== item);\r\n    }\r\n\r\n    function nextSequence(): string {\r\n        return String(sequence.value++);\r\n    }\r\n\r\n    /** Provide functionality for child components via dependency injection. */\r\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\r\n        registerItem,\r\n        unregisterItem,\r\n        data: options?.data,\r\n    });\r\n\r\n    return {\r\n        childItems,\r\n        sortedItems,\r\n    };\r\n}\r\n\r\ntype ProviderChildOptions<T = unknown> = {\r\n    /**\r\n     * Override the provide/inject key.\r\n     * Default is the component configField attribute\r\n     */\r\n    key?: string;\r\n    /**\r\n     * Does the child need the be below the parent?\r\n     * @default true\r\n     */\r\n    needParent?: boolean;\r\n    /**\r\n     * Additional data appended to the item\r\n     */\r\n    data?: ComputedRef<T>;\r\n    /**\r\n     * Register child on parent\r\n     * @default true\r\n     */\r\n    register?: boolean;\r\n};\r\n\r\n/**\r\n * Inject functionalities and data from parent components\r\n * @param options additional options\r\n */\r\nexport function useProviderChild<ParentData, ItemData = unknown>(\r\n    options: ProviderChildOptions<ItemData> = { needParent: true },\r\n): { parent: ComputedRef<ParentData>; item: Ref<ProviderItem<ItemData>> } {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProviderChild must be called within a component setup function.\",\r\n        );\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    const key = options?.key ? options.key : configField;\r\n\r\n    /** Inject parent component functionality if used inside one **/\r\n    const parent = inject<PovidedData<ParentData, ItemData>>(\r\n        \"$o-\" + key,\r\n        undefined,\r\n    );\r\n\r\n    const needParent =\r\n        typeof options.needParent === \"undefined\" || options.needParent;\r\n\r\n    const register =\r\n        typeof options.register === \"undefined\" || options.register;\r\n\r\n    if (needParent && !parent) {\r\n        throw new Error(\r\n            `You should wrap ${vm.proxy.$options.name} in a ${key} component`,\r\n        );\r\n    }\r\n\r\n    const item = ref<ProviderItem<ItemData>>();\r\n\r\n    if (parent && register) item.value = parent.registerItem(options.data);\r\n\r\n    onUnmounted(() => {\r\n        if (parent && item.value) parent.unregisterItem(item.value);\r\n    });\r\n\r\n    return { parent: parent?.data, item: item };\r\n}\r\n","import { computed, getCurrentInstance, onMounted, type Ref } from \"vue\";\r\nimport type { ProgrammaticInstance } from \"..\";\r\nimport { isClient, HTMLElement } from \"@/utils/ssr\";\r\nimport { usePropBinding } from \"./usePropValue\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { removeElement } from \"@/utils/helpers\";\r\n\r\ntype ProgrammaticProps = {\r\n    active: boolean;\r\n    /** Define if the component is cancelable at all or by specific events. */\r\n    cancelable?: boolean | string[];\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: (...args: any[]) => void;\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: (...args: any[]) => void;\r\n    /** DOM element where the programmatic component will be mounted on. */\r\n    container?: string | HTMLElement;\r\n    /** This defines the programmatic usage. */\r\n    programmatic?: ProgrammaticInstance;\r\n};\r\n\r\nexport interface ProgrammaticOptions {\r\n    /** Method options that allow the component to be cancelled. */\r\n    cancelOptions?: string[];\r\n    /** Destroy the component on hide. Default is `true`. */\r\n    destroyOnHide?: boolean;\r\n}\r\n\r\n/**\r\n * This provides functionalities for programmatic usage.\r\n * The component get appended to the container.\r\n * This defines a cancel and close handler, as well as escape handler.\r\n * The component will be distroyed on close.\r\n * @param elementRef HTMLElement which should injected\r\n * @param props ProgrammaticProps\r\n * @param emits [\"update:active\", \"close\"]\r\n * @param options\r\n */\r\nexport function useProgrammaticComponent(\r\n    elementRef: Ref<HTMLElement> | (() => HTMLElement),\r\n    props: ProgrammaticProps,\r\n    emits: {\r\n        (e: \"update:active\", value: boolean): void;\r\n        (e: \"close\", ...args: any[]): void;\r\n    },\r\n    options: ProgrammaticOptions = { cancelOptions: [\"escape\", \"outside\"] },\r\n) {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProgrammaticComponent must be called within a component setup function.\",\r\n        );\r\n\r\n    const isActive = usePropBinding(\"active\", props, emits);\r\n\r\n    const cancelOptions = computed(() =>\r\n        typeof props.cancelable === \"boolean\"\r\n            ? props.cancelable\r\n                ? options.cancelOptions\r\n                : []\r\n            : props.cancelable,\r\n    );\r\n\r\n    function getElement(): HTMLElement {\r\n        return typeof elementRef === \"function\"\r\n            ? elementRef()\r\n            : elementRef.value;\r\n    }\r\n\r\n    const container = computed(\r\n        (): HTMLElement =>\r\n            typeof props.container === \"string\"\r\n                ? document.querySelector<HTMLElement>(props.container)\r\n                : (props.container as HTMLElement) || document.body,\r\n    );\r\n\r\n    onMounted(() => {\r\n        if (props.programmatic) {\r\n            if (props.programmatic.instances) {\r\n                props.programmatic.instances.add(vm);\r\n            }\r\n            // Insert the component in the container or the body tag\r\n            // only if it's programmatic\r\n            const el = getElement();\r\n            container.value.appendChild(el);\r\n\r\n            isActive.value = true;\r\n        }\r\n    });\r\n\r\n    if (isClient) useEventListener(\"keyup\", onKeyPress, container.value);\r\n\r\n    /** Keypress event that is bound to the document. */\r\n    function onKeyPress(event: KeyboardEvent): void {\r\n        if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n            cancel(\"escape\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the component if cancelable.\r\n     * @param method Cancel method\r\n     */\r\n    function cancel(method: string): void {\r\n        if (!props.cancelable || !isActive.value) return;\r\n        // check if method is in options\r\n        if (cancelOptions.value.indexOf(method) < 0) return;\r\n        props.onCancel.apply(null);\r\n        close({ action: \"cancel\", method });\r\n    }\r\n\r\n    /**\r\n     * Emit events, and destroy the component if it's programmatic.\r\n     * Can get called outside of a setup scope.\r\n     */\r\n    function close(...args: any[]): void {\r\n        vm.emit(\"close\");\r\n        props.onClose.apply(null, args);\r\n\r\n        if (props.programmatic) {\r\n            if (props.programmatic.instances)\r\n                props.programmatic.instances.remove(vm);\r\n\r\n            if (props.programmatic.resolve)\r\n                props.programmatic.resolve.apply(null, args);\r\n\r\n            // Timeout for the animation complete before destroying\r\n            setTimeout(() => {\r\n                // set active state of current instance\r\n                vm.props.active = false;\r\n                vm.emit(\"update:active\", false);\r\n                if (\r\n                    typeof options.destroyOnHide === \"undefined\" ||\r\n                    options.destroyOnHide\r\n                )\r\n                    if (isClient)\r\n                        window.requestAnimationFrame(() => {\r\n                            // remove the component from the container or the body tag\r\n                            const el = getElement();\r\n                            if (el) removeElement(el);\r\n                        });\r\n                    else {\r\n                        const el = getElement();\r\n                        if (el) removeElement(el);\r\n                    }\r\n            });\r\n        } else {\r\n            // set active state of current instance\r\n            vm.props.active = false;\r\n            vm.emit(\"update:active\", false);\r\n        }\r\n    }\r\n\r\n    return { close, cancel, isActive, container };\r\n}\r\n","import { type MaybeRefOrGetter } from \"vue\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\n/**\r\n * Listen for clicks outside of an element.\r\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\r\n *\r\n * @param target Target element\r\n * @param handler Event handler\r\n * @param ignore Element to ignore\r\n * @return stop function\r\n */\r\nexport function useClickOutside(\r\n    target: MaybeRefOrGetter,\r\n    handler: (evt: PointerEvent) => void,\r\n    ignore: (MaybeRefOrGetter | string)[] = [],\r\n): () => void {\r\n    if (!window) return;\r\n\r\n    /**\r\n     * White-listed items that not emit event when clicked.\r\n     * All children from ignore prop.\r\n     */\r\n    const shouldIgnore = (event: PointerEvent): boolean => {\r\n        return ignore.some((target) => {\r\n            if (typeof target === \"string\") {\r\n                return Array.from(\r\n                    window.document.querySelectorAll(target),\r\n                ).some(\r\n                    (el) =>\r\n                        el === event.target ||\r\n                        event.composedPath().includes(el),\r\n                );\r\n            } else {\r\n                const el = unrefElement(target);\r\n                return (\r\n                    el &&\r\n                    (event.target === el || event.composedPath().includes(el))\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    const listener = (event: PointerEvent): void => {\r\n        const el = unrefElement(target);\r\n        if (!el || el === event.target || event.composedPath().includes(el))\r\n            return;\r\n        if (shouldIgnore(event)) return;\r\n        handler(event);\r\n    };\r\n\r\n    const stop = useEventListener(\"click\", listener, window, {\r\n        immediate: true,\r\n        passive: true,\r\n    });\r\n\r\n    return stop;\r\n}\r\n","import { isDefined } from \"@/utils/helpers\";\r\n\r\n/**\r\n * Given an element, returns the element who scrolls it.\r\n */\r\nexport function getScrollingParent(target: HTMLElement): HTMLElement {\r\n    if (target.style.position === \"fixed\" || !target)\r\n        return document.documentElement;\r\n\r\n    let isScrollingParent = false;\r\n    let nextParent = target.parentElement;\r\n\r\n    while (!isScrollingParent && isDefined(nextParent)) {\r\n        if (nextParent === document.documentElement) break;\r\n\r\n        const { overflow, overflowY } = getComputedStyle(nextParent);\r\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\r\n\r\n        isScrollingParent =\r\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\r\n            scrollHeight > clientHeight;\r\n\r\n        /* ...found it, this one is returned */\r\n        if (isScrollingParent) break;\r\n\r\n        /* ...if not check the next one */\r\n        nextParent = nextParent.parentElement;\r\n    }\r\n\r\n    return nextParent;\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport getIcons from \"@/utils/icons\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Icons take an important role of any application\r\n * @displayName Icon\r\n * @style _icon.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OIcon\",\r\n    configField: \"icon\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Icon component name */\r\n    component: {\r\n        type: String,\r\n        default: () => getOption(\"iconComponent\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    pack: {\r\n        type: String,\r\n        default: () => getOption(\"iconPack\", \"mdi\"),\r\n    },\r\n    /**\r\n     * \tColor of the icon\r\n     *  @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"icon.variant\"),\r\n    },\r\n    /** Icon name */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"icon.size\"),\r\n    },\r\n    /**\r\n     * Overrides icon font size\r\n     * @values Depends on library: null (smallest), fa-sm, fa-lg, fa-xl, mdi-18px, mdi-24px, mdi-36px, mdi-48px\r\n     */\r\n    customSize: { type: String, default: undefined },\r\n    /**\r\n     * Add class to icon font.\r\n     * See icon library documentation for custom classes.\r\n     */\r\n    customClass: { type: String, default: undefined },\r\n    /** When true makes icon clickable */\r\n    clickable: { type: Boolean, default: false },\r\n    /** Enable spin effect on icon */\r\n    spin: { type: Boolean, default: false },\r\n    /** Rotation 0-360 */\r\n    rotation: { type: [Number, String], default: undefined },\r\n    /**\r\n     * This is used internally\r\n     * @ignore\r\n     */\r\n    both: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon when clickable */\r\n    clickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the element when spin */\r\n    spinClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst rootStyle = computed(() => {\r\n    const style = {};\r\n    if (props.rotation) {\r\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\r\n    }\r\n    return style;\r\n});\r\n\r\nconst iconConfig = computed(() => getIcons()[props.pack]);\r\n\r\nconst iconPrefix = computed(() =>\r\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\r\n);\r\n\r\nconst customSizeByPack = computed(() => {\r\n    if (iconConfig.value?.sizes) {\r\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\r\n            return iconConfig.value.sizes[props.size];\r\n        } else if (iconConfig.value.sizes.default) {\r\n            return iconConfig.value.sizes.default;\r\n        }\r\n    }\r\n    return null;\r\n});\r\n\r\n/**\r\n * Internal icon name based on the pack.\r\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\r\n * internal icons are always MDI.\r\n */\r\nconst computedIcon = computed(\r\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\r\n);\r\n\r\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\r\n\r\nconst computedVariant = computed(() => {\r\n    if (!props.variant) return;\r\n    let newVariant = \"\";\r\n    if (typeof props.variant === \"string\") {\r\n        newVariant = props.variant;\r\n    } else {\r\n        newVariant = Object.keys(props.variant).filter(\r\n            (key) => props.variant[key],\r\n        )[0];\r\n    }\r\n    return newVariant;\r\n});\r\n\r\n/** Equivalent icon name of the MDI. */\r\nfunction getEquivalentIconOf(value): string {\r\n    // Only transform the class if the both prop is set to true\r\n    if (!props.both) return value;\r\n    if (\r\n        iconConfig.value?.internalIcons &&\r\n        iconConfig.value?.internalIcons[value]\r\n    )\r\n        return iconConfig.value.internalIcons[value];\r\n    return value;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-icon\"],\r\n    [\r\n        \"clickableClass\",\r\n        \"o-icon--clickable\",\r\n        null,\r\n        computed(() => props.clickable),\r\n    ],\r\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-icon--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-icon--\",\r\n        computedVariant,\r\n        computed(() => !!computedVariant.value),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <span :class=\"rootClasses\" data-oruga=\"icon\" :style=\"rootStyle\">\r\n        <!-- custom icon component -->\r\n        <component\r\n            :is=\"component\"\r\n            v-if=\"component\"\r\n            :icon=\"[pack, computedIcon]\"\r\n            :size=\"computedSize\"\r\n            :class=\"[customClass]\" />\r\n\r\n        <!-- native css icon -->\r\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\r\n    </span>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    nextTick,\r\n    watch,\r\n    onMounted,\r\n    type StyleValue,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport { injectField } from \"../field/useFieldShare\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Get user Input. Use with Field to access all functionalities\r\n * @displayName Input\r\n * @style _input.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OInput\",\r\n    configField: \"input\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: \"\" },\r\n    /**\r\n     * Input type, like native\r\n     * @values Any native input type, and textarea\r\n     */\r\n    type: { type: String, default: \"text\" },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"input.size\"),\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"input.variant\"),\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Adds the reveal password functionality */\r\n    passwordReveal: { type: Boolean, default: false },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    /** Show character counter when maxlength prop is passed */\r\n    counter: {\r\n        type: Boolean,\r\n        default: () => getOption(\"input.counter\", false),\r\n    },\r\n    /** Automatically adjust height in textarea */\r\n    autosize: { type: Boolean, default: false },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"input.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"input.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"input.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Add a button/icon to clear the inputed text */\r\n    clearable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"input.clearable\", false),\r\n    },\r\n    /** Icon name to be added on the clear button */\r\n    clearIcon: {\r\n        type: String,\r\n        default: () => getOption(\"input.clearIcon\", \"close-circle\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"input.autocomplete\", \"off\"),\r\n    },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when type textarea */\r\n    textareaClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon space inside the input */\r\n    iconLeftSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon space inside the input */\r\n    iconRightSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to display when a right icon is used */\r\n    hasIconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the counter element */\r\n    counterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string | number} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\n// --- Validation Feature ---\r\n\r\nconst inputRef = ref<HTMLInputElement>();\r\nconst textareaRef = ref<HTMLInputElement>();\r\n\r\nconst elementRef = computed<HTMLInputElement>(() =>\r\n    props.type === \"textarea\" ? textareaRef.value : inputRef.value,\r\n);\r\n\r\n// use form input functionalities\r\nconst {\r\n    checkHtml5Validity,\r\n    onBlur,\r\n    onFocus,\r\n    onInvalid,\r\n    setFocus,\r\n    isValid,\r\n    isFocused,\r\n} = useInputHandler(elementRef, emits, props);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\r\n\r\nconst vmodel = defineModel<string | number>({ default: \"\" });\r\n\r\n/** Get value length */\r\nconst valueLength = computed(() =>\r\n    typeof vmodel.value === \"string\"\r\n        ? vmodel.value.length\r\n        : typeof vmodel.value === \"number\"\r\n          ? vmodel.value.toString().length\r\n          : 0,\r\n);\r\n\r\nonMounted(() => {\r\n    /**\r\n     * When v-model is changed:\r\n     *  1. Set parent field filled state.\r\n     *  2. Resize textarea input\r\n     *  3. Check html5 valdiation\r\n     */\r\n    watch(\r\n        () => vmodel.value,\r\n        (value) => {\r\n            if (parentField?.value) parentField.value.setFilled(!!value);\r\n            if (props.autosize) resize();\r\n            if (!isValid.value) nextTick(() => checkHtml5Validity());\r\n        },\r\n        { immediate: true },\r\n    );\r\n});\r\n\r\nconst height = ref(\"auto\");\r\n\r\nfunction resize(): void {\r\n    height.value = \"auto\";\r\n    nextTick(() => {\r\n        if (!textareaRef.value) return;\r\n        const scrollHeight = textareaRef.value.scrollHeight;\r\n        height.value = scrollHeight + \"px\";\r\n    });\r\n}\r\n\r\n/** Computed inline styles for autoresize */\r\nconst computedStyles = computed(\r\n    (): StyleValue =>\r\n        props.autosize\r\n            ? {\r\n                  resize: \"none\",\r\n                  height: height.value,\r\n                  overflow: \"hidden\",\r\n              }\r\n            : {},\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", (event.target as HTMLInputElement).value, event);\r\n}\r\n\r\n// --- Icon Feature ---\r\n\r\nconst hasIconRight = computed(() => {\r\n    return !!(\r\n        props.passwordReveal ||\r\n        (props.statusIcon && statusVariantIcon.value) ||\r\n        (props.clearable && vmodel.value && props.clearIcon) ||\r\n        props.iconRight\r\n    );\r\n});\r\n\r\nconst computedIconRight = computed(() => {\r\n    if (props.passwordReveal) {\r\n        return passwordVisibleIcon.value;\r\n    } else if (props.clearable && vmodel.value && props.clearIcon) {\r\n        return props.clearIcon;\r\n    } else if (props.iconRight) {\r\n        return props.iconRight;\r\n    }\r\n    return statusVariantIcon.value;\r\n});\r\n\r\nconst computedIconRightVariant = computed(() =>\r\n    props.passwordReveal || props.iconRight\r\n        ? props.iconRightVariant || props.variant || null\r\n        : statusVariant.value,\r\n);\r\n\r\nfunction iconClick(event: Event): void {\r\n    emits(\"icon-click\", event);\r\n    nextTick(() => setFocus());\r\n}\r\n\r\nfunction rightIconClick(event: Event): void {\r\n    if (props.passwordReveal) togglePasswordVisibility();\r\n    else if (props.clearable) vmodel.value = \"\";\r\n    if (props.iconRightClickable) {\r\n        emits(\"icon-right-click\", event);\r\n        nextTick(() => setFocus());\r\n    }\r\n}\r\n\r\n// --- Password Visability Feature ---\r\n\r\nconst isPasswordVisible = ref(false);\r\n\r\nconst inputType = computed(() => {\r\n    if (props.passwordReveal) {\r\n        return isPasswordVisible.value ? \"text\" : \"password\";\r\n    } else {\r\n        return props.type;\r\n    }\r\n});\r\n\r\n/** Current password-reveal icon name. */\r\nconst passwordVisibleIcon = computed(() =>\r\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\r\n);\r\n\r\n/**\r\n * Toggle the visibility of a password-reveal input\r\n * by changing the type and focus the input right away.\r\n */\r\nfunction togglePasswordVisibility(): void {\r\n    isPasswordVisible.value = !isPasswordVisible.value;\r\n    nextTick(() => setFocus());\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-input__wrapper\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-input__wrapper--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\r\n        \"hasIconRightClass\",\r\n        \"o-input__wrapper--has-icon-right\",\r\n        null,\r\n        hasIconRight,\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-input\"],\r\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-input--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-input--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-input--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"textareaClass\",\r\n        \"o-input__textarea\",\r\n        null,\r\n        computed(() => props.type === \"textarea\"),\r\n    ],\r\n    [\r\n        \"iconLeftSpaceClass\",\r\n        \"o-input--iconspace-left\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n    [\"iconRightSpaceClass\", \"o-input--iconspace-right\", null, hasIconRight],\r\n);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\r\n    \"iconRightClass\",\r\n    \"o-input__icon-right\",\r\n]);\r\n\r\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div data-oruga=\"input\" :class=\"rootClasses\">\r\n        <input\r\n            v-if=\"type !== 'textarea'\"\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            :data-oruga-input=\"inputType\"\r\n            :type=\"inputType\"\r\n            :class=\"inputClasses\"\r\n            :maxlength=\"maxlength\"\r\n            :autocomplete=\"autocomplete\"\r\n            :placeholder=\"placeholder\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <textarea\r\n            v-else\r\n            v-bind=\"$attrs\"\r\n            ref=\"textareaRef\"\r\n            v-model=\"vmodel\"\r\n            data-oruga-input=\"textarea\"\r\n            :class=\"inputClasses\"\r\n            :maxlength=\"maxlength\"\r\n            :style=\"computedStyles\"\r\n            :placeholder=\"placeholder\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <o-icon\r\n            v-if=\"icon\"\r\n            :class=\"iconLeftClasses\"\r\n            :clickable=\"iconClickable\"\r\n            :icon=\"icon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            @click=\"iconClick\" />\r\n\r\n        <o-icon\r\n            v-if=\"hasIconRight\"\r\n            :class=\"iconRightClasses\"\r\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\r\n            :icon=\"computedIconRight\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            :variant=\"computedIconRightVariant\"\r\n            both\r\n            @click=\"rightIconClick\" />\r\n\r\n        <small\r\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\r\n            :class=\"counterClasses\">\r\n            {{ valueLength }} / {{ maxlength }}\r\n        </small>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    watch,\r\n    computed,\r\n    nextTick,\r\n    onBeforeUnmount,\r\n    ref,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport { getScrollingParent, unrefElement } from \"@/composables\";\r\n\r\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nconst opposites: Record<Position, Position> = {\r\n    top: \"bottom\",\r\n    bottom: \"top\",\r\n    right: \"left\",\r\n    left: \"right\",\r\n};\r\n\r\ntype Point = { x: number; y: number };\r\n\r\ndefineOptions({ inheritAttrs: false });\r\n\r\nconst props = defineProps({\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        required: true,\r\n    },\r\n    trigger: {\r\n        type: Object as PropType<HTMLElement | Component>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Position of the component relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n        default: undefined,\r\n    },\r\n    /** Used for calculation position auto */\r\n    defaultPosition: {\r\n        type: String as PropType<Position>,\r\n        validator: (value: string) =>\r\n            [\"top\", \"bottom\", \"left\", \"right\"].indexOf(value) > -1,\r\n        default: \"top\",\r\n    },\r\n    /** disable the position calculation */\r\n    disabled: { type: Boolean, default: false },\r\n    /** update positioning on teleport */\r\n    disablePositioning: { type: Boolean, default: true },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"update:position\", value: string);\r\n}>();\r\n\r\nconst teleportTo = computed(() =>\r\n    typeof props.teleport === \"boolean\" ? \"body\" : props.teleport,\r\n);\r\n\r\nconst teleportDisabled = computed(() =>\r\n    typeof props.teleport === \"boolean\" || !props.teleport\r\n        ? !props.teleport\r\n        : false,\r\n);\r\n\r\nconst contentRef = ref<HTMLElement | Component>();\r\n\r\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\r\n    contentRef.value = el;\r\n\r\n    nextTick(() => {\r\n        // update positioning\r\n        updatePositioning();\r\n        // add handler\r\n        addHandler();\r\n    });\r\n    return el;\r\n}\r\n\r\n// --- Dynamic Positioning Handling Feature ---\r\n\r\nconst initialPosition = props.position;\r\n\r\nconst scrollingParent = ref(undefined);\r\nconst resizeObserver = ref(null);\r\n\r\nif (isClient && window.ResizeObserver) {\r\n    resizeObserver.value = new window.ResizeObserver(updatePositioning);\r\n}\r\n\r\n// on content or disable state change update event listener\r\nwatch(\r\n    () => props.disabled,\r\n    () => {\r\n        if (!props.disabled) addHandler();\r\n        else removeHandler();\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n// update positioning if props change\r\nwatch(\r\n    [\r\n        () => !!props.trigger,\r\n        () => props.disablePositioning,\r\n        () => props.disabled,\r\n    ],\r\n    () => {\r\n        nextTick(() => updatePositioning());\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n// remove any event listener on unmount\r\nonBeforeUnmount(() => removeHandler());\r\n\r\n/** add event listener */\r\nfunction addHandler(): void {\r\n    if (isClient && !scrollingParent.value && contentRef.value) {\r\n        // get parent container\r\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef));\r\n        // set event listener\r\n        if (\r\n            scrollingParent.value &&\r\n            scrollingParent.value !== document.documentElement\r\n        ) {\r\n            scrollingParent.value.addEventListener(\r\n                \"scroll\",\r\n                updatePositioning,\r\n                { passive: true },\r\n            );\r\n            if (window.ResizeObserver)\r\n                resizeObserver.value.observe(scrollingParent.value);\r\n        } else {\r\n            document.addEventListener(\"scroll\", updatePositioning, {\r\n                passive: true,\r\n            });\r\n            window.addEventListener(\"resize\", updatePositioning);\r\n        }\r\n    }\r\n}\r\n\r\n/** remove event listener */\r\nfunction removeHandler(): void {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) resizeObserver.value?.disconnect();\r\n        window.removeEventListener(\"resize\", updatePositioning);\r\n        document.removeEventListener(\"scroll\", updatePositioning);\r\n        scrollingParent.value = undefined;\r\n    }\r\n}\r\n\r\n/** Update the best position set teleport positioning */\r\nfunction updatePositioning(): void {\r\n    if (props.disabled) return;\r\n    let position = props.position;\r\n    // update position if auto position is enabled\r\n    if (initialPosition === \"auto\") {\r\n        // calculate best position\r\n        position = getAutoPosition();\r\n        if (position != props.position)\r\n            // two-way bind updated position\r\n            emits(\"update:position\", position);\r\n    }\r\n    // do not set content position if not teleport enabled\r\n    if (!props.teleport) return;\r\n\r\n    const content = unrefElement(contentRef);\r\n    const trigger = unrefElement(props.trigger);\r\n\r\n    // set content position\r\n    if (content && trigger) {\r\n        const rect = trigger.getBoundingClientRect();\r\n        let top = rect.top + window.scrollY;\r\n        let left = rect.left + window.scrollX;\r\n        // define vertical positioning\r\n        if (position.includes(\"bottom\")) {\r\n            top += trigger.clientHeight;\r\n        } else if (position.includes(\"top\")) {\r\n            top -= content.clientHeight;\r\n        }\r\n        // define horizontal positioning\r\n        if (position === \"left\") {\r\n            left -= content.clientWidth;\r\n        } else if (position === \"right\") {\r\n            left += trigger.clientWidth;\r\n        } else if (position.includes(\"-right\")) {\r\n            left += trigger.clientWidth - content.clientWidth;\r\n        }\r\n\r\n        // adjust exact vertical positioning\r\n        if (position === \"top\" || position === \"bottom\") {\r\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\r\n        }\r\n        // adjust exact horizontal positioning\r\n        if (position === \"left\" || position === \"right\") {\r\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\r\n        }\r\n\r\n        // set style properties\r\n        if (props.disablePositioning) {\r\n            content.style.position = \"relative\";\r\n            content.style.top = `${top}px`;\r\n            content.style.left = `${left}px`;\r\n        } else {\r\n            content.style.position = \"\";\r\n            content.style.top = \"\";\r\n            content.style.left = \"\";\r\n        }\r\n    }\r\n}\r\n\r\n/** calculate best position if auto */\r\nfunction getAutoPosition(): string {\r\n    let bestPosition = props.defaultPosition;\r\n    if (!props.trigger || !contentRef.value) return bestPosition;\r\n    if (!scrollingParent.value) return bestPosition;\r\n\r\n    // get viewport from container\r\n    const viewRect = new DOMRect(\r\n        scrollingParent.value.offsetLeft,\r\n        scrollingParent.value.offsetTop,\r\n        scrollingParent.value.clientWidth,\r\n        scrollingParent.value.clientHeight,\r\n    );\r\n\r\n    const contentRect = unrefElement(contentRef).getBoundingClientRect();\r\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\r\n\r\n    // detect auto position\r\n    const triggerAnchors = anchors(triggerRect);\r\n    const contentAnchors = anchors(contentRect);\r\n    const contentRectAtAnchor = (pos: Position) => {\r\n        const triggerAnchor = triggerAnchors[pos];\r\n        const contentAnchor = contentAnchors[opposites[pos]];\r\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\r\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\r\n        // That offset should be small, and it's tricky to get it from the CSS.\r\n        return new DOMRect(\r\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\r\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\r\n            contentRect.width,\r\n            contentRect.height,\r\n        );\r\n    };\r\n\r\n    const defaultOpposite = opposites[props.defaultPosition];\r\n    const crossPosition =\r\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\r\n            ? \"left\"\r\n            : \"top\";\r\n    const crossOpposite = opposites[crossPosition];\r\n    // In descending order of priority\r\n    const positions: Position[] = [\r\n        props.defaultPosition,\r\n        defaultOpposite,\r\n        crossPosition,\r\n        crossOpposite,\r\n    ];\r\n    let maxOverlap = 0;\r\n    for (const position of positions) {\r\n        const overlap = intersectionArea(\r\n            viewRect,\r\n            contentRectAtAnchor(position),\r\n        );\r\n        if (overlap > maxOverlap) {\r\n            maxOverlap = overlap;\r\n            bestPosition = position;\r\n        }\r\n    }\r\n    return bestPosition;\r\n}\r\n\r\n// --- Helper Functions ---\r\n\r\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\r\n    const left = Math.max(a.left, b.left);\r\n    const right = Math.min(a.right, b.right);\r\n    const top = Math.max(a.top, b.top);\r\n    const bottom = Math.min(a.bottom, b.bottom);\r\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\r\n}\r\n\r\n/**\r\n * @param rect the bounding rectangle of the trigger element\r\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\r\n */\r\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\r\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\r\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\r\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\r\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\r\n});\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"teleportTo\" :disabled=\"teleportDisabled\">\r\n        <template v-if=\"teleportDisabled\">\r\n            <slot :set-content />\r\n        </template>\r\n        <template v-else>\r\n            <div\r\n                v-bind=\"$attrs\"\r\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\r\n                <slot :set-content />\r\n            </div>\r\n        </template>\r\n    </Teleport>\r\n</template>\r\n","const findFocusable = (element: any, programmatic = false) => {\r\n    if (!element) return null;\r\n    if (programmatic) return element.querySelectorAll(`*[tabindex=\"-1\"]`);\r\n\r\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\r\n                                     area[href],\r\n                                     input:not([disabled]),\r\n                                     select:not([disabled]),\r\n                                     textarea:not([disabled]),\r\n                                     button:not([disabled]),\r\n                                     iframe,\r\n                                     object,\r\n                                     embed,\r\n                                     *[tabindex]:not([tabindex=\"-1\"]),\r\n                                     *[contenteditable]`);\r\n};\r\n\r\nlet onKeyDown: any;\r\n\r\nconst bind = (el: any, { value = true }) => {\r\n    if (value) {\r\n        let focusable = findFocusable(el);\r\n        let focusableProg = findFocusable(el, true);\r\n\r\n        if (focusable && focusable.length > 0) {\r\n            onKeyDown = (event: any) => {\r\n                // Need to get focusable each time since it can change between key events\r\n                // ex. changing month in a datepicker\r\n                focusable = findFocusable(el);\r\n                focusableProg = findFocusable(el, true);\r\n                const firstFocusable = focusable[0];\r\n                const lastFocusable = focusable[focusable.length - 1];\r\n\r\n                if (\r\n                    event.target === firstFocusable &&\r\n                    event.shiftKey &&\r\n                    event.key === \"Tab\"\r\n                ) {\r\n                    event.preventDefault();\r\n                    lastFocusable.focus();\r\n                } else if (\r\n                    (event.target === lastFocusable ||\r\n                        Array.from(focusableProg).indexOf(event.target) >= 0) &&\r\n                    !event.shiftKey &&\r\n                    event.key === \"Tab\"\r\n                ) {\r\n                    event.preventDefault();\r\n                    firstFocusable.focus();\r\n                }\r\n            };\r\n            el.addEventListener(\"keydown\", onKeyDown);\r\n        }\r\n    }\r\n};\r\n\r\nconst unbind = (el: any) => {\r\n    el.removeEventListener(\"keydown\", onKeyDown);\r\n};\r\n\r\nconst directive = {\r\n    beforeMount: bind,\r\n    beforeUnmount: unbind,\r\n};\r\n\r\nexport default directive;\r\n\r\nexport const vTrapFocus = directive; // export composition api directive\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    watch,\r\n    onUnmounted,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { vTrapFocus } from \"@/directives/trapFocus\";\r\nimport { toCssDimension, isMobileAgent } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    unrefElement,\r\n    defineClasses,\r\n    useProviderParent,\r\n    useMatchMedia,\r\n    useEventListener,\r\n    useClickOutside,\r\n} from \"@/composables\";\r\n\r\nimport type { DropdownComponent } from \"./types\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content\r\n * @displayName Dropdown\r\n * @requires ./DropdownItem.vue\r\n * @style _dropdown.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODropdown\",\r\n    configField: \"dropdown\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [String, Number, Boolean, Object, Array],\r\n        default: undefined,\r\n    },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Trigger label, unnecessary when trgger slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Dropdown is disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Dropdown content (items) are shown inline, trigger is removed */\r\n    inline: { type: Boolean, default: false },\r\n    /** Dropdown content will be scrollable */\r\n    scrollable: { type: Boolean, default: false },\r\n    /** Max height of dropdown content */\r\n    maxHeight: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"dropdown.maxHeight\", 200),\r\n    },\r\n    /**\r\n     * Position of the dropdown relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.position\", \"bottom-left\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Dropdown content (items) are shown into a modal on mobile */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.mobileModal\", true),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.animation\", \"fade\"),\r\n    },\r\n    /** Allows multiple selections */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Trap focus inside the dropdown. */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.trapFocus\", true),\r\n    },\r\n    /** Makes the component check if menu reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.checkScroll\", false),\r\n    },\r\n    /** Dropdown will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** HTML element ID of the dropdown menu element */\r\n    menuId: { type: String, default: null },\r\n    /** Tabindex of the dropdown menu element */\r\n    menuTabindex: { type: Number, default: null },\r\n    /** Dropdown menu tag name */\r\n    menuTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"dropdown.menuTag\", \"div\"),\r\n    },\r\n    /** Dropdown trigger tag name */\r\n    triggerTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"dropdown.triggerTag\", \"div\"),\r\n    },\r\n    /**\r\n     * Dropdown will be triggered by any events\r\n     * @values click, hover, contextmenu, focus\r\n     */\r\n    triggers: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"dropdown.triggers\", [\"click\"]),\r\n        validator: (values: string[]) =>\r\n            values.filter(\r\n                (value) =>\r\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\r\n                    -1,\r\n            ).length === values.length,\r\n    },\r\n    /** Dropdown delay before it appears (number in ms) */\r\n    delay: { type: Number, default: undefined },\r\n    /**\r\n     * Dropdown close options (pressing escape, clicking the content or outside)\r\n     * @values true, false, escape, outside, content\r\n     */\r\n    closeable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"dropdown.closeable\", [\"escape\", \"outside\", \"content\"]),\r\n    },\r\n    /** Set the tabindex attribute on the dropdown trigger div (-1 to prevent selection via tab key) */\r\n    tabindex: { type: Number, default: 0 },\r\n    /**\r\n     * Role attribute to be passed to the list container for better accessibility.\r\n     * Use menu only in situations where your dropdown is related to a navigation menu.\r\n     * @values list, listbox, menu, dialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"dropdown.ariaRole\", \"list\"),\r\n        validator: (value: string) =>\r\n            [\"list\", \"listbox\", \"menu\", \"dialog\"].indexOf(value) > -1,\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"dropdown.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the dropdown is teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the trigger element */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu when inline */\r\n    inlineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the overlay when on mobile */\r\n    menuMobileOverlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown menu */\r\n    menuClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu position */\r\n    menuPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu when active */\r\n    menuActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element indicating position of dropdown */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element indicating whether the dropdown is open */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element when the dropdown is hoverable */\r\n    hoverableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {[String, Number, Boolean, Object, Array]} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: [string, number, boolean, object, Array<any>],\r\n    ): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on change event - fired after modelValue:update\r\n     * @param value {any} selected value\r\n     */\r\n    (e: \"change\", value: any): void;\r\n    /**\r\n     * on close event\r\n     * @param method {string} close method\r\n     */\r\n    (e: \"close\", method: string): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst vmodel = defineModel<any>();\r\n\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\nconst autoPosition = ref(props.position);\r\n\r\n/** update autoPosition on prop change */\r\nwatch(\r\n    () => props.position,\r\n    (v) => (autoPosition.value = v),\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\n// check if mobile modal should be shown\r\nconst isMobileModal = computed(\r\n    () => isMobile.value && props.mobileModal && !props.inline,\r\n);\r\n\r\n// check if client is mobile native\r\nconst isMobileNative = computed(() => props.mobileModal && isMobileAgent.any());\r\n\r\nconst menuStyle = computed(() => ({\r\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\r\n    overflow: props.scrollable ? \"auto\" : null,\r\n}));\r\n\r\nconst hoverable = computed(() => props.triggers.indexOf(\"hover\") >= 0);\r\n\r\n// --- Event Handler ---\r\n\r\nconst contentRef = ref<HTMLElement | Component>();\r\nconst triggerRef = ref<HTMLElement>();\r\n\r\nconst eventCleanups = [];\r\nlet timer: NodeJS.Timeout;\r\n\r\nwatch(\r\n    isActive,\r\n    (value) => {\r\n        // on active set event handler\r\n        if (value && isClient) {\r\n            setTimeout(() => {\r\n                if (cancelOptions.value.indexOf(\"outside\") >= 0) {\r\n                    // set outside handler\r\n                    eventCleanups.push(\r\n                        useClickOutside(contentRef, onClickedOutside, [\r\n                            triggerRef,\r\n                        ]),\r\n                    );\r\n                }\r\n\r\n                if (cancelOptions.value.indexOf(\"escape\") >= 0) {\r\n                    // set keyup handler\r\n                    eventCleanups.push(\r\n                        useEventListener(\"keyup\", onKeyPress, document, {\r\n                            immediate: true,\r\n                        }),\r\n                    );\r\n                }\r\n            });\r\n        } else if (!value) {\r\n            // on close cleanup event handler\r\n            eventCleanups.forEach((fn) => fn());\r\n            eventCleanups.length = 0;\r\n        }\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\nonUnmounted(() => {\r\n    // on close cleanup event handler\r\n    eventCleanups.forEach((fn) => fn());\r\n    eventCleanups.length = 0;\r\n});\r\n\r\nconst cancelOptions = computed(() =>\r\n    typeof props.closeable === \"boolean\"\r\n        ? props.closeable\r\n            ? [\"escape\", \"outside\", \"content\"]\r\n            : []\r\n        : props.closeable,\r\n);\r\n\r\n/** Close dropdown if clicked outside. */\r\nfunction onClickedOutside(): void {\r\n    if (!isActive.value || props.inline) return;\r\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\r\n    emits(\"close\", \"outside\");\r\n    isActive.value = false;\r\n}\r\n\r\n/** Keypress event that is bound to the document */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\r\n        emits(\"close\", \"escape\");\r\n        isActive.value = false;\r\n    }\r\n}\r\n\r\nfunction onClick(): void {\r\n    if (props.triggers.indexOf(\"click\") < 0) return;\r\n    toggle();\r\n}\r\n\r\nfunction onContextMenu(event: MouseEvent): void {\r\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\r\n    event.preventDefault();\r\n    open();\r\n}\r\n\r\nfunction onFocus(): void {\r\n    if (props.triggers.indexOf(\"focus\") < 0) return;\r\n    open();\r\n}\r\n\r\nconst isHovered = ref(false);\r\nfunction onHover(): void {\r\n    if (!isMobileNative.value && props.triggers.indexOf(\"hover\") >= 0) {\r\n        isHovered.value = true;\r\n        open();\r\n    }\r\n}\r\nfunction onHoverLeave(): void {\r\n    if (!isMobileNative.value && isHovered.value) {\r\n        isHovered.value = false;\r\n        onClose();\r\n    }\r\n}\r\n\r\n/** Toggle dropdown if it's not disabled. */\r\nfunction toggle(): void {\r\n    if (props.disabled) return;\r\n    if (isActive.value) isActive.value = !isActive.value;\r\n    // if not active, toggle after clickOutside event\r\n    // this fixes toggling programmatic\r\n    else nextTick(() => (isActive.value = !isActive.value));\r\n}\r\n\r\nfunction open(): void {\r\n    if (props.disabled) return;\r\n    if (props.delay) {\r\n        timer = setTimeout(() => {\r\n            isActive.value = true;\r\n            timer = null;\r\n        }, props.delay);\r\n    } else {\r\n        isActive.value = true;\r\n    }\r\n}\r\n\r\nfunction onClose(): void {\r\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n    emits(\"close\", \"content\");\r\n    isActive.value = !props.closeable;\r\n    if (timer && props.closeable) clearTimeout(timer);\r\n}\r\n\r\n// --- InfitiveScroll Feature ---\r\n\r\nif (isClient && props.checkScroll)\r\n    useEventListener(\"scroll\", checkDropdownScroll, contentRef);\r\n\r\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\r\nfunction checkDropdownScroll(): void {\r\n    const dropdown = unrefElement(contentRef.value);\r\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\r\n        if (\r\n            dropdown.scrollTop + dropdown.clientHeight >=\r\n            dropdown.scrollHeight\r\n        ) {\r\n            emits(\"scroll-end\");\r\n        } else if (dropdown.scrollTop <= 0) {\r\n            emits(\"scroll-start\");\r\n        }\r\n    }\r\n}\r\n\r\n// --- Dependency Injection Feature ---\r\n\r\n/**\r\n * Click listener from DropdownItem.\r\n *   1. Set new selected item.\r\n *   2. Emit input event to update the user v-model.\r\n *   3. Close the dropdown.\r\n */\r\nfunction selectItem(value: any): void {\r\n    if (props.multiple) {\r\n        if (vmodel.value && Array.isArray(vmodel.value)) {\r\n            if (vmodel.value.indexOf(value) === -1) {\r\n                // add a value\r\n                vmodel.value = [...vmodel.value, value];\r\n            } else {\r\n                // remove a value\r\n                vmodel.value = vmodel.value.filter((val) => val !== value);\r\n            }\r\n        } else {\r\n            // init new value array\r\n            vmodel.value = [value];\r\n        }\r\n        // emit change after vmodel has changed\r\n        nextTick(() => emits(\"change\", vmodel.value));\r\n    } else {\r\n        if (vmodel.value !== value) {\r\n            // update a single value\r\n            vmodel.value = value;\r\n            // emit change after vmodel has changed\r\n            nextTick(() => emits(\"change\", vmodel.value));\r\n        }\r\n    }\r\n    if (!props.multiple) {\r\n        if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n        emits(\"close\", \"content\");\r\n        isActive.value = false;\r\n        isHovered.value = false;\r\n    }\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<DropdownComponent>(() => ({\r\n    props,\r\n    selected: vmodel.value,\r\n    selectItem,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(contentRef, { data: provideData });\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-drop\"],\r\n    [\"disabledClass\", \"o-drop--disabled\", null, computed(() => props.disabled)],\r\n    [\"expandedClass\", \"o-drop--expanded\", null, computed(() => props.expanded)],\r\n    [\"inlineClass\", \"o-drop--inline\", null, computed(() => props.inline)],\r\n    [\r\n        \"mobileClass\",\r\n        \"o-drop--mobile\",\r\n        null,\r\n        computed(() => isMobileModal.value && !hoverable.value),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-drop--position-\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"activeClass\",\r\n        \"o-drop--active\",\r\n        null,\r\n        computed(() => isActive.value || props.inline),\r\n    ],\r\n    [\"hoverableClass\", \"o-drop--hoverable\", null, hoverable],\r\n);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-drop__trigger\"]);\r\n\r\nconst positionWrapperClasses = defineClasses([\r\n    \"teleportClass\",\r\n    \"o-drop--teleport\",\r\n    null,\r\n    computed(() => !!props.teleport),\r\n]);\r\n\r\nconst menuMobileOverlayClasses = defineClasses([\r\n    \"menuMobileOverlayClass\",\r\n    \"o-drop__overlay\",\r\n]);\r\n\r\nconst menuClasses = defineClasses(\r\n    [\"menuClass\", \"o-drop__menu\"],\r\n    [\r\n        \"menuPositionClass\",\r\n        \"o-drop__menu--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"menuActiveClass\",\r\n        \"o-drop__menu--active\",\r\n        null,\r\n        computed(() => isActive.value || props.inline),\r\n    ],\r\n);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ $trigger: triggerRef, $content: contentRef });\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        data-oruga=\"dropdown\"\r\n        :class=\"rootClasses\"\r\n        @mouseleave=\"onHoverLeave\"\r\n        @focusout=\"onHoverLeave\">\r\n        <component\r\n            :is=\"triggerTag\"\r\n            v-if=\"!inline\"\r\n            ref=\"triggerRef\"\r\n            :tabindex=\"disabled ? null : tabindex\"\r\n            :class=\"triggerClasses\"\r\n            :aria-haspopup=\"ariaRole === 'list' ? true : ariaRole\"\r\n            @click=\"onClick\"\r\n            @contextmenu=\"onContextMenu\"\r\n            @mouseenter=\"onHover\"\r\n            @focus.capture=\"onFocus\">\r\n            <!--\r\n                @slot Override the trigger element, default is label prop\r\n                @binding {boolean} active - dropdown active state\r\n            -->\r\n            <slot name=\"trigger\" :active=\"isActive\">\r\n                {{ label }}\r\n            </slot>\r\n        </component>\r\n\r\n        <PositionWrapper\r\n            v-slot=\"{ setContent }\"\r\n            v-model:position=\"autoPosition\"\r\n            :teleport=\"teleport\"\r\n            :class=\"[...rootClasses, ...positionWrapperClasses]\"\r\n            :trigger=\"triggerRef\"\r\n            :disabled=\"!isActive\"\r\n            default-position=\"bottom\"\r\n            :disable-positioning=\"!isMobileModal\">\r\n            <transition :name=\"animation\">\r\n                <div\r\n                    v-if=\"isMobileModal\"\r\n                    v-show=\"isActive\"\r\n                    :tabindex=\"-1\"\r\n                    :class=\"menuMobileOverlayClasses\"\r\n                    :aria-hidden=\"disabled || !isActive\" />\r\n            </transition>\r\n\r\n            <transition :name=\"animation\">\r\n                <component\r\n                    :is=\"menuTag\"\r\n                    v-show=\"(!disabled && (isActive || isHovered)) || inline\"\r\n                    :id=\"menuId\"\r\n                    :ref=\"(el) => (contentRef = setContent(el))\"\r\n                    v-trap-focus=\"trapFocus\"\r\n                    :tabindex=\"menuTabindex\"\r\n                    :class=\"menuClasses\"\r\n                    :style=\"menuStyle\"\r\n                    :role=\"ariaRole\"\r\n                    :aria-hidden=\"disabled || !isActive\"\r\n                    :aria-modal=\"!inline && trapFocus\">\r\n                    <!--\r\n                        @slot Place dropdown items here\r\n                        @binding {boolean} active - dropdown active state\r\n                        @binding {boolean} toggle - toggle active state function\r\n                    -->\r\n                    <slot :active=\"isActive\" :toggle=\"toggle\" />\r\n                </component>\r\n            </transition>\r\n        </PositionWrapper>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\" generic=\"T\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid, isEqual } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { DropdownComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Dropdown Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODropdownItem\",\r\n    configField: \"dropdown\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** The value that will be returned on events and v-model - default is a uuid */\r\n    value: {\r\n        type: [String, Number, Boolean, Object, Array] as PropType<T>,\r\n        default: undefined, // () => uuid(),\r\n    },\r\n    /** Item label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Item is disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Item is clickable and emit an event */\r\n    clickable: { type: Boolean, default: true },\r\n    /** Dropdown item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"dropdown.itemTag\", \"div\"),\r\n    },\r\n    /** Set the tabindex attribute on the dropdown item div (-1 to prevent selection via tab key) */\r\n    tabindex: { type: [Number, String], default: 0 },\r\n    /**\r\n     * Role attribute to be passed to the list item for better accessibility.\r\n     * Use menuitem only in situations where your dropdown is related to a navigation menu.\r\n     * @values listitem, menuitem, button\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"dropdown.itemAriaRole\", \"listitem\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the dropdown item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when active  */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when clickable */\r\n    itemClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when disabled */\r\n    itemDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * onclick event\r\n     * @param value {[String, Number, Boolean, Object, Array]} value prop data\r\n     * @param event {event} Native Event\r\n     */\r\n    (e: \"click\", value: T, event: Event): void;\r\n}>();\r\n\r\nconst itemValue = computed(() => (props.value || uuid()) as T);\r\n\r\n// Inject functionalities and data from the parent component\r\nconst { parent } = useProviderChild<DropdownComponent<T>>();\r\n\r\nconst isClickable = computed(\r\n    () => !parent.value.props.disabled && !props.disabled && props.clickable,\r\n);\r\n\r\nconst isActive = computed(() => {\r\n    if (parent.value.selected === null) return false;\r\n    if (parent.value.props.multiple && Array.isArray(parent.value.selected))\r\n        return parent.value.selected.some((selected) =>\r\n            isEqual(itemValue.value, selected),\r\n        );\r\n    return isEqual(itemValue.value, parent.value.selected);\r\n});\r\n\r\n/** Click listener, select the item. */\r\nfunction selectItem(event: Event): void {\r\n    if (!isClickable.value) return;\r\n    parent.value.selectItem(itemValue.value);\r\n    emits(\"click\", itemValue.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"itemClass\", \"o-drop__item\"],\r\n    [\r\n        \"itemDisabledClass\",\r\n        \"o-drop__item--disabled\",\r\n        null,\r\n        computed(() => parent.value.props.disabled || props.disabled),\r\n    ],\r\n    [\"itemActiveClass\", \"o-drop__item--active\", null, isActive],\r\n    [\"itemClickableClass\", \"o-drop__item--clickable\", null, isClickable],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"tag\"\r\n        :class=\"rootClasses\"\r\n        :role=\"ariaRole\"\r\n        :tabindex=\"tabindex\"\r\n        data-oruga=\"dropdown-item\"\r\n        @click=\"selectItem\">\r\n        <!--\r\n            @slot Override the label, default is label prop \r\n        -->\r\n        <slot>{{ label }}</slot>\r\n    </component>\r\n</template>\r\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    watch,\r\n    watchEffect,\r\n    useAttrs,\r\n    toRaw,\r\n    onMounted,\r\n    useSlots,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport OInput from \"../input/Input.vue\";\r\nimport ODropdown from \"../dropdown/Dropdown.vue\";\r\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { getValueByPath, uuid } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    unrefElement,\r\n    defineClasses,\r\n    useInputHandler,\r\n    useDebounce,\r\n    useEventListener,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent, ClassBind } from \"@/types\";\r\n\r\nenum SpecialOption {\r\n    Header,\r\n    Footer,\r\n}\r\n\r\n/** True if the specified option is a special option. */\r\nfunction isSpecialOption(option: any): option is SpecialOption {\r\n    return option in SpecialOption;\r\n}\r\n\r\n/**\r\n * Extended input that provide suggestions while the user types\r\n * @displayName Autocomplete\r\n * @style _autocomplete.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OAutocomplete\",\r\n    configField: \"autocomplete\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: undefined },\r\n    /** Input type */\r\n    type: { type: String, default: \"text\" },\r\n    /** Menu tag name */\r\n    menuTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"autocomplete.menuTag\", \"div\"),\r\n    },\r\n    /** Menu item tag name */\r\n    itemTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"autocomplete.itemTag\", \"div\"),\r\n    },\r\n    /** Options / suggestions */\r\n    data: { type: Array as PropType<T[]>, default: () => [] },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.size\"),\r\n    },\r\n    /**\r\n     * Position of the dropdown\r\n     * @values auto, top, bottom\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.position\", \"auto\"),\r\n        validator: (value: string) =>\r\n            [\"auto\", \"top\", \"bottom\"].indexOf(value) >= 0,\r\n    },\r\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\r\n    field: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\r\n    groupField: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\r\n    groupOptions: { type: String, default: undefined },\r\n    /** Function to format an option to a string for display in the input (as alternative to field prop) */\r\n    formatter: {\r\n        type: Function as PropType<(value: unknown) => string | number>,\r\n        default: undefined,\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native input disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: Number, default: undefined },\r\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.checkScroll\", false),\r\n    },\r\n    /** Number of milliseconds to delay before to emit input event */\r\n    debounce: {\r\n        type: Number,\r\n        default: () => getOption(\"autocomplete.debounce\", 400),\r\n    },\r\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\r\n    keepFirst: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepFirst\", false),\r\n    },\r\n    /** Clear input text on select */\r\n    clearOnSelect: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.clearOnSelect\", false),\r\n    },\r\n    /** Open dropdown list on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.openOnFocus\", false),\r\n    },\r\n    /** Keep open dropdown list after select */\r\n    keepOpen: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepOpen\", false),\r\n    },\r\n    /** Max height of dropdown content */\r\n    maxHeight: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"autocomplete.maxHeight\"),\r\n    },\r\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\r\n    confirmKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"autocomplete.confirmKeys\", [\"Tab\", \"Enter\"]),\r\n    },\r\n    /** Dropdown content (items) are shown into a modal on mobile */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.mobileModal\", false),\r\n    },\r\n    /** Transition name to apply on dropdown list */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.animation\", \"fade\"),\r\n    },\r\n    /** Trigger the select event for the first pre-selected option when clicking outside and `keep-first` is enabled */\r\n    selectOnClickOutside: { type: Boolean, default: false },\r\n    /** Allows the header in the autocomplete to be selectable */\r\n    selectableHeader: { type: Boolean, default: false },\r\n    /** Allows the footer in the autocomplete to be selectable */\r\n    selectableFooter: { type: Boolean, default: false },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Add a button/icon to clear the inputed text */\r\n    clearable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.clearable\", false),\r\n    },\r\n    /** Icon name to be added on the clear button */\r\n    clearIcon: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.clearIcon\", \"close-circle\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"autocomplete.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items on hover */\r\n    itemHoverClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items group title */\r\n    itemGroupTitleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu empty placeholder item */\r\n    itemEmptyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu header item */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu footer item */\r\n    itemFooterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Classes to apply on internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"autocomplete.inputClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string | number} input value\r\n     */\r\n    (e: \"input\", value: string | number): void;\r\n    /**\r\n     * selected element changed event\r\n     * @param value {string | number | object} selected value\r\n     */\r\n    (e: \"select\", value: T, evt: Event): void;\r\n    /**\r\n     * header is selected\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"select-header\", event: Event): void;\r\n    /**\r\n     * footer is selected\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"select-footer\", event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\nconst inputRef = ref<InstanceType<typeof OInput>>();\r\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\r\nconst footerRef = ref<HTMLElement>();\r\nconst headerRef = ref<HTMLElement>();\r\nconst itemRefs = ref([]);\r\n\r\nfunction setItemRef(\r\n    el: HTMLElement | Component,\r\n    groupIndex: number,\r\n    itemIndex: number,\r\n): void {\r\n    if (groupIndex === 0 && itemIndex === 0) itemRefs.value.splice(0);\r\n    if (el) itemRefs.value.push(el);\r\n}\r\n\r\n// use form input functionalities\r\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\r\n    useInputHandler(inputRef, emits, props);\r\n\r\nconst vmodel = defineModel<string | number>({ default: undefined });\r\n\r\nconst isActive = ref(false);\r\n\r\nconst selectedOption = ref<T>();\r\nconst hoveredOption = ref<T>();\r\nconst headerHovered = ref(false);\r\nconst footerHovered = ref(false);\r\n\r\nconst hoveredId = ref(null);\r\nconst menuId = uuid();\r\n\r\n/**\r\n * When updating input's value\r\n *   1. If value isn't the same as selected, set null\r\n *   2. Close dropdown if value is clear or else open it\r\n */\r\nwatch(\r\n    () => vmodel.value,\r\n    (value) => {\r\n        // Check if selected is invalid\r\n        const currentValue = getValue(selectedOption.value);\r\n        if (currentValue && currentValue !== value) setSelected(null, false);\r\n\r\n        nextTick(() => {\r\n            // Close dropdown if data is empty\r\n            if (isEmpty.value && !slots.empty) isActive.value = false;\r\n            // Close dropdown if input is clear or else open it\r\n            else if (isFocused.value && (!props.openOnFocus || value))\r\n                isActive.value = !!value;\r\n        });\r\n    },\r\n);\r\n\r\n/** Select first option if \"keep-first\" */\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        // Keep first option always pre-selected\r\n        if (props.keepFirst) {\r\n            nextTick(() => {\r\n                if (isActive.value) selectFirstOption();\r\n                else setHovered(null);\r\n            });\r\n        } else if (hoveredOption.value) {\r\n            // reset hovered if list doesn't contain it\r\n            const hoveredValue = getValue(hoveredOption.value);\r\n            const data = computedData.value\r\n                .map((d) => d.items)\r\n                .reduce((a, b) => [...a, ...b], []);\r\n            const index = data.findIndex((d) => getValue(d) === hoveredValue);\r\n            if (index >= 0) nextTick(() => setHoveredIdToIndex(index));\r\n            else setHovered(null);\r\n        }\r\n    },\r\n);\r\n\r\nconst computedData = computed<{ items: any; group?: any }[]>(() => {\r\n    if (props.groupField) {\r\n        if (props.groupOptions)\r\n            return props.data.map((option) => {\r\n                const group = getValueByPath(option, props.groupField);\r\n                const items = getValueByPath(option, props.groupOptions);\r\n                return { group, items };\r\n            });\r\n        else\r\n            return Object.keys(props.data).map((group) => ({\r\n                group,\r\n                items: props.data[group],\r\n            }));\r\n    }\r\n    // Return no data to avoid the full list to be shown when clearing input\r\n    if (!props.openOnFocus && !props.keepOpen && vmodel.value === \"\") {\r\n        // ...already returned nothing and dropdown closed.\r\n        return [{ items: [] }];\r\n    }\r\n    return [{ items: props.data }];\r\n});\r\n\r\nconst isEmpty = computed(\r\n    () =>\r\n        !computedData.value?.some(\r\n            (element) => element.items && element.items.length,\r\n        ),\r\n);\r\n\r\nwatch(isEmpty, (empty) => {\r\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\r\n});\r\n\r\nconst closeableOptions = computed(() => {\r\n    const options = [\"escape\"];\r\n    if (!props.keepOpen) {\r\n        options.push(\"content\");\r\n        options.push(\"outside\");\r\n    }\r\n    return options;\r\n});\r\n\r\nfunction onDropdownClose(method: string): void {\r\n    if (method === \"outside\") {\r\n        if (\r\n            props.keepFirst &&\r\n            hoveredOption.value &&\r\n            props.selectOnClickOutside\r\n        )\r\n            setSelected(hoveredOption.value, true);\r\n    }\r\n}\r\n\r\n/**\r\n * Return display text for a input option.\r\n * If object, get value from path based on given field, or else just the value.\r\n * Apply a formatter function to the label if given.\r\n */\r\nfunction getValue(option: T): string {\r\n    if (!option) return \"\";\r\n\r\n    const property =\r\n        props.field && typeof option === \"object\"\r\n            ? getValueByPath(option, props.field)\r\n            : option;\r\n\r\n    const label =\r\n        typeof props.formatter === \"function\"\r\n            ? props.formatter(property)\r\n            : property;\r\n\r\n    return label || \"\";\r\n}\r\n\r\n/** Set which option is currently hovered. */\r\nfunction setHovered(option: T | SpecialOption): void {\r\n    if (option === undefined) return;\r\n    hoveredOption.value = isSpecialOption(option) ? null : option;\r\n    headerHovered.value = option === SpecialOption.Header;\r\n    footerHovered.value = option === SpecialOption.Footer;\r\n    hoveredId.value = null;\r\n}\r\n\r\n/** Set which option is the aria-activedescendant by index. */\r\nfunction setHoveredIdToIndex(index: number): void {\r\n    const element = unrefElement(itemRefs.value[index]);\r\n    hoveredId.value = element ? element.id : null;\r\n}\r\n\r\n/**\r\n * Set which option is currently selected, update v-model,\r\n * update input value and close dropdown.\r\n */\r\nfunction setSelected(option: T, closeDropdown = true, event = undefined): void {\r\n    if (option === undefined) return;\r\n    selectedOption.value = option;\r\n    emits(\"select\", selectedOption.value, event);\r\n    if (selectedOption.value !== null) {\r\n        if (props.clearOnSelect) {\r\n            const input = inputRef.value.$el.querySelector(\"input\");\r\n            input.value = \"\";\r\n        } else {\r\n            vmodel.value = getValue(selectedOption.value);\r\n        }\r\n        setHovered(null);\r\n    }\r\n    if (closeDropdown) nextTick(() => (isActive.value = false));\r\n    checkHtml5Validity();\r\n}\r\n\r\n/** Select first option */\r\nfunction selectFirstOption(): void {\r\n    nextTick(() => {\r\n        const nonEmptyElements = computedData.value.filter(\r\n            (element) => element.items && element.items.length,\r\n        );\r\n        if (nonEmptyElements.length) {\r\n            const option = nonEmptyElements[0].items[0];\r\n            setHovered(option);\r\n            setHoveredIdToIndex(0);\r\n        } else {\r\n            setHovered(null);\r\n        }\r\n    });\r\n}\r\n\r\n/** Check if header or footer was selected. */\r\nfunction selectHeaderOrFooterByClick(\r\n    event: Event,\r\n    origin?: SpecialOption,\r\n    closeDropdown = true,\r\n): void {\r\n    if (\r\n        props.selectableHeader &&\r\n        (headerHovered.value || origin === SpecialOption.Header)\r\n    ) {\r\n        emits(\"select-header\", event);\r\n        if (origin) setHovered(null);\r\n        if (closeDropdown) isActive.value = false;\r\n    }\r\n    if (\r\n        props.selectableFooter &&\r\n        (footerHovered.value || origin === SpecialOption.Footer)\r\n    ) {\r\n        emits(\"select-footer\", event);\r\n        if (origin) setHovered(null);\r\n        if (closeDropdown) isActive.value = false;\r\n    }\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/**\r\n * Arrows keys listener.\r\n * If dropdown is active, set hovered option, or else just open.\r\n */\r\nfunction navigateItem(direction: 1 | -1): void {\r\n    if (!isActive.value) {\r\n        isActive.value = true;\r\n        return;\r\n    }\r\n\r\n    const data = computedData.value\r\n        .map((d) => d.items)\r\n        .reduce((a, b) => [...a, ...b], []);\r\n\r\n    // add header / footer if selectable\r\n    if (headerRef.value && props.selectableHeader) data.unshift(undefined);\r\n    if (footerRef.value && props.selectableFooter) data.push(undefined);\r\n\r\n    // define current index\r\n    let index = data.map(toRaw).indexOf(toRaw(hoveredOption.value));\r\n    if (headerHovered.value) index = 0 + direction;\r\n    else if (footerHovered.value) index = data.length - 1 + direction;\r\n    else index = index + direction;\r\n\r\n    // check if index overflow\r\n    index = index > data.length - 1 ? data.length - 1 : index;\r\n    // check if index underflow\r\n    index = index < 0 ? 0 : index;\r\n\r\n    // set hover state\r\n    if (footerRef.value && props.selectableFooter && index === data.length - 1)\r\n        setHovered(SpecialOption.Footer);\r\n    else if (headerRef.value && props.selectableHeader && index === 0)\r\n        setHovered(SpecialOption.Header);\r\n    else setHovered(data[index] !== undefined ? data[index] : null);\r\n\r\n    // get items from input\r\n    let items = itemRefs.value || [];\r\n    if (headerRef.value && props.selectableHeader)\r\n        items = [headerRef.value, ...items];\r\n    if (footerRef.value && props.selectableFooter)\r\n        items = [...items, footerRef.value];\r\n\r\n    const element = unrefElement(items[index]);\r\n    if (!element) return;\r\n\r\n    // set aria-activedescendant\r\n    hoveredId.value = element.id;\r\n\r\n    // define scroll position\r\n    const dropdownMenu = unrefElement(dropdownRef.value.$content);\r\n    const visMin = dropdownMenu.scrollTop;\r\n    const visMax =\r\n        dropdownMenu.scrollTop +\r\n        dropdownMenu.clientHeight -\r\n        element.clientHeight;\r\n\r\n    if (element.offsetTop < visMin) {\r\n        // is scolled top\r\n        dropdownMenu.scrollTop = element.offsetTop;\r\n    } else if (element.offsetTop >= visMax) {\r\n        // is scolled bottom\r\n        dropdownMenu.scrollTop =\r\n            element.offsetTop -\r\n            dropdownMenu.clientHeight +\r\n            element.clientHeight;\r\n    }\r\n    // trigger scroll\r\n    if (props.checkScroll) checkDropdownScroll();\r\n}\r\n\r\n/**\r\n * Key listener.\r\n * Select the hovered option.\r\n */\r\nfunction onKeydown(event: KeyboardEvent): void {\r\n    // prevent emit submit event\r\n    if (event.key === \"Enter\") event.preventDefault();\r\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\r\n        // If adding by comma, don't add the comma to the input\r\n        if (event.key === \",\") event.preventDefault();\r\n        // Close dropdown on select by Tab\r\n        const closeDropdown = !props.keepOpen || event.key === \"Tab\";\r\n        if (hoveredOption.value === null) {\r\n            // header and footer uses headerHovered && footerHovered. If header or footer\r\n            // was selected then fire event otherwise just return so a value isn't selected\r\n            selectHeaderOrFooterByClick(event, null, closeDropdown);\r\n            return;\r\n        }\r\n        setSelected(hoveredOption.value, closeDropdown, event);\r\n    }\r\n}\r\n\r\n/**\r\n * Focus listener.\r\n * If value is the same as selected, select all text.\r\n */\r\nfunction handleFocus(event: Event): void {\r\n    if (getValue(selectedOption.value) === vmodel.value) {\r\n        inputRef.value.$el.querySelector(\"input\").select();\r\n    }\r\n    if (props.openOnFocus) {\r\n        isActive.value = true;\r\n        if (props.keepFirst)\r\n            // If open on focus, update the hovered\r\n            selectFirstOption();\r\n    }\r\n    onFocus(event);\r\n}\r\n\r\n/**\r\n * Blur listener.\r\n * Close on blur.\r\n */\r\nfunction handleBlur(event: Event): void {\r\n    onBlur(event);\r\n}\r\n\r\n/** emit input change event */\r\nfunction onInput(value: string | number): void {\r\n    const currentValue = getValue(selectedOption.value);\r\n    if (currentValue && currentValue === vmodel.value) return;\r\n    debouncedInput(value);\r\n}\r\n\r\nlet debouncedInput = useDebounce(emitInput, props.debounce || 0);\r\n\r\nwatchEffect(() => {\r\n    debouncedInput = useDebounce(emitInput, props.debounce);\r\n});\r\n\r\nfunction emitInput(value: string | number): void {\r\n    emits(\"input\", value);\r\n    checkHtml5Validity();\r\n}\r\n\r\n// --- Icon Feature ---\r\n\r\nconst computedIconRight = computed(() =>\r\n    props.clearable && vmodel.value && props.clearIcon\r\n        ? props.clearIcon\r\n        : props.iconRight,\r\n);\r\n\r\nconst computedIconRightClickable = computed(() =>\r\n    props.clearable ? true : props.iconRightClickable,\r\n);\r\n\r\nfunction rightIconClick(event: Event): void {\r\n    if (props.clearable) {\r\n        vmodel.value = \"\";\r\n        setSelected(null, false);\r\n        if (props.openOnFocus) setFocus();\r\n    } else emits(\"icon-right-click\", event);\r\n}\r\n\r\n// --- InfitiveScroll Feature ---\r\n\r\nonMounted(() => {\r\n    if (isClient && props.checkScroll)\r\n        useEventListener(\r\n            \"scroll\",\r\n            checkDropdownScroll,\r\n            dropdownRef.value.$content,\r\n            { immediate: true },\r\n        );\r\n});\r\n\r\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\r\nfunction checkDropdownScroll(): void {\r\n    const dropdown = unrefElement(dropdownRef.value.$content);\r\n    if (!dropdown) return;\r\n    const trashhold = dropdown.offsetTop;\r\n    const headerHeight = headerRef.value?.clientHeight || 0;\r\n    const footerHeight = (footerRef.value?.clientHeight || 0) + trashhold;\r\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\r\n        if (\r\n            dropdown.scrollTop + dropdown.clientHeight + footerHeight >=\r\n            dropdown.scrollHeight\r\n        ) {\r\n            emits(\"scroll-end\");\r\n        } else if (dropdown.scrollTop <= headerHeight) {\r\n            emits(\"scroll-start\");\r\n        }\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\nconst inputBind = computed(() => ({\r\n    ...attrs,\r\n    ...props.inputClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-acp\"]);\r\n\r\nconst itemClasses = defineClasses([\"itemClass\", \"o-acp__item\"]);\r\n\r\nconst itemEmptyClasses = defineClasses([\r\n    \"itemEmptyClass\",\r\n    \"o-acp__item--empty\",\r\n]);\r\n\r\nconst itemGroupClasses = defineClasses([\r\n    \"itemGroupTitleClass\",\r\n    \"o-acp__item-group-title\",\r\n]);\r\n\r\nconst itemHeaderClasses = defineClasses(\r\n    [\"itemHeaderClass\", \"o-acp__item-header\"],\r\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, headerHovered],\r\n);\r\n\r\nconst itemFooterClasses = defineClasses(\r\n    [\"itemFooterClass\", \"o-acp__item-footer\"],\r\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, footerHovered],\r\n);\r\n\r\nfunction itemOptionClasses(option): ClassBind[] {\r\n    const optionClasses = defineClasses([\r\n        \"itemHoverClass\",\r\n        \"o-acp__item--hover\",\r\n        null,\r\n        toRaw(option) === toRaw(hoveredOption.value),\r\n    ]);\r\n\r\n    return [...itemClasses.value, ...optionClasses.value];\r\n}\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <o-dropdown\r\n        ref=\"dropdownRef\"\r\n        v-model=\"selectedOption\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"autocomplete\"\r\n        :class=\"rootClasses\"\r\n        :menu-id=\"menuId\"\r\n        :menu-tabindex=\"-1\"\r\n        :menu-tag=\"menuTag\"\r\n        scrollable\r\n        aria-role=\"listbox\"\r\n        :tabindex=\"-1\"\r\n        :trap-focus=\"false\"\r\n        :triggers=\"[]\"\r\n        :disabled=\"disabled\"\r\n        :closeable=\"closeableOptions\"\r\n        :mobile-modal=\"mobileModal\"\r\n        :max-height=\"maxHeight\"\r\n        :animation=\"animation\"\r\n        :position=\"position\"\r\n        :teleport=\"teleport\"\r\n        :expanded=\"expanded\"\r\n        @close=\"onDropdownClose\">\r\n        <template #trigger>\r\n            <o-input\r\n                ref=\"inputRef\"\r\n                v-bind=\"inputBind\"\r\n                v-model=\"vmodel\"\r\n                :type=\"type\"\r\n                :size=\"size\"\r\n                :rounded=\"rounded\"\r\n                :icon=\"icon\"\r\n                :icon-right=\"computedIconRight\"\r\n                :icon-right-clickable=\"computedIconRightClickable\"\r\n                :icon-pack=\"iconPack\"\r\n                :placeholder=\"placeholder\"\r\n                :maxlength=\"maxlength\"\r\n                :autocomplete=\"autocomplete\"\r\n                :use-html5-validation=\"false\"\r\n                role=\"combobox\"\r\n                :aria-activedescendant=\"hoveredId\"\r\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\r\n                :aria-controls=\"menuId\"\r\n                :aria-expanded=\"isActive\"\r\n                :expanded=\"expanded\"\r\n                :disabled=\"disabled\"\r\n                :status-icon=\"statusIcon\"\r\n                @update:model-value=\"onInput\"\r\n                @focus=\"handleFocus\"\r\n                @blur=\"handleBlur\"\r\n                @invalid=\"onInvalid\"\r\n                @keydown=\"onKeydown\"\r\n                @keydown.up.prevent=\"navigateItem(-1)\"\r\n                @keydown.down.prevent=\"navigateItem(1)\"\r\n                @icon-click=\"(event) => $emit('icon-click', event)\"\r\n                @icon-right-click=\"rightIconClick\" />\r\n        </template>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"$slots.header\"\r\n            :id=\"`${menuId}-header`\"\r\n            ref=\"headerRef\"\r\n            :tag=\"itemTag\"\r\n            aria-role=\"option\"\r\n            :aria-selected=\"headerHovered\"\r\n            :tabindex=\"-1\"\r\n            :class=\"[...itemClasses, ...itemHeaderClasses]\"\r\n            @click=\"\r\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Header)\r\n            \">\r\n            <!--\r\n                @slot Define an additional header\r\n            -->\r\n            <slot name=\"header\" />\r\n        </o-dropdown-item>\r\n\r\n        <template v-for=\"(element, groupindex) in computedData\">\r\n            <o-dropdown-item\r\n                v-if=\"element.group\"\r\n                :key=\"groupindex + 'group'\"\r\n                :tag=\"itemTag\"\r\n                :tabindex=\"-1\"\r\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\r\n                <!--\r\n                    @slot Override the option grpup\r\n                    @binding {object} group - options group\r\n                    @binding {number} index - option index\r\n                -->\r\n                <slot\r\n                    v-if=\"$slots.group\"\r\n                    name=\"group\"\r\n                    :group=\"element.group\"\r\n                    :index=\"groupindex\" />\r\n                <span v-else>\r\n                    {{ element.group }}\r\n                </span>\r\n            </o-dropdown-item>\r\n\r\n            <o-dropdown-item\r\n                v-for=\"(option, index) in element.items\"\r\n                :id=\"`${menuId}-${groupindex}-${index}`\"\r\n                :key=\"groupindex + ':' + index\"\r\n                :ref=\"(el) => setItemRef(el, groupindex, index)\"\r\n                :value=\"option\"\r\n                :tag=\"itemTag\"\r\n                :class=\"itemOptionClasses(option)\"\r\n                aria-role=\"option\"\r\n                :aria-selected=\"toRaw(option) === toRaw(hoveredOption)\"\r\n                :tabindex=\"-1\"\r\n                @click=\"\r\n                    (value, event) => setSelected(value as T, !keepOpen, event)\r\n                \">\r\n                <!--\r\n                    @slot Override the select option\r\n                    @binding {object} option - option object\r\n                    @binding {number} index - option index\r\n                    @binding {unknown} value - option value\r\n                -->\r\n                <slot\r\n                    v-if=\"$slots.default\"\r\n                    :option=\"option\"\r\n                    :value=\"getValue(option)\"\r\n                    :index=\"index\" />\r\n                <span v-else>\r\n                    {{ getValue(option) }}\r\n                </span>\r\n            </o-dropdown-item>\r\n        </template>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"isEmpty && $slots.empty\"\r\n            :tag=\"itemTag\"\r\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\r\n            <!--\r\n                @slot Define content for empty state\r\n            -->\r\n            <slot name=\"empty\" />\r\n        </o-dropdown-item>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"$slots.footer\"\r\n            :id=\"`${menuId}-footer`\"\r\n            ref=\"footerRef\"\r\n            :tag=\"itemTag\"\r\n            aria-role=\"option\"\r\n            :aria-selected=\"footerHovered\"\r\n            :tabindex=\"-1\"\r\n            :class=\"[...itemClasses, ...itemFooterClasses]\"\r\n            @click=\"\r\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Footer)\r\n            \">\r\n            <!--\r\n                @slot Define an additional footer\r\n            -->\r\n            <slot name=\"footer\" />\r\n        </o-dropdown-item>\r\n    </o-dropdown>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Autocomplete from \"./Autocomplete.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export autocomplete plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Autocomplete);\r\n    },\r\n} as Plugin;\r\n\r\n/** export autocomplete components */\r\nexport { Autocomplete as OAutocomplete };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * The classic button, in different colors, sizes, and states\r\n * @displayName Button\r\n * @style _button.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OButton\",\r\n    configField: \"button\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /**\r\n     * Button tag name\r\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\r\n     */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\r\n    },\r\n    /**\r\n     * Color variant of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"button.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"button.size\"),\r\n    },\r\n    /** Button label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"button.iconPack\", undefined),\r\n    },\r\n    /** Icon name to show on the left */\r\n    iconLeft: { type: String, default: undefined },\r\n    /** Icon name to show on the right */\r\n    iconRight: { type: String, default: undefined },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"button.rounded\", false),\r\n    },\r\n    /** Button will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Button will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Enable outlined style */\r\n    outlined: { type: Boolean, default: false },\r\n    /** Enable loading style */\r\n    loading: { type: Boolean, default: false },\r\n    /** Enable inverted style */\r\n    inverted: { type: Boolean, default: false },\r\n    /** Button type, like native */\r\n    nativeType: {\r\n        type: String,\r\n        default: \"button\",\r\n        validator: (value: string) =>\r\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\r\n    },\r\n    /** Accessibility Role attribute to be passed to the button. */\r\n    role: {\r\n        type: String,\r\n        default: () => getOption(\"button.role\", \"button\"),\r\n    },\r\n    /**\r\n     * This is used internally\r\n     * @ignore\r\n     */\r\n    iconBoth: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button elements wrapper */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when outlined */\r\n    outlinedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button with loading */\r\n    loadingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when inverted */\r\n    invertedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the left */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the right */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst computedTag = computed(() =>\r\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\r\n        ? \"button\"\r\n        : props.tag,\r\n);\r\n\r\nconst computedNativeType = computed(() =>\r\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\r\n);\r\n\r\nconst computedDisabled = computed(() => (props.disabled ? true : null));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-btn\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined\",\r\n        null,\r\n        computed(() => props.outlined && !props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted\",\r\n        null,\r\n        computed(() => props.inverted && !props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.outlined && !!props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.inverted && !!props.variant),\r\n    ],\r\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\r\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\r\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\r\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"computedTag\"\r\n        :disabled=\"computedDisabled\"\r\n        :type=\"computedNativeType\"\r\n        :class=\"rootClasses\"\r\n        :role=\"role\"\r\n        data-oruga=\"button\">\r\n        <span :class=\"wrapperClasses\">\r\n            <o-icon\r\n                v-if=\"iconLeft\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconLeft\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\r\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label, default is label prop \r\n                -->\r\n                <slot>{{ label }}</slot>\r\n            </span>\r\n            <o-icon\r\n                v-if=\"iconRight\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconRight\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\r\n        </span>\r\n    </component>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Button from \"./Button.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export button plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Button);\r\n    },\r\n} as Plugin;\r\n\r\n/** export button components */\r\nexport { Button as OButton };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    watch,\r\n    onBeforeUnmount,\r\n    onMounted,\r\n    ref,\r\n    nextTick,\r\n    readonly,\r\n    toRaw,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useEventListener,\r\n    useProviderParent,\r\n} from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow for cycling images in confined spaces\r\n * @displayName Carousel\r\n * @requires ./CarouselItem.vue\r\n * @style _carousel.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarousel\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Number, default: 0 },\r\n    /** Enable drag mode */\r\n    dragable: { type: Boolean, default: true },\r\n    /** Timer interval for `autoplay` */\r\n    interval: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.interval\", 3500),\r\n    },\r\n    /** Move item automaticalls after `interval` */\r\n    autoplay: { type: Boolean, default: false },\r\n    /** Pause autoplay on hover */\r\n    pauseHover: { type: Boolean, default: false },\r\n    /** Repeat from the beginning after reaching the end */\r\n    repeat: { type: Boolean, default: false },\r\n    /** Show an overlay */\r\n    overlay: { type: Boolean, default: false },\r\n    /** Enable indicators */\r\n    indicators: { type: Boolean, default: true },\r\n    /** Place indicators inside the carousel */\r\n    indicatorInside: { type: Boolean, default: false },\r\n    /**\r\n     * Indicator interaction mode\r\n     * @values click, hover\r\n     */\r\n    indicatorMode: {\r\n        type: String,\r\n        default: \"click\",\r\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\r\n    },\r\n    /** Position of the indicator - depends on used theme */\r\n    indicatorPosition: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\r\n    },\r\n    /** Style of the indicator - depends on used theme */\r\n    indicatorStyle: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\r\n    },\r\n    /** Number of items to show at once*/\r\n    itemsToShow: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToShow\", 1),\r\n    },\r\n    /** Number of items to switch at once */\r\n    itemsToList: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToList\", 1),\r\n    },\r\n    /** Show next / prev arrows */\r\n    arrows: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrows\", true),\r\n    },\r\n    /** Show next / prev arrows only on hover */\r\n    arrowsHover: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrowsHover\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconSize\"),\r\n    },\r\n    /** Icon name for previous icon */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon name for next icon */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Define these props for different screen sizes */\r\n    breakpoints: {\r\n        type: Object as PropType<Record<number, any>>,\r\n        default: () => ({}),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element in overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the wrapper element of carousel items */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items */\r\n    itemsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items on drag */\r\n    itemsDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of arrow elements */\r\n    arrowIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of prev arrow element */\r\n    arrowIconPrevClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of next arrow element */\r\n    arrowIconNextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator link element */\r\n    indicatorClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element */\r\n    indicatorsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside */\r\n    indicatorsInsideClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside and position */\r\n    indicatorsInsidePositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator item element */\r\n    indicatorItemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element when is active */\r\n    indicatorItemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element to separate different styles */\r\n    indicatorItemStyleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number): void;\r\n    /**\r\n     * on carousel scroll event\r\n     * @param value {number} scroll index\r\n     */\r\n    (e: \"scroll\", value: number): void;\r\n    /**\r\n     * on item click event\r\n     * @param event {event} native event\r\n     */\r\n    (e: \"click\", event: Event): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\nfunction restartTimer(): void {\r\n    pauseTimer();\r\n    startTimer();\r\n}\r\n\r\nconst provideData = computed<CarouselComponent>(() => ({\r\n    restartTimer,\r\n    itemWidth: itemWidth.value,\r\n    activeIndex: scrollIndex.value,\r\n    onClick: (event: Event): void => emits(\"click\", event),\r\n    setActive: (index: number): void => switchTo(index),\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\r\n\r\nconst activeIndex = useVModelBinding<number>(props, emits);\r\nconst scrollIndex = ref(props.modelValue);\r\n\r\nconst resizeObserver = ref(null);\r\nconst windowWidth = ref(0);\r\n\r\nconst refresh_ = ref(0);\r\n\r\n/** When v-model is changed switch to the new active item. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (value <= childItems.value.length - 1)\r\n            switchTo(value * settings.value.itemsToList, true);\r\n    },\r\n);\r\n\r\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\r\n\r\nonMounted(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) {\r\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\r\n            resizeObserver.value.observe(rootRef.value);\r\n        }\r\n        onResized();\r\n        startTimer();\r\n    }\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\r\n        dragEnd();\r\n        pauseTimer();\r\n    }\r\n});\r\n\r\n// add dom event handler\r\nif (isClient) {\r\n    useEventListener(\"resize\", onResized, window);\r\n    useEventListener(\"animationend\", onRefresh);\r\n    useEventListener(\"transitionend\", onRefresh);\r\n    useEventListener(\"transitionstart\", onRefresh);\r\n}\r\n\r\nfunction onResized(): void {\r\n    windowWidth.value = window.innerWidth;\r\n}\r\n\r\nfunction onRefresh(): void {\r\n    nextTick(() => refresh_.value++);\r\n}\r\n\r\nconst settings = computed<typeof props>(() => {\r\n    const breakpoints = Object.keys(props.breakpoints)\r\n        .map(Number)\r\n        .sort((a, b) => b - a);\r\n\r\n    const breakpoint = breakpoints.filter(\r\n        (breakpoint) => windowWidth.value >= breakpoint,\r\n    )[0];\r\n\r\n    const settings = toRaw(\r\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\r\n    );\r\n\r\n    // prevent empty values\r\n    if (!settings.itemsToList) settings.itemsToList = 1;\r\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\r\n    return readonly(settings);\r\n});\r\n\r\nconst itemWidth = computed(() => {\r\n    // Ensure component is mounted\r\n    if (!windowWidth.value) return 0;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\r\n\r\n    const rect = rootRef.value.getBoundingClientRect();\r\n    return rect.width / settings.value.itemsToShow;\r\n});\r\n\r\nconst translation = computed(\r\n    () =>\r\n        -bound(\r\n            delta.value + scrollIndex.value * itemWidth.value,\r\n            0,\r\n            (childItems.value.length - settings.value.itemsToShow) *\r\n                itemWidth.value,\r\n        ),\r\n);\r\n\r\nconst total = computed(() => childItems.value.length);\r\n\r\nconst indicatorCount = computed(() =>\r\n    Math.ceil(total.value / settings.value.itemsToList),\r\n);\r\n\r\nconst indicatorIndex = computed(() =>\r\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\r\n);\r\n\r\nconst hasArrows = computed(\r\n    () =>\r\n        (settings.value.arrowsHover && isHovered.value) ||\r\n        !settings.value.arrowsHover,\r\n);\r\n\r\nconst hasPrev = computed(\r\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\r\n);\r\n\r\nfunction onPrev(): void {\r\n    switchTo(scrollIndex.value - settings.value.itemsToList);\r\n}\r\n\r\nconst hasNext = computed(\r\n    () =>\r\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\r\n        hasArrows.value,\r\n);\r\n\r\nfunction onNext(): void {\r\n    switchTo(scrollIndex.value + settings.value.itemsToList);\r\n}\r\n\r\nfunction switchTo(index: number, onlyMove?: boolean): void {\r\n    if (settings.value.repeat) index = mod(index, total.value);\r\n\r\n    index = bound(index, 0, total.value);\r\n    scrollIndex.value = index;\r\n    emits(\"scroll\", indicatorIndex.value);\r\n\r\n    if (!onlyMove)\r\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\r\n}\r\n\r\nfunction onModeChange(trigger: string, index: number): void {\r\n    if (props.indicatorMode === trigger)\r\n        switchTo(index * settings.value.itemsToList);\r\n}\r\n\r\n// --- Autoplay Feature ---\r\n\r\nconst isHovered = ref(false);\r\nconst isPaused = ref(false);\r\nconst timer = ref(null);\r\n\r\nfunction onMouseEnter(): void {\r\n    isHovered.value = true;\r\n    checkPause();\r\n}\r\n\r\nfunction onMouseLeave(): void {\r\n    isHovered.value = false;\r\n    startTimer();\r\n}\r\n\r\n/** When autoplay is changed, start or pause timer accordingly */\r\nwatch(\r\n    () => props.autoplay,\r\n    (status) => {\r\n        if (status) startTimer();\r\n        else pauseTimer();\r\n    },\r\n);\r\n\r\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\r\nwatch(\r\n    () => props.repeat,\r\n    (status) => {\r\n        if (status) startTimer();\r\n    },\r\n);\r\n\r\nfunction startTimer(): void {\r\n    if (!props.autoplay || timer.value) return;\r\n    isPaused.value = false;\r\n    timer.value = setInterval(() => {\r\n        if (!props.repeat && !hasNext.value) pauseTimer();\r\n        else onNext();\r\n    }, props.interval);\r\n}\r\n\r\nfunction pauseTimer(): void {\r\n    isPaused.value = true;\r\n    if (timer.value) {\r\n        clearInterval(timer.value);\r\n        timer.value = null;\r\n    }\r\n}\r\n\r\nfunction checkPause(): void {\r\n    if (props.pauseHover && props.autoplay) pauseTimer();\r\n}\r\n\r\n// --- Drag & Drop Feature ---\r\n\r\nconst isTouch = ref(false);\r\nconst dragX = ref();\r\nconst hold = ref(0);\r\nconst delta = ref(0);\r\n\r\nconst isDragging = computed(() => isDefined(dragX.value));\r\n\r\n/** handle drag event */\r\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\r\n    if (\r\n        isDragging.value ||\r\n        !settings.value.dragable ||\r\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\r\n    )\r\n        return;\r\n    hold.value = Date.now();\r\n    isTouch.value = !!(event as TouchEvent).touches;\r\n    dragX.value = isTouch.value\r\n        ? (event as TouchEvent).touches[0].clientX\r\n        : (event as MouseEvent).clientX;\r\n    if (isTouch.value) {\r\n        pauseTimer();\r\n    }\r\n    if (isClient) {\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\nfunction dragMove(event: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value) return;\r\n    const dragEndX = (event as TouchEvent).touches\r\n        ? (\r\n              (event as TouchEvent).changedTouches[0] ||\r\n              (event as TouchEvent).touches[0]\r\n          ).clientX\r\n        : (event as MouseEvent).clientX;\r\n    delta.value = dragX.value - dragEndX;\r\n    // prevent event if not touch event\r\n    if (!(event as TouchEvent).touches) event.preventDefault();\r\n}\r\n\r\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value && !hold.value) return;\r\n    if (hold.value) {\r\n        const signCheck = sign(delta.value);\r\n        const results = Math.round(\r\n            Math.abs(delta.value / itemWidth.value) + 0.15,\r\n        ); // Hack\r\n        switchTo(scrollIndex.value + signCheck * results);\r\n    }\r\n    delta.value = 0;\r\n    dragX.value = undefined;\r\n    if ((event as TouchEvent)?.touches) startTimer();\r\n\r\n    if (isClient) {\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-car\"],\r\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\r\n);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\r\n\r\nconst itemsClasses = defineClasses(\r\n    [\"itemsClass\", \"o-car__items\"],\r\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\r\n);\r\n\r\nconst arrowIconClasses = defineClasses([\r\n    \"arrowIconClass\",\r\n    \"o-car__arrow__icon\",\r\n]);\r\n\r\nconst arrowIconPrevClasses = defineClasses([\r\n    \"arrowIconPrevClass\",\r\n    \"o-car__arrow__icon-prev\",\r\n]);\r\n\r\nconst arrowIconNextClasses = defineClasses([\r\n    \"arrowIconNextClass\",\r\n    \"o-car__arrow__icon-next\",\r\n]);\r\n\r\nfunction indicatorItemClasses(index): ClassBind[] {\r\n    return defineClasses(\r\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\r\n        [\r\n            \"indicatorItemActiveClass\",\r\n            \"o-car__indicator__item--active\",\r\n            null,\r\n            indicatorIndex.value === index,\r\n        ],\r\n        [\r\n            \"indicatorItemStyleClass\",\r\n            \"o-car__indicator__item--\",\r\n            props.indicatorStyle,\r\n            !!props.indicatorStyle,\r\n        ],\r\n    ).value;\r\n}\r\n\r\nconst indicatorsClasses = defineClasses(\r\n    [\"indicatorsClass\", \"o-car__indicators\"],\r\n    [\r\n        \"indicatorsInsideClass\",\r\n        \"o-car__indicators--inside\",\r\n        null,\r\n        computed(() => !!props.indicatorInside),\r\n    ],\r\n    [\r\n        \"indicatorsInsidePositionClass\",\r\n        \"o-car__indicators--inside--\",\r\n        computed(() => props.indicatorPosition),\r\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\r\n    ],\r\n);\r\n\r\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"rootRef\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"carousel\"\r\n        role=\"region\"\r\n        @mouseover=\"onMouseEnter\"\r\n        @mouseleave=\"onMouseLeave\"\r\n        @focus=\"onMouseEnter\"\r\n        @blur=\"onMouseLeave\"\r\n        @keydown.left=\"onPrev\"\r\n        @keydown.right=\"onNext\">\r\n        <div :class=\"wrapperClasses\">\r\n            <div\r\n                :class=\"itemsClasses\"\r\n                :style=\"'transform:translateX(' + translation + 'px)'\"\r\n                tabindex=\"0\"\r\n                role=\"group\"\r\n                draggable=\"true\"\r\n                aria-roledescription=\"carousel\"\r\n                @mousedown=\"onDragStart\"\r\n                @touchstart=\"onDragStart\">\r\n                <!--\r\n                    @slot Display carousel item\r\n                -->\r\n                <slot />\r\n            </div>\r\n            <!--\r\n                @slot Override the arrows\r\n                @binding {boolean} has-prev has prev arrow button \r\n                @binding {boolean} has-next has next arrow button \r\n                @binding {(): void} prev switch to prev item function\r\n                @binding {(): void} next switch to next item function\r\n            -->\r\n            <slot\r\n                name=\"arrow\"\r\n                :has-prev=\"hasPrev\"\r\n                :prev=\"onPrev\"\r\n                :has-next=\"hasNext\"\r\n                :next=\"onNext\">\r\n                <template v-if=\"arrows\">\r\n                    <o-icon\r\n                        v-show=\"hasPrev\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconPrev\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onPrev\"\r\n                        @keydown.enter=\"onPrev\" />\r\n                    <o-icon\r\n                        v-show=\"hasNext\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconNext\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onNext\"\r\n                        @keydown.enter=\"onNext\" />\r\n                </template>\r\n            </slot>\r\n        </div>\r\n\r\n        <!--\r\n            @slot Override the indicators\r\n            @binding {number} active active index \r\n            @binding {(idx: number): void} switch-to switch to item function\r\n            @binding {number} indicator-index current indicator index\r\n        -->\r\n        <slot\r\n            :active=\"activeIndex\"\r\n            :switch-to=\"switchTo\"\r\n            :indicator-index=\"indicatorIndex\"\r\n            name=\"indicators\">\r\n            <template v-if=\"childItems.length\">\r\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\r\n                    <div\r\n                        v-for=\"(_, index) in indicatorCount\"\r\n                        :key=\"index\"\r\n                        :class=\"indicatorClasses\"\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @focus=\"onModeChange('hover', index)\"\r\n                        @mouseover=\"onModeChange('hover', index)\"\r\n                        @click=\"onModeChange('click', index)\"\r\n                        @keypress.enter=\"onModeChange('click', index)\">\r\n                        <!--\r\n                            @slot Override the indicator elements\r\n                            @binding {index} index indicator index \r\n                        -->\r\n                        <slot :index=\"index\" name=\"indicator\">\r\n                            <span :class=\"indicatorItemClasses(index)\" />\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </slot>\r\n        <template v-if=\"overlay\">\r\n            <!-- @slot Overlay element -->\r\n            <slot name=\"overlay\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow item used by the carousel\r\n * @displayName Carousel Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarouselItem\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Make item clickable */\r\n    clickable: { type: Boolean, default: false },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of carousel item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is active */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is clickable */\r\n    itemClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<CarouselComponent>();\r\n\r\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\r\n\r\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\r\n\r\nfunction onClick(event: Event): void {\r\n    if (isActive.value) parent.value.onClick(event);\r\n    if (props.clickable) parent.value.setActive(item.value.index);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-car__item\"],\r\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\r\n    [\r\n        \"itemClickableClass\",\r\n        \"o-car__item--clickable\",\r\n        null,\r\n        computed(() => props.clickable),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"itemClasses\"\r\n        :style=\"itemStyle\"\r\n        :data-id=\"`carousel-${item.identifier}`\"\r\n        data-oruga=\"carousel-item\"\r\n        :role=\"ariaRole\"\r\n        aria-roledescription=\"item\"\r\n        :aria-selected=\"isActive\"\r\n        @click=\"onClick\"\r\n        @keypress.enter=\"onClick\">\r\n        <!--\r\n            @slot Default content\r\n        -->\r\n        <slot />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Carousel from \"./Carousel.vue\";\r\nimport CarouselItem from \"./CarouselItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export carousel plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Carousel);\r\n        registerComponent(app, CarouselItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export carousel components */\r\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select a single or grouped options\r\n * @displayName Checkbox\r\n * @style _checkbox.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCheckbox\",\r\n    configField: \"checkbox\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean, Array], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native indeterminate */\r\n    indeterminate: { type: Boolean, default: false },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Same as native name */\r\n    name: { type: String, default: undefined },\r\n    /** Overrides the returned value when it's checked */\r\n    trueValue: { type: [String, Number, Boolean], default: true },\r\n    /** Overrides the returned value when it's not checked */\r\n    falseValue: { type: [String, Number, Boolean], default: false },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when checkbox is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element when checked */\r\n    checkedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox input */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox input when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when checkbox is indeterminate */\r\n    indeterminateClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox labe */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string, number, boolean, array} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: string | number | boolean | Array<string | number | boolean>,\r\n    ): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean, array} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (\r\n        e: \"input\",\r\n        value: string | number | boolean | Array<string | number | boolean>,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * indeterminate prop two-way binding\r\n     * @param value {boolean} updated indeterminate prop\r\n     */\r\n    (e: \"update:indeterminate\", value: boolean): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<\r\n    string | number | boolean | Array<string | number | boolean>\r\n>(props, emits, { passive: true });\r\n\r\nconst isIndeterminate = usePropBinding<boolean>(\"indeterminate\", props, emits);\r\n\r\nconst isChecked = computed(\r\n    () =>\r\n        vmodel.value === props.trueValue ||\r\n        (Array.isArray(vmodel.value) &&\r\n            vmodel.value.includes(props.nativeValue)),\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-chk\"],\r\n    [\"checkedClass\", \"o-chk--checked\", null, isChecked],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-chk--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"disabledClass\", \"o-chk--disabled\", null, computed(() => props.disabled)],\r\n    [\r\n        \"variantClass\",\r\n        \"o-chk--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-chk__input\"],\r\n    [\"inputCheckedClass\", \"o-chk__input--checked\", null, isChecked],\r\n    [\r\n        \"indeterminateClass\",\r\n        \"o-chk__input--indeterminate\",\r\n        null,\r\n        isIndeterminate,\r\n    ],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-chk__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"checkbox\"\r\n        role=\"checkbox\"\r\n        :aria-checked=\"isChecked\"\r\n        @click.stop=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"checkbox\"\r\n            data-oruga-input=\"checkbox\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :indeterminate.prop=\"indeterminate\"\r\n            :true-value=\"trueValue\"\r\n            :false-value=\"falseValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Content slot, default is label prop\r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Checkbox from \"./Checkbox.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export checkbox plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Checkbox);\r\n    },\r\n} as Plugin;\r\n\r\n/** export table components */\r\nexport { Checkbox as OCheckbox };\r\n","<script setup lang=\"ts\">\r\nimport { type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An easy way to toggle what you want\r\n * @displayName Collapse\r\n * @style _collapse.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCollapse\",\r\n    configField: \"collapse\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\r\n    open: { type: Boolean, default: true },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"collapse.animation\", \"fade\"),\r\n    },\r\n    /** Id property of the content container */\r\n    contentId: { type: String, default: () => uuid() },\r\n    /**\r\n     * Trigger position\r\n     * @values top, bottom\r\n     */\r\n    position: {\r\n        type: String as PropType<\"top\" | \"bottom\">,\r\n        default: () => getOption(\"collapse.position\", \"top\"),\r\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the trigger element */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * open prop two-way binding\r\n     * @param value {boolean} updated open prop\r\n     */\r\n    (e: \"update:open\", value: boolean): void;\r\n    /** on collapse opened */\r\n    (e: \"open\"): void;\r\n    /** on collapse closed */\r\n    (e: \"close\"): void;\r\n}>();\r\n\r\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\r\n\r\n/** Toggle and emit events */\r\nfunction toggle(): void {\r\n    isOpen.value = !isOpen.value;\r\n    isOpen.value ? emits(\"open\") : emits(\"close\");\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\r\n\r\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\r\n        <div\r\n            v-if=\"position === 'top'\"\r\n            :class=\"triggerClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @click=\"toggle\"\r\n            @keydown.enter=\"toggle\">\r\n            <!--\r\n                @slot Define the collapse trigger\r\n                @binding {boolean} open collapse open state \r\n             -->\r\n            <slot name=\"trigger\" :open=\"isOpen\" />\r\n        </div>\r\n\r\n        <Transition :name=\"animation\">\r\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\r\n                <!--\r\n                    @slot Default content\r\n                -->\r\n                <slot />\r\n            </div>\r\n        </Transition>\r\n\r\n        <div\r\n            v-if=\"position === 'bottom'\"\r\n            :class=\"triggerClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @click=\"toggle\"\r\n            @keydown.enter=\"toggle\">\r\n            <!--\r\n                @slot Define the collapse trigger\r\n                @binding {boolean} open collapse open state \r\n             -->\r\n            <slot name=\"trigger\" :open=\"isOpen\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Collapse from \"./Collapse.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export collapse plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Collapse);\r\n    },\r\n} as Plugin;\r\n\r\n/** export collapse components */\r\nexport { Collapse as OCollapse };\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport { injectField } from \"../field/useFieldShare\";\r\n\r\nimport type { OptionsItem } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select an item in a dropdown list. Use with Field to access all functionalities\r\n * @displayName Select\r\n * @style _select.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSelect\",\r\n    configField: \"select\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [String, Number, Boolean, Object, Array],\r\n        default: null,\r\n    },\r\n    /** Select options, unnecessary when default slot is used */\r\n    options: {\r\n        type: Array as PropType<string[] | OptionsItem[]>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Vertical size of input\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"select.size\"),\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"select.variant\"),\r\n    },\r\n    /** Text when nothing is selected */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Allow multiple selection */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native size */\r\n    nativeSize: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"select.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"select.autocomplete\", \"off\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native select element */\r\n    selectClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon space inside the select */\r\n    iconLeftSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon space inside the select */\r\n    iconRightSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select when multiple mode is active */\r\n    multipleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select placeholder */\r\n    placeholderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select arrow */\r\n    arrowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant for the root element*/\r\n    rootVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: string | number | boolean | object | Array<any>,\r\n    ): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst selectRef = ref<HTMLInputElement>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\r\n    useInputHandler(selectRef, emits, props);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\r\n\r\nconst vmodel = useVModelBinding<\r\n    string | number | boolean | object | Array<any>\r\n>(props, emits, { passive: true });\r\n\r\nconst placeholderVisible = computed(() => vmodel.value === null);\r\n\r\nonMounted(() => {\r\n    /**\r\n     * When v-model is changed:\r\n     *  1. Set parent field filled state.\r\n     *  2. Resize textarea input\r\n     *  3. Check html5 valdiation\r\n     */\r\n    watch(\r\n        () => vmodel.value,\r\n        (value) => {\r\n            if (parentField?.value) parentField.value.setFilled(!!value);\r\n            checkHtml5Validity();\r\n        },\r\n        { immediate: true },\r\n    );\r\n});\r\n\r\nconst selectOptions = computed<OptionsItem[]>(() => {\r\n    if (!props.options || !Array.isArray(props.options)) return [];\r\n\r\n    return props.options.map((option) =>\r\n        typeof option === \"string\"\r\n            ? { value: option, label: option, key: uuid() }\r\n            : { ...option, key: uuid() },\r\n    );\r\n});\r\n\r\n// --- Icon Feature ---\r\n\r\nconst hasIconRight = computed(\r\n    () =>\r\n        (props.iconRight && !props.multiple) ||\r\n        (props.statusIcon && statusVariantIcon.value),\r\n);\r\n\r\nconst rightIcon = computed(() =>\r\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\r\n);\r\n\r\nconst rightIconVariant = computed(() =>\r\n    props.iconRight\r\n        ? props.iconRightVariant || props.variant || null\r\n        : statusVariant.value,\r\n);\r\n\r\nfunction iconClick(emit, event): void {\r\n    emits(emit, event);\r\n    nextTick(() => setFocus());\r\n}\r\n\r\nfunction rightIconClick(event): void {\r\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-ctrl-sel\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-ctrl-sel--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\r\n        \"rootVariantClass\",\r\n        \"o-ctrl-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n);\r\n\r\nconst selectClasses = defineClasses(\r\n    [\"selectClass\", \"o-sel\"],\r\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\r\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sel--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\r\n    [\r\n        \"iconLeftSpaceClass\",\r\n        \"o-sel-iconspace-left\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n    [\r\n        \"iconRightSpaceClass\",\r\n        \"o-sel-iconspace-right\",\r\n        null,\r\n        computed(() => !!props.iconRight),\r\n    ],\r\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\r\n    [\r\n        \"arrowClass\",\r\n        \"o-sel-arrow\",\r\n        null,\r\n        computed(() => !props.iconRight && !props.multiple),\r\n    ],\r\n);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"select\">\r\n        <o-icon\r\n            v-if=\"icon\"\r\n            :class=\"iconLeftClasses\"\r\n            :clickable=\"iconClickable\"\r\n            :icon=\"icon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            @click=\"iconClick('icon-click', $event)\" />\r\n\r\n        <select\r\n            v-bind=\"$attrs\"\r\n            ref=\"selectRef\"\r\n            v-model=\"vmodel\"\r\n            data-oruga-input=\"select\"\r\n            :class=\"selectClasses\"\r\n            :autocomplete=\"autocomplete\"\r\n            :multiple=\"multiple\"\r\n            :size=\"nativeSize\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\">\r\n            <template v-if=\"placeholder || $slots.placeholder\">\r\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\r\n                    <!--\r\n                        @slot Override the placeholder\r\n                    -->\r\n                    <slot name=\"placeholder\">\r\n                        {{ placeholder }}\r\n                    </slot>\r\n                </option>\r\n            </template>\r\n\r\n            <!--\r\n                @slot Override the options, default is options prop\r\n            -->\r\n            <slot>\r\n                <option\r\n                    v-for=\"option in selectOptions\"\r\n                    :key=\"option.key\"\r\n                    :value=\"option.value\"\r\n                    v-bind=\"option.attrs\">\r\n                    {{ option.label }}\r\n                </option>\r\n            </slot>\r\n        </select>\r\n\r\n        <o-icon\r\n            v-if=\"hasIconRight\"\r\n            :class=\"iconRightClasses\"\r\n            :clickable=\"iconRightClickable\"\r\n            :icon=\"rightIcon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            :variant=\"rightIconVariant\"\r\n            both\r\n            @click=\"rightIconClick\" />\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, useAttrs, type PropType, ref, watch, nextTick } from \"vue\";\r\n\r\nimport ODropdown from \"../dropdown/Dropdown.vue\";\r\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\n\r\nimport { isMobileAgent } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    getActiveClasses,\r\n    useEventListener,\r\n    useInputHandler,\r\n    usePropBinding,\r\n} from \"@/composables\";\r\n\r\nimport type { ClassBind, ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * This is a internal used component.\r\n * Used by Datepicker and Timepicker.\r\n */\r\ndefineOptions({\r\n    name: \"OPickerWrapper\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** parent picker component props  */\r\n    pickerProps: { type: Object, required: true },\r\n    /** data-oruga attribute value */\r\n    dataOruga: { type: String, required: true },\r\n    /** the input value */\r\n    value: { type: [Date, Array], default: undefined },\r\n    /** the active state of the dropdown */\r\n    active: { type: Boolean, default: false },\r\n    formattedValue: { type: String, default: undefined },\r\n    nativeType: { type: String, required: true },\r\n    nativeStep: { type: String, default: undefined },\r\n    nativeValue: { type: [String, Number], default: undefined },\r\n    nativeMin: { type: [String, Number], default: undefined },\r\n    nativeMax: { type: [String, Number], default: undefined },\r\n    stayOpen: { type: Boolean, default: false },\r\n    rootClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    dropdownClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    boxClass: {\r\n        type: Array as PropType<ComponentClass>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /** on value change event */\r\n    (e: \"change\", value: string): void;\r\n    /** on natvie value change event */\r\n    (e: \"native-change\", value: string): void;\r\n    /** on input focus event */\r\n    (e: \"focus\", evt: Event): void;\r\n    /** on input blur event */\r\n    (e: \"blur\", evt: Event): void;\r\n    /** on input invalid event */\r\n    (e: \"invalid\", evt: Event): void;\r\n    /** on icon click event */\r\n    (e: \"icon-click\", evt: Event): void;\r\n    /** on icon right click event */\r\n    (e: \"icon-right-click\", evt: Event): void;\r\n}>();\r\n\r\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\r\nconst picker = computed<any>(() => props.pickerProps);\r\n\r\nconst isMobileNative = computed(\r\n    () => picker.value.mobileNative && isMobileAgent.any(),\r\n);\r\n\r\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\r\nconst inputRef = ref<InstanceType<typeof OInput>>();\r\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\r\n\r\nconst elementRef = computed(() =>\r\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\r\n);\r\n\r\n// use form input functionality for native input\r\nconst {\r\n    checkHtml5Validity,\r\n    setFocus,\r\n    doClick,\r\n    onBlur,\r\n    onFocus,\r\n    onInvalid,\r\n    isValid,\r\n    isFocused,\r\n} = useInputHandler(elementRef, emits, picker.value);\r\n\r\n/**\r\n * Show input as text for placeholder,\r\n * when placeholder and native value is given and input is not focused.\r\n */\r\nconst computedNativeType = computed(() =>\r\n    !picker.value.placeholder || props.nativeValue || isFocused.value\r\n        ? props.nativeType\r\n        : \"text\",\r\n);\r\n\r\n/**\r\n * When v-model is changed:\r\n *  1. Update internal value.\r\n *  2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.value,\r\n    () => {\r\n        // toggle picker if not stay open\r\n        if (!props.stayOpen) togglePicker(false);\r\n        // check validation if native\r\n        if (isMobileNative.value && !isValid.value) checkHtml5Validity();\r\n    },\r\n);\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\nwatch(isActive, onActiveChange);\r\n\r\nconst ariaRole = computed(() => (!picker.value.inline ? \"dialog\" : undefined));\r\n\r\nconst triggers = computed(() => (picker.value.openOnFocus ? [\"click\"] : []));\r\n\r\nif (isClient) useEventListener(\"keyup\", onKeyPress);\r\n\r\n/** Keypress event that is bound to the document. */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\r\n        togglePicker(false);\r\n}\r\n\r\n// --- EVENT HANDLER ---\r\n\r\n/** Toggle picker */\r\nfunction togglePicker(active: boolean): void {\r\n    if (isMobileNative.value) {\r\n        setFocus(); // focus the underlaying input element\r\n        doClick(); // click to open the underlaying input element\r\n    } else if (dropdownRef.value) {\r\n        if (active || picker.value.closeOnClick)\r\n            nextTick(() => (isActive.value = active));\r\n    }\r\n}\r\n\r\n/** Avoid dropdown toggle when is already visible */\r\nfunction onInputClick(event): void {\r\n    if (isActive.value) event.stopPropagation();\r\n}\r\n\r\n/** Emit 'blur' event on dropdown is not active (closed) */\r\nfunction onActiveChange(value: boolean): void {\r\n    if (value) onFocus();\r\n    else if (!value) onBlur();\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\nconst inputBind = computed(() => ({\r\n    ...attrs,\r\n    ...picker.value.inputClasses,\r\n}));\r\n\r\nconst dropdownBind = computed(() => ({\r\n    \"root-class\": getActiveClasses(props.dropdownClasses),\r\n    ...picker.value.dropdownClasses,\r\n}));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\">\r\n        <o-dropdown\r\n            v-if=\"!isMobileNative || picker.inline\"\r\n            ref=\"dropdownRef\"\r\n            v-bind=\"dropdownBind\"\r\n            v-model:active=\"isActive\"\r\n            :position=\"picker.position\"\r\n            :disabled=\"picker.disabled\"\r\n            :inline=\"picker.inline\"\r\n            :mobile-modal=\"picker.mobileModal\"\r\n            :trap-focus=\"picker.trapFocus\"\r\n            :aria-role=\"ariaRole\"\r\n            :aria-modal=\"!picker.inline\"\r\n            :tabindex=\"-1\"\r\n            :teleport=\"picker.teleport\"\r\n            :triggers=\"triggers\">\r\n            <template v-if=\"!picker.inline\" #trigger>\r\n                <slot name=\"trigger\">\r\n                    <o-input\r\n                        ref=\"inputRef\"\r\n                        v-bind=\"inputBind\"\r\n                        autocomplete=\"off\"\r\n                        :model-value=\"formattedValue\"\r\n                        :placeholder=\"picker.placeholder\"\r\n                        :size=\"picker.size\"\r\n                        :icon-pack=\"picker.iconPack\"\r\n                        :icon=\"picker.icon\"\r\n                        :icon-right=\"picker.iconRight\"\r\n                        :icon-right-clickable=\"picker.iconRightClickable\"\r\n                        :expanded=\"picker.expanded\"\r\n                        :rounded=\"picker.rounded\"\r\n                        :disabled=\"picker.disabled\"\r\n                        :readonly=\"picker.readonly\"\r\n                        :use-html5-validation=\"false\"\r\n                        @click=\"onInputClick\"\r\n                        @keyup.enter=\"togglePicker(true)\"\r\n                        @change=\"$emit('change', $event.target.value)\"\r\n                        @focus=\"onFocus\"\r\n                        @blur=\"onBlur\"\r\n                        @icon-click=\"$emit('icon-click', $event)\"\r\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\r\n                </slot>\r\n            </template>\r\n            <o-dropdown-item\r\n                override\r\n                tag=\"div\"\r\n                :item-class=\"boxClass\"\r\n                :disabled=\"picker.disabled\"\r\n                :clickable=\"false\">\r\n                <slot />\r\n            </o-dropdown-item>\r\n        </o-dropdown>\r\n\r\n        <!-- Native Picker -->\r\n        <o-input\r\n            v-else\r\n            ref=\"nativeInputRef\"\r\n            v-bind=\"inputBind\"\r\n            :type=\"computedNativeType\"\r\n            autocomplete=\"off\"\r\n            :model-value=\"nativeValue\"\r\n            :min=\"nativeMin\"\r\n            :max=\"nativeMax\"\r\n            :step=\"nativeStep\"\r\n            :placeholder=\"picker.placeholder\"\r\n            :size=\"picker.size\"\r\n            :icon-pack=\"picker.iconPack\"\r\n            :icon=\"picker.icon\"\r\n            :icon-right=\"picker.iconRight\"\r\n            :icon-right-clickable=\"picker.iconRightClickable\"\r\n            :rounded=\"picker.rounded\"\r\n            :disabled=\"picker.disabled\"\r\n            :readonly=\"false\"\r\n            :use-html5-validation=\"false\"\r\n            @change=\"$emit('native-change', $event.target.value)\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\"\r\n            @invalid=\"onInvalid\"\r\n            @icon-click=\"$emit('icon-click', $event)\"\r\n            @icon-right-click=\"$emit('icon-right-click', $event)\" />\r\n    </div>\r\n</template>\r\n","/**\r\n * Return month names according to a specified locale\r\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\r\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\r\n * @return {Array<String>} An array of month names\r\n */\r\ntype MonthType =\r\n    | \"numeric\"\r\n    | \"2-digit\"\r\n    | \"long\"\r\n    | \"short\"\r\n    | \"narrow\"\r\n    | undefined;\r\n\r\nexport function getMonthNames(\r\n    locale: string = undefined,\r\n    format: MonthType = \"long\",\r\n): string[] {\r\n    const dates = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        dates.push(new Date(2000, i, 15));\r\n    }\r\n    const dtf = new Intl.DateTimeFormat(locale, {\r\n        month: format,\r\n        // timeZone: 'UTC'\r\n    });\r\n    return dates.map((d) => dtf.format(d));\r\n}\r\n\r\n/**\r\n * Return weekday names according to a specified locale\r\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\r\n * @param  {Number} first day of week index\r\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\r\n * @return {Array<String>} An array of weekday names\r\n */\r\n\r\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\r\n\r\nexport function getWeekdayNames(\r\n    locale: string = undefined,\r\n    firstDayOfWeek: number = 0,\r\n    format: WeekdayType = \"narrow\",\r\n): string[] {\r\n    const dates = [];\r\n    for (let i = 1, j = 0; j < 7; i++) {\r\n        const d = new Date(2000, 0, i);\r\n        const day = d.getDay();\r\n        if (day === firstDayOfWeek || j > 0) {\r\n            dates.push(d);\r\n            j++;\r\n        }\r\n    }\r\n    const dtf = new Intl.DateTimeFormat(locale, {\r\n        weekday: format,\r\n        // timeZone: 'UTC'\r\n    });\r\n    return dates.map((d) => dtf.format(d));\r\n}\r\n\r\n/**\r\n * Accept a regex with group names and return an object\r\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\r\n * will return { year: 2000, month: 12, day: 25 }\r\n * @param  {String} includes injections of (?!={groupname}) for each group\r\n * @param  {String} the string to run regex\r\n * @return {Object} an object with a property for each group having the group's match as the value\r\n */\r\nexport function matchWithGroups(pattern: string, str: string): any {\r\n    const matches = str.match(pattern);\r\n    return (\r\n        pattern\r\n            // get the pattern as a string\r\n            .toString()\r\n            // suss out the groups\r\n            .match(/<(.+?)>/g)\r\n            // remove the braces\r\n            .map((group) => {\r\n                const groupMatches = group.match(/<(.+)>/);\r\n                if (!groupMatches || groupMatches.length <= 0) {\r\n                    return null;\r\n                }\r\n                return group.match(/<(.+)>/)[1];\r\n            })\r\n            // create an object with a property for each group having the group's match as the value\r\n            .reduce((acc, curr, index) => {\r\n                if (matches && matches.length > index) {\r\n                    acc[curr] = matches[index + 1];\r\n                } else {\r\n                    acc[curr] = null;\r\n                }\r\n                return acc;\r\n            }, {})\r\n    );\r\n}\r\n\r\n/** Return array of all days in the week that the startingDate is within */\r\nexport function weekBuilder(\r\n    startingDate: number,\r\n    month: number,\r\n    year: number,\r\n    firstDayOfWeek: number,\r\n): Date[] {\r\n    const thisMonth = new Date(year, month);\r\n\r\n    const thisWeek = [];\r\n\r\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\r\n\r\n    const end =\r\n        dayOfWeek >= firstDayOfWeek\r\n            ? dayOfWeek - firstDayOfWeek\r\n            : 7 - firstDayOfWeek + dayOfWeek;\r\n\r\n    let daysAgo = 1;\r\n    for (let i = 0; i < end; i++) {\r\n        thisWeek.unshift(\r\n            new Date(\r\n                thisMonth.getFullYear(),\r\n                thisMonth.getMonth(),\r\n                startingDate - daysAgo,\r\n            ),\r\n        );\r\n        daysAgo++;\r\n    }\r\n\r\n    thisWeek.push(new Date(year, month, startingDate));\r\n\r\n    let daysForward = 1;\r\n    while (thisWeek.length < 7) {\r\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\r\n        daysForward++;\r\n    }\r\n\r\n    return thisWeek;\r\n}\r\n\r\nexport function firstWeekOffset(year, dow, doy): number {\r\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n    const fwd = 7 + dow - doy;\r\n    // first-week day local weekday -- which local weekday is fwd\r\n    const firstJanuary = new Date(year, 0, fwd);\r\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\r\n    return -fwdlw + fwd - 1;\r\n}\r\n\r\n/** Return the number of days in a specific year */\r\nexport function daysInYear(year): number {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\r\n}\r\n\r\n/** Return the number of weeks in a specific year */\r\nexport function weeksInYear(year, dow, doy): number {\r\n    const weekOffset = firstWeekOffset(year, dow, doy);\r\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n}\r\n","import { computed } from \"vue\";\r\nimport { matchWithGroups } from \"./utils\";\r\nimport type { DatepickerProps } from \"./types\";\r\n\r\nexport function useDatepickerMixins(props: DatepickerProps) {\r\n    /**\r\n     * Check that selected date is within earliest/latest params and\r\n     * is within a given month\r\n     */\r\n    function isDateSelectable(date: Date, month: number): boolean {\r\n        const validity = [];\r\n\r\n        if (props.minDate) validity.push(date >= props.minDate);\r\n        if (props.maxDate) validity.push(date <= props.maxDate);\r\n\r\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\r\n            validity.push(date.getMonth() === month);\r\n\r\n        if (props.selectableDates) {\r\n            if (typeof props.selectableDates === \"function\") {\r\n                if (props.selectableDates(date)) return true;\r\n                else validity.push(false);\r\n            } else {\r\n                for (let i = 0; i < props.selectableDates.length; i++) {\r\n                    const enabledDate = props.selectableDates[i];\r\n                    if (\r\n                        date.getDate() === enabledDate.getDate() &&\r\n                        date.getFullYear() === enabledDate.getFullYear() &&\r\n                        date.getMonth() === enabledDate.getMonth()\r\n                    )\r\n                        return true;\r\n                    else validity.push(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.unselectableDates) {\r\n            if (typeof props.unselectableDates === \"function\") {\r\n                validity.push(!props.unselectableDates(date));\r\n            } else {\r\n                for (let i = 0; i < props.unselectableDates.length; i++) {\r\n                    const disabledDate = props.unselectableDates[i];\r\n                    validity.push(\r\n                        date.getDate() !== disabledDate.getDate() ||\r\n                            date.getFullYear() !== disabledDate.getFullYear() ||\r\n                            date.getMonth() !== disabledDate.getMonth(),\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.unselectableDaysOfWeek) {\r\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\r\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\r\n                validity.push(date.getDay() !== dayOfWeek);\r\n            }\r\n        }\r\n\r\n        return validity.indexOf(false) < 0;\r\n    }\r\n\r\n    const isTypeMonth = computed(() => props.type === \"month\");\r\n\r\n    const localeOptions = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                year: \"numeric\",\r\n                month: \"numeric\",\r\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n    );\r\n\r\n    /** DateTime Format */\r\n    const dtf = computed(\r\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\r\n    );\r\n\r\n    /** DateTime Month Format */\r\n    const dtfMonth = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                year: localeOptions.value.year || \"numeric\",\r\n                month: localeOptions.value.month || \"2-digit\",\r\n                // timeZone: 'UTC'\r\n            }),\r\n    );\r\n\r\n    const sampleTime = computed(() => {\r\n        const d = props.dateCreator();\r\n        d.setHours(10);\r\n        d.setSeconds(0);\r\n        d.setMinutes(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    });\r\n\r\n    /** Format date into string */\r\n    const defaultDateFormatter = (date: Date | Date[]): string => {\r\n        if (!date) return \"\";\r\n        const targetDates = Array.isArray(date) ? date : [date];\r\n        const dates = targetDates.map((date) => {\r\n            const d = new Date(\r\n                date.getFullYear(),\r\n                date.getMonth(),\r\n                date.getDate(),\r\n                12,\r\n            );\r\n            return !isTypeMonth.value\r\n                ? dtf.value.format(d)\r\n                : dtfMonth.value.format(d);\r\n        });\r\n        return !props.multiple ? dates.join(\" - \") : dates.join(\", \");\r\n    };\r\n\r\n    /** Parse a string into a date */\r\n    const defaultDateParser = (date: string): Date => {\r\n        if (!date) return null;\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const formatRegex = (isTypeMonth.value ? dtfMonth.value : dtf.value)\r\n                .formatToParts(sampleTime.value)\r\n                .map((part) => {\r\n                    if (part.type === \"literal\") return part.value;\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const dateGroups = matchWithGroups(formatRegex, date);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            if (\r\n                dateGroups.year &&\r\n                dateGroups.year.length === 4 &&\r\n                dateGroups.month &&\r\n                dateGroups.month <= 12\r\n            ) {\r\n                if (isTypeMonth.value)\r\n                    return new Date(dateGroups.year, dateGroups.month - 1);\r\n                else if (dateGroups.day && dateGroups.day <= 31) {\r\n                    return new Date(\r\n                        dateGroups.year,\r\n                        dateGroups.month - 1,\r\n                        dateGroups.day,\r\n                        12,\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\r\n        if (!isTypeMonth.value) return new Date(Date.parse(date));\r\n        const s = date.split(\"/\");\r\n        const year = s[0].length === 4 ? s[0] : s[1];\r\n        const month = s[0].length === 2 ? s[0] : s[1];\r\n        if (year && month) {\r\n            return new Date(\r\n                parseInt(year, 10),\r\n                parseInt(month, 10) - 1,\r\n                1,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n            );\r\n        }\r\n    };\r\n\r\n    return { isDateSelectable, defaultDateParser, defaultDateFormatter };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    watch,\r\n    nextTick,\r\n    ref,\r\n    type PropType,\r\n    type ComponentPublicInstance,\r\n} from \"vue\";\r\n\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\r\nimport type { DatepickerProps, DatepickerEvent } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerTableRow\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    day: { type: Number, required: true },\r\n    week: { type: Array as PropType<Date[]>, required: true },\r\n    month: { type: Number, required: true },\r\n    selectedDate: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\r\n    hoveredDateRange: { type: Array as PropType<Date[]>, default: () => [] },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"select\", value: Date): void;\r\n    (e: \"hover-enddate\", value: Date): void;\r\n    (e: \"change-focus\", value: Date): void;\r\n    (e: \"week-number-click\", value: number): void;\r\n}>();\r\n\r\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst hasEvents = computed(() => !!props.events?.length);\r\n\r\nconst dayRefs = ref(new Map());\r\n\r\nfunction setDayRef(date: Date, el: Element | ComponentPublicInstance): void {\r\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\r\n    if (el) dayRefs.value.set(refKey, el);\r\n}\r\n\r\nwatch(\r\n    () => props.day,\r\n    (day) => {\r\n        // if day is in week\r\n        if (props.week.map((d) => d.getDate()).includes(day))\r\n            nextTick(() => {\r\n                // $nextTick is needed when month is changed\r\n                const refKey = `day-${props.month}-${day}`;\r\n                const ref = dayRefs.value.get(refKey);\r\n                if (ref) ref.focus();\r\n            });\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.month,\r\n    // clear day refs on month change\r\n    () => (dayRefs.value = new Map()),\r\n);\r\n\r\nfunction clickWeekNumber(week: number): void {\r\n    if (datepicker.value.weekNumberClickable) emits(\"week-number-click\", week);\r\n}\r\n\r\nfunction getDayOfYear(input): number {\r\n    return (\r\n        Math.round(\r\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\r\n                864e5,\r\n        ) + 1\r\n    );\r\n}\r\n\r\nfunction getWeekNumber(mom): number {\r\n    const dow = datepicker.value.firstDayOfWeek; // first day of week\r\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\r\n    const doy = datepicker.value.rulesForFirstWeek;\r\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\r\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\r\n    let resWeek;\r\n    let resYear;\r\n    if (week < 1) {\r\n        resYear = mom.getFullYear() - 1;\r\n        resWeek = week + weeksInYear(resYear, dow, doy);\r\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\r\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\r\n        resYear = mom.getFullYear() + 1;\r\n    } else {\r\n        resYear = mom.getFullYear();\r\n        resWeek = week;\r\n    }\r\n    return resWeek;\r\n}\r\n\r\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\r\n    if (!props.events?.length) return [];\r\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\r\n    let preventDefault = true;\r\n    switch (event.key) {\r\n        case \"Tab\": {\r\n            preventDefault = false;\r\n            break;\r\n        }\r\n        case \" \":\r\n        case \"Space\":\r\n        case \"Spacebar\":\r\n        case \"Enter\": {\r\n            selectDate(weekDay);\r\n            break;\r\n        }\r\n\r\n        case \"ArrowLeft\":\r\n        case \"Left\": {\r\n            changeFocus(weekDay, -1);\r\n            break;\r\n        }\r\n        case \"ArrowRight\":\r\n        case \"Right\": {\r\n            changeFocus(weekDay, 1);\r\n            break;\r\n        }\r\n        case \"ArrowUp\":\r\n        case \"Up\": {\r\n            changeFocus(weekDay, -7);\r\n            break;\r\n        }\r\n        case \"ArrowDown\":\r\n        case \"Down\": {\r\n            changeFocus(weekDay, 7);\r\n            break;\r\n        }\r\n    }\r\n    if (preventDefault) event.preventDefault();\r\n}\r\n\r\n/** Emit select event with chosen date as payload */\r\nfunction selectDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\r\n}\r\n\r\nfunction changeFocus(day, inc): void {\r\n    const nextDay = new Date(day.getTime());\r\n    nextDay.setDate(day.getDate() + inc);\r\n    // if next day is out of range or not selectable, move to next selectable date\r\n    while (\r\n        (datepicker.value.minDate && nextDay < datepicker.value.minDate) ||\r\n        (datepicker.value.maxDate && nextDay > datepicker.value.maxDate) ||\r\n        !isDateSelectable(nextDay, nextDay.getMonth())\r\n    ) {\r\n        // revert day selection until selectable day is reached\r\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\r\n    }\r\n    setRangeHoverEndDate(nextDay);\r\n    emits(\"change-focus\", nextDay);\r\n}\r\n\r\nfunction setRangeHoverEndDate(day): void {\r\n    if (datepicker.value.range) emits(\"hover-enddate\", day);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nfunction dateMatch(\r\n    dateOne: Date,\r\n    dateTwo: Date | Date[],\r\n    multiple = false,\r\n): boolean {\r\n    // if either date is null or undefined, return false\r\n    // if using multiple flag, return false\r\n    if (!dateOne || !dateTwo || multiple) return false;\r\n\r\n    if (Array.isArray(dateTwo)) {\r\n        return dateTwo.some(\r\n            (date) =>\r\n                dateOne.getDate() === date.getDate() &&\r\n                dateOne.getFullYear() === date.getFullYear() &&\r\n                dateOne.getMonth() === date.getMonth(),\r\n        );\r\n    }\r\n    return (\r\n        dateOne.getDate() === dateTwo.getDate() &&\r\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\r\n        dateOne.getMonth() === dateTwo.getMonth()\r\n    );\r\n}\r\n\r\nfunction dateWithin(\r\n    dateOne: Date,\r\n    dates: Date | Date[],\r\n    multiple = false,\r\n): boolean {\r\n    if (!Array.isArray(dates) || multiple) return false;\r\n    return dateOne > dates[0] && dateOne < dates[1];\r\n}\r\n\r\n/** Build cellClasses for cell using validations */\r\nfunction cellClasses(day: Date): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"tableCellSelectedClass\",\r\n            \"o-dpck__table__cell--selected\",\r\n            null,\r\n            dateMatch(day, props.selectedDate) ||\r\n                dateWithin(day, props.selectedDate, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"tableCellFirstSelectedClass\",\r\n            \"o-dpck__table__cell--first-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.selectedDate) && props.selectedDate[0],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellWithinSelectedClass\",\r\n            \"o-dpck__table__cell--within-selected\",\r\n            null,\r\n            dateWithin(day, props.selectedDate, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"tableCellLastSelectedClass\",\r\n            \"o-dpck__table__cell--last-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.selectedDate) && props.selectedDate[1],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellFirstHoveredClass\",\r\n            \"o-dpck__table__cell--first-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.hoveredDateRange) &&\r\n                    props.hoveredDateRange[0],\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellWithinHoveredClass\",\r\n            \"o-dpck__table__cell--within-hovered\",\r\n            null,\r\n            dateWithin(day, props.hoveredDateRange),\r\n        ],\r\n        [\r\n            \"tableCellLastHoveredClass\",\r\n            \"o-dpck__table__cell--last-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.hoveredDateRange) &&\r\n                    props.hoveredDateRange[1],\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellTodayClass\",\r\n            \"o-dpck__table__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n        [\r\n            \"tableCellSelectableClass\",\r\n            \"o-dpck__table__cell--selectable\",\r\n            null,\r\n            isDateSelectable(day, props.month) && !datepicker.value.disabled,\r\n        ],\r\n        [\r\n            \"tableCellUnselectableClass\",\r\n            \"o-dpck__table__cell--unselectable\",\r\n            null,\r\n            !isDateSelectable(day, props.month) || datepicker.value.disabled,\r\n        ],\r\n\r\n        [\r\n            \"tableCellInvisibleClass\",\r\n            \"o-dpck__table__cell--invisible\",\r\n            null,\r\n            !datepicker.value.nearbyMonthDays && day.getMonth() !== props.month,\r\n        ],\r\n\r\n        [\r\n            \"tableCellNearbyClass\",\r\n            \"o-dpck__table__cell--nearby\",\r\n            null,\r\n            datepicker.value.nearbySelectableMonthDays &&\r\n                day.getMonth() !== props.month,\r\n        ],\r\n        [\r\n            \"tableCellTodayClass\",\r\n            \"o-dpck__table__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n    );\r\n\r\n    return [\r\n        ...tableCellClasses.value,\r\n        ...cellEventsClass.value,\r\n        ...classes.value,\r\n    ];\r\n}\r\n\r\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"tableEventClass\", \"o-dpck__table__event\"],\r\n        [\r\n            \"tableEventVariantClass\",\r\n            \"o-dpck__table__event--\",\r\n            event.type,\r\n            !!event.type,\r\n        ],\r\n        [\r\n            \"tableEventIndicatorsClass\",\r\n            \"o-dpck__table__event--\",\r\n            datepicker.value.indicators,\r\n            !!datepicker.value.indicators,\r\n        ],\r\n    );\r\n    return classes.value;\r\n}\r\n\r\nconst tableRowClasses = defineClasses([\"tableRowClass\", \"o-dpck__table__row\"]);\r\n\r\nconst tableCellClasses = defineClasses([\r\n    \"tableCellClass\",\r\n    \"o-dpck__table__cell\",\r\n]);\r\n\r\nconst tableEventsClasses = defineClasses([\r\n    \"tableEventsClass\",\r\n    \"o-dpck__table__events\",\r\n]);\r\n\r\nconst cellEventsClass = defineClasses([\r\n    \"tableCellEventsClass\",\r\n    \"o-dpck__table__cell--events\",\r\n    null,\r\n    hasEvents,\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"tableRowClasses\">\r\n        <div\r\n            v-if=\"datepicker.showWeekNumber\"\r\n            :class=\"tableCellClasses\"\r\n            :style=\"{\r\n                cursor: datepicker.weekNumberClickable ? 'pointer' : 'auto',\r\n            }\"\r\n            :tabindex=\"datepicker.weekNumberClickable ? 0 : null\"\r\n            role=\"button\"\r\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\r\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\r\n            <span>{{ getWeekNumber(week[6]) }}</span>\r\n        </div>\r\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\r\n            <div\r\n                v-if=\"!datepicker.disabled && isDateSelectable(weekDay, month)\"\r\n                :ref=\"(el) => setDayRef(weekDay, el)\"\r\n                :class=\"cellClasses(weekDay)\"\r\n                role=\"button\"\r\n                :tabindex=\"\r\n                    day === weekDay.getDate() && month === weekDay.getMonth()\r\n                        ? null\r\n                        : 0\r\n                \"\r\n                @click.prevent=\"selectDate(weekDay)\"\r\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\r\n                @focus=\"setRangeHoverEndDate(weekDay)\"\r\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\r\n                <span>{{ weekDay.getDate() }}</span>\r\n                <div\r\n                    v-if=\"eventsDateMatch(weekDay).length\"\r\n                    :class=\"tableEventsClasses\">\r\n                    <div\r\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\r\n                        :key=\"index\"\r\n                        :class=\"eventClasses(event)\" />\r\n                </div>\r\n            </div>\r\n            <div v-else :class=\"cellClasses(weekDay)\">\r\n                <span>{{ weekDay.getDate() }}</span>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\r\n\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { weekBuilder } from \"./utils\";\r\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerTable\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\r\n    dayNames: { type: Array as PropType<string[]>, required: true },\r\n    monthNames: { type: Array as PropType<string[]>, required: true },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** modelValue prop two-way binding */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /** focusedDate prop two-way binding */\r\n    (e: \"update:focusedDate\", value: FocusedDate): void;\r\n    (e: \"range-start\", value: Date): void;\r\n    (e: \"range-end\", value: Date): void;\r\n    (e: \"week-number-click\", value: number): void;\r\n}>();\r\n\r\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\r\n\r\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\");\r\n\r\nconst selectedBeginDate = ref<Date>();\r\nconst selectedEndDate = ref<Date>();\r\nconst hoveredEndDate = ref<Date>();\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst visibleDayNames = computed(() => {\r\n    const visibleDayNames = [];\r\n    let index = datepicker.value.firstDayOfWeek;\r\n    while (visibleDayNames.length < props.dayNames.length) {\r\n        const currentDayName = props.dayNames[index % props.dayNames.length];\r\n        visibleDayNames.push(currentDayName);\r\n        index++;\r\n    }\r\n    if (datepicker.value.showWeekNumber) visibleDayNames.unshift(\"\");\r\n    return visibleDayNames;\r\n});\r\n\r\n/** Return array of all events in the specified month */\r\nconst eventsInThisMonth = computed(() => {\r\n    if (!datepicker.value.events) return [];\r\n    return datepicker.value.events\r\n        .map((event) =>\r\n            !event.date && event instanceof Date ? { date: event } : event,\r\n        )\r\n        .filter(\r\n            (event) =>\r\n                event.date.getMonth() === focusedDateModel.value.month &&\r\n                event.date.getFullYear() === focusedDateModel.value.year,\r\n        );\r\n});\r\n\r\n/** Return array of all weeks in the specified month */\r\nconst weeksInThisMonth = computed(() => {\r\n    validateFocusedDay();\r\n    const month = focusedDateModel.value.month;\r\n    const year = focusedDateModel.value.year;\r\n    const weeksInThisMonth = [];\r\n\r\n    let startingDay = 1;\r\n\r\n    while (weeksInThisMonth.length < 6) {\r\n        const newWeek = weekBuilder(\r\n            startingDay,\r\n            month,\r\n            year,\r\n            datepicker.value.firstDayOfWeek,\r\n        );\r\n        weeksInThisMonth.push(newWeek);\r\n        startingDay += 7;\r\n    }\r\n\r\n    return weeksInThisMonth;\r\n});\r\n\r\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\r\n    if (!datepicker.value.events) return [];\r\n    return eventsInThisMonth.value.filter((event) => {\r\n        const stripped = new Date(event.date);\r\n        stripped.setHours(0, 0, 0, 0);\r\n        const timed = stripped.getTime();\r\n        return week.some((weekDate) => weekDate.getTime() === timed);\r\n    });\r\n}\r\n\r\nconst hoveredDateRange = computed(() => {\r\n    if (!datepicker.value.range || selectedEndDate.value) return [];\r\n    return (\r\n        hoveredEndDate.value < selectedBeginDate.value\r\n            ? [hoveredEndDate.value, selectedBeginDate.value]\r\n            : [selectedBeginDate.value, hoveredEndDate.value]\r\n    ).filter(isDefined);\r\n});\r\n\r\nfunction validateFocusedDay(): void {\r\n    const currentDate = new Date(\r\n        focusedDateModel.value.year,\r\n        focusedDateModel.value.month,\r\n        focusedDateModel.value.day,\r\n    );\r\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\r\n\r\n    let day = 0;\r\n    // Number of days in the current month\r\n    const monthDays = new Date(\r\n        focusedDateModel.value.year,\r\n        focusedDateModel.value.month + 1,\r\n        0,\r\n    ).getDate();\r\n    let firstFocusable = null;\r\n    while (!firstFocusable && ++day < monthDays) {\r\n        const date = new Date(\r\n            focusedDateModel.value.year,\r\n            focusedDateModel.value.month,\r\n            day,\r\n        );\r\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\r\n            firstFocusable = currentDate;\r\n            focusedDateModel.value = {\r\n                day: date.getDate(),\r\n                month: date.getMonth(),\r\n                year: date.getFullYear(),\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\n/** Emit input event with selected date as payload for v-model in parent */\r\nfunction onSelectedDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (!datepicker.value.range && !datepicker.value.multiple)\r\n        emits(\"update:modelValue\", date);\r\n    else if (datepicker.value.range) handleSelectRangeDate(date);\r\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\r\n}\r\n\r\n/*\r\n * If both begin and end dates are set, reset the end date and set the begin date.\r\n * If only begin date is selected, emit an array of the begin date and the new date.\r\n * If not set, only set the begin date.\r\n */\r\nfunction handleSelectRangeDate(date: Date): void {\r\n    if (selectedBeginDate.value && selectedEndDate.value) {\r\n        selectedBeginDate.value = date;\r\n        selectedEndDate.value = undefined;\r\n        emits(\"range-start\", date);\r\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\r\n        if (selectedBeginDate.value > date) {\r\n            selectedEndDate.value = selectedBeginDate.value;\r\n            selectedBeginDate.value = date;\r\n        } else {\r\n            selectedEndDate.value = date;\r\n        }\r\n        emits(\"range-end\", date);\r\n        emits(\"update:modelValue\", [\r\n            selectedBeginDate.value,\r\n            selectedEndDate.value,\r\n        ]);\r\n    } else {\r\n        selectedBeginDate.value = date;\r\n        emits(\"range-start\", date);\r\n    }\r\n}\r\n\r\n/*\r\n * If selected date already exists list of selected dates, remove it from the list\r\n * Otherwise, add date to list of selected dates\r\n */\r\nfunction handleSelectMultipleDates(date: Date): void {\r\n    if (!Array.isArray(props.modelValue)) return;\r\n\r\n    let multipleSelectedDates = props.modelValue;\r\n    const multipleSelect = multipleSelectedDates.filter(\r\n        (selectedDate) =>\r\n            selectedDate.getDate() === date.getDate() &&\r\n            selectedDate.getFullYear() === date.getFullYear() &&\r\n            selectedDate.getMonth() === date.getMonth(),\r\n    );\r\n    if (multipleSelect.length) {\r\n        multipleSelectedDates = multipleSelectedDates.filter(\r\n            (selectedDate) =>\r\n                selectedDate.getDate() !== date.getDate() ||\r\n                selectedDate.getFullYear() !== date.getFullYear() ||\r\n                selectedDate.getMonth() !== date.getMonth(),\r\n        );\r\n    } else {\r\n        multipleSelectedDates = [...multipleSelectedDates, date];\r\n    }\r\n    emits(\"update:modelValue\", multipleSelectedDates);\r\n}\r\n\r\nfunction onRangeHoverEndDate(date: Date): void {\r\n    hoveredEndDate.value = date;\r\n}\r\n\r\nfunction onChangeFocus(date: Date): void {\r\n    focusedDateModel.value = {\r\n        day: date.getDate(),\r\n        month: date.getMonth(),\r\n        year: date.getFullYear(),\r\n    };\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst tableClasses = defineClasses([\"tableClass\", \"o-dpck__table\"]);\r\n\r\nconst tableHeadClasses = defineClasses([\r\n    \"tableHeadClass\",\r\n    \"o-dpck__table__head\",\r\n]);\r\n\r\nconst tableCellClasses = defineClasses([\r\n    \"tableCellClass\",\r\n    \"o-dpck__table__cell\",\r\n]);\r\n\r\nconst tableHeadCellClasses = defineClasses([\r\n    \"tableHeadCellClass\",\r\n    \"o-dpck__table__head-cell\",\r\n]);\r\n\r\nconst tableBodyClasses = defineClasses([\r\n    \"tableBodyClass\",\r\n    \"o-dpck__table__body\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <section :class=\"tableClasses\">\r\n        <header :class=\"tableHeadClasses\">\r\n            <div\r\n                v-for=\"(day, index) in visibleDayNames\"\r\n                :key=\"index\"\r\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\r\n                <span>{{ day }}</span>\r\n            </div>\r\n        </header>\r\n        <div :class=\"tableBodyClasses\">\r\n            <o-datepicker-table-row\r\n                v-for=\"(week, index) in weeksInThisMonth\"\r\n                :key=\"index\"\r\n                :selected-date=\"modelValue\"\r\n                :day=\"focusedDateModel.day\"\r\n                :week=\"week\"\r\n                :month=\"focusedDateModel.month\"\r\n                :events=\"eventsInThisWeek(week)\"\r\n                :hovered-date-range=\"hoveredDateRange\"\r\n                :picker-props=\"props.pickerProps\"\r\n                @select=\"onSelectedDate\"\r\n                @hover-enddate=\"onRangeHoverEndDate\"\r\n                @change-focus=\"onChangeFocus\"\r\n                @week-number-click=\"$emit('week-number-click', $event)\" />\r\n        </div>\r\n    </section>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    nextTick,\r\n    watch,\r\n    type PropType,\r\n    type ComponentPublicInstance,\r\n} from \"vue\";\r\n\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerMonth\",\r\n    configField: \"datepicker\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    monthNames: { type: Array as PropType<string[]>, required: true },\r\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** modelValue prop two-way binding */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /** focusedDate prop two-way binding */\r\n    (e: \"update:focusedDate\", value: FocusedDate): void;\r\n    (e: \"range-start\", value: Date): void;\r\n    (e: \"range-end\", value: Date): void;\r\n}>();\r\n\r\nconst selectedBeginDate = ref<Date>();\r\nconst selectedEndDate = ref<Date>();\r\nconst hoveredEndDate = ref<Date>();\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst hasEvents = computed(() => !!datepicker.value.events?.length);\r\n\r\nconst monthRefs = ref(new Map());\r\n\r\nfunction setMonthRef(date: Date, el: Element | ComponentPublicInstance): void {\r\n    const refKey = `month-${date.getMonth()}`;\r\n    if (el) monthRefs.value.set(refKey, el);\r\n}\r\n\r\nwatch(\r\n    () => props.focusedDate.month,\r\n    (month) => {\r\n        const refKey = `month-${month}`;\r\n        nextTick(() => {\r\n            // $nextTick is needed when month is changed\r\n            const ref = monthRefs.value.get(refKey);\r\n            if (ref?.length > 0 && ref[0]) {\r\n                ref[0].focus();\r\n            }\r\n        });\r\n    },\r\n);\r\n\r\n/** Return array of all events in the specified month */\r\nconst eventsInThisYear = computed(() => {\r\n    if (!datepicker.value.events) return [];\r\n\r\n    return datepicker.value.events\r\n        .map((event) => {\r\n            if (!event.date && event instanceof Date) event = { date: event };\r\n            if (!event.type) event.type = \"is-primary\";\r\n            return event;\r\n        })\r\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\r\n});\r\n\r\nconst monthDates = computed(() => {\r\n    const year = props.focusedDate.year;\r\n    const months = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        const d = new Date(year, i, 1);\r\n        d.setHours(0, 0, 0, 0);\r\n        months.push(d);\r\n    }\r\n    return months;\r\n});\r\n\r\nconst hoveredDateRange = computed(() => {\r\n    if (!datepicker.value.range || !selectedEndDate.value) return [];\r\n\r\n    return (\r\n        hoveredEndDate.value < selectedBeginDate.value\r\n            ? [hoveredEndDate.value, selectedBeginDate.value]\r\n            : [selectedBeginDate.value, hoveredEndDate.value]\r\n    ).filter(isDefined);\r\n});\r\n\r\nfunction eventsDateMatch(day): DatepickerEvent[] {\r\n    if (!eventsInThisYear.value.length) return [];\r\n    return eventsInThisYear.value.filter(\r\n        (event) => event.date.getMonth() === day.getMonth(),\r\n    );\r\n}\r\n\r\nfunction isDateSelectable(date: Date): boolean {\r\n    const validity = [];\r\n\r\n    if (datepicker.value.minDate)\r\n        validity.push(date >= datepicker.value.minDate);\r\n    if (datepicker.value.maxDate)\r\n        validity.push(date <= datepicker.value.maxDate);\r\n\r\n    validity.push(date.getFullYear() === props.focusedDate.year);\r\n\r\n    if (datepicker.value.selectableDates) {\r\n        if (typeof datepicker.value.selectableDates === \"function\") {\r\n            if (datepicker.value.selectableDates(date)) return true;\r\n            else validity.push(false);\r\n        } else {\r\n            for (let i = 0; i < datepicker.value.selectableDates.length; i++) {\r\n                const enabledDate = datepicker.value.selectableDates[i];\r\n                if (\r\n                    date.getFullYear() === enabledDate.getFullYear() &&\r\n                    date.getMonth() === enabledDate.getMonth()\r\n                )\r\n                    return true;\r\n                else validity.push(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (datepicker.value.unselectableDates) {\r\n        if (typeof datepicker.value.unselectableDates === \"function\") {\r\n            validity.push(!datepicker.value.unselectableDates(date));\r\n        } else {\r\n            for (\r\n                let i = 0;\r\n                i < datepicker.value.unselectableDates.length;\r\n                i++\r\n            ) {\r\n                const disabledDate = datepicker.value.unselectableDates[i];\r\n                validity.push(\r\n                    date.getFullYear() !== disabledDate.getFullYear() ||\r\n                        date.getMonth() !== disabledDate.getMonth(),\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    if (datepicker.value.unselectableDaysOfWeek) {\r\n        for (\r\n            let i = 0;\r\n            i < datepicker.value.unselectableDaysOfWeek.length;\r\n            i++\r\n        ) {\r\n            const dayOfWeek = datepicker.value.unselectableDaysOfWeek[i];\r\n            validity.push(date.getDay() !== dayOfWeek);\r\n        }\r\n    }\r\n\r\n    return validity.indexOf(false) < 0;\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\r\n    let preventDefault = true;\r\n    switch (event.key) {\r\n        case \"Tab\": {\r\n            preventDefault = false;\r\n            break;\r\n        }\r\n        case \" \":\r\n        case \"Space\":\r\n        case \"Spacebar\":\r\n        case \"Enter\": {\r\n            selectDate(weekDay);\r\n            break;\r\n        }\r\n\r\n        case \"ArrowLeft\":\r\n        case \"Left\": {\r\n            changeFocus(weekDay, -1);\r\n            break;\r\n        }\r\n        case \"ArrowRight\":\r\n        case \"Right\": {\r\n            changeFocus(weekDay, 1);\r\n            break;\r\n        }\r\n        case \"ArrowUp\":\r\n        case \"Up\": {\r\n            changeFocus(weekDay, -7);\r\n            break;\r\n        }\r\n        case \"ArrowDown\":\r\n        case \"Down\": {\r\n            changeFocus(weekDay, 7);\r\n            break;\r\n        }\r\n    }\r\n    if (preventDefault) event.preventDefault();\r\n}\r\n\r\n/*\r\n * Emit update:modelValue event with selected date as payload for v-model in parent\r\n */\r\nfunction selectDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (\r\n        !datepicker.value.range &&\r\n        !datepicker.value.multiple &&\r\n        isDateSelectable(date)\r\n    )\r\n        emits(\"update:modelValue\", date);\r\n    else if (datepicker.value.range) handleSelectRangeDate(date);\r\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\r\n}\r\n\r\n/*\r\n * If both begin and end dates are set, reset the end date and set the begin date.\r\n * If only begin date is selected, emit an array of the begin date and the new date.\r\n * If not set, only set the begin date.\r\n */\r\nfunction handleSelectRangeDate(date: Date): void {\r\n    if (selectedBeginDate.value && selectedEndDate.value) {\r\n        selectedBeginDate.value = date;\r\n        selectedEndDate.value = undefined;\r\n        emits(\"range-start\", date);\r\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\r\n        if (selectedBeginDate.value > date) {\r\n            selectedEndDate.value = selectedBeginDate.value;\r\n            selectedBeginDate.value = date;\r\n        } else {\r\n            selectedEndDate.value = date;\r\n        }\r\n        emits(\"range-end\", date);\r\n        emits(\"update:modelValue\", [\r\n            selectedBeginDate.value,\r\n            selectedEndDate.value,\r\n        ]);\r\n    } else {\r\n        selectedBeginDate.value = date;\r\n        emits(\"range-start\", date);\r\n    }\r\n}\r\n\r\nconst multipleSelectedDates = computed(() =>\r\n    datepicker.value.multiple && props.modelValue ? props.modelValue : [],\r\n);\r\n\r\nfunction handleSelectMultipleDates(date: Date): void {\r\n    if (!Array.isArray(props.modelValue)) return;\r\n    let multipleSelectedDates = props.modelValue;\r\n\r\n    const multipleSelect = multipleSelectedDates.filter(\r\n        (selectedDate) =>\r\n            selectedDate.getDate() === date.getDate() &&\r\n            selectedDate.getFullYear() === date.getFullYear() &&\r\n            selectedDate.getMonth() === date.getMonth(),\r\n    );\r\n    if (multipleSelect.length) {\r\n        multipleSelectedDates = multipleSelectedDates.filter(\r\n            (selectedDate) =>\r\n                selectedDate.getDate() !== date.getDate() ||\r\n                selectedDate.getFullYear() !== date.getFullYear() ||\r\n                selectedDate.getMonth() !== date.getMonth(),\r\n        );\r\n    } else {\r\n        multipleSelectedDates.push(date);\r\n    }\r\n    emits(\"update:modelValue\", multipleSelectedDates);\r\n}\r\n\r\nfunction changeFocus(month: Date, inc: number): void {\r\n    month.setMonth(month.getMonth() + inc);\r\n    const focused = {\r\n        day: month.getDate(),\r\n        month: month.getMonth(),\r\n        year: month.getFullYear(),\r\n    };\r\n    emits(\"update:focusedDate\", focused);\r\n}\r\n\r\nfunction onRangeHoverEndDate(day: Date): void {\r\n    if (datepicker.value.range) hoveredEndDate.value = day;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\r\n    // if either date is null or undefined, return false\r\n    if (!dateOne || !dateTwo || multiple) return false;\r\n    if (Array.isArray(dateTwo))\r\n        return dateTwo.some(\r\n            (date) =>\r\n                dateOne.getFullYear() === date.getFullYear() &&\r\n                dateOne.getMonth() === date.getMonth(),\r\n        );\r\n    return (\r\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\r\n        dateOne.getMonth() === dateTwo.getMonth()\r\n    );\r\n}\r\n\r\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\r\n    if (!Array.isArray(dates) || multiple) return false;\r\n    return dateOne > dates[0] && dateOne < dates[1];\r\n}\r\n\r\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\r\n    if (!Array.isArray(dates) || !multiple) return false;\r\n    return dates.some(\r\n        (date) =>\r\n            dateOne.getDate() === date.getDate() &&\r\n            dateOne.getFullYear() === date.getFullYear() &&\r\n            dateOne.getMonth() === date.getMonth(),\r\n    );\r\n}\r\n\r\nconst monthClasses = defineClasses([\"monthClass\", \"o-dpck__month\"]);\r\n\r\nconst monthBodyClasses = defineClasses([\r\n    \"monthBodyClass\",\r\n    \"o-dpck__month__body\",\r\n]);\r\n\r\nconst monthTableClasses = defineClasses([\r\n    \"monthTableClass\",\r\n    \"o-dpck__month__table\",\r\n]);\r\n\r\nconst monthCellClasses = defineClasses(\r\n    [\"monthCellClass\", \"o-dpck__month__cell\"],\r\n    [\"monthCellEventsClass\", \"o-dpck__month__cell--events\", null, hasEvents],\r\n);\r\n\r\n/**\r\n * Build cellClasses for cell using validations\r\n */\r\nfunction cellClasses(day: Date): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"monthCellSelectedClass\",\r\n            \"o-dpck__month__cell--selected\",\r\n            null,\r\n            dateMatch(day, props.modelValue, datepicker.value.multiple) ||\r\n                dateWithin(day, props.modelValue, datepicker.value.multiple) ||\r\n                dateMultipleSelected(\r\n                    day,\r\n                    multipleSelectedDates.value,\r\n                    datepicker.value.multiple,\r\n                ),\r\n        ],\r\n\r\n        [\r\n            \"monthCellFirstSelectedClass\",\r\n            \"o-dpck__month__cell--first-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.modelValue) && props.modelValue[0],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinSelectedClass\",\r\n            \"o-dpck__month__cell--within-selected\",\r\n            null,\r\n            dateWithin(day, props.modelValue, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"monthCellLastSelectedClass\",\r\n            \"o-dpck__month__cell--last-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.modelValue) && props.modelValue[1],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinHoveredRangeClass\",\r\n            \"o-dpck__month__cell--within-hovered-range\",\r\n            null,\r\n            hoveredDateRange.value &&\r\n                hoveredDateRange.value.length === 2 &&\r\n                (dateMatch(day, hoveredDateRange.value) ||\r\n                    dateWithin(day, hoveredDateRange.value)),\r\n        ],\r\n        [\r\n            \"monthCellFirstHoveredClass\",\r\n            \"o-dpck__month__cell--first-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(hoveredDateRange.value) &&\r\n                    hoveredDateRange.value[0],\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinHoveredClass\",\r\n            \"o-dpck__month__cell--within-hovered\",\r\n            null,\r\n            dateWithin(day, hoveredDateRange.value),\r\n        ],\r\n        [\r\n            \"monthCellLastHoveredClass\",\r\n            \"o-dpck__month__cell--last-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(hoveredDateRange.value) &&\r\n                    hoveredDateRange.value[1],\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellTodayClass\",\r\n            \"o-dpck__month__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n        [\r\n            \"monthCellSelectableclass\",\r\n            \"o-dpck__month__cell--selectable\",\r\n            null,\r\n            isDateSelectable(day) && !datepicker.value.disabled,\r\n        ],\r\n        [\r\n            \"monthCellUnselectableClass\",\r\n            \"o-dpck__month__cell--unselectable\",\r\n            null,\r\n            !isDateSelectable(day) || datepicker.value.disabled,\r\n        ],\r\n    );\r\n\r\n    return [...monthCellClasses.value, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <section :class=\"monthClasses\">\r\n        <div :class=\"monthBodyClasses\">\r\n            <div :class=\"monthTableClasses\">\r\n                <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\r\n                    <div\r\n                        v-if=\"!datepicker.disabled && isDateSelectable(date)\"\r\n                        :ref=\"(el) => setMonthRef(date, el)\"\r\n                        :class=\"cellClasses(date)\"\r\n                        role=\"button\"\r\n                        :disabled=\"datepicker.disabled\"\r\n                        :tabindex=\"\r\n                            focusedDate.month === date.getMonth() ? null : 0\r\n                        \"\r\n                        @click.prevent=\"selectDate(date)\"\r\n                        @mouseenter=\"onRangeHoverEndDate(date)\"\r\n                        @focus=\"onRangeHoverEndDate(date)\"\r\n                        @keydown.prevent=\"onKeydown($event, date)\">\r\n                        {{ monthNames[date.getMonth()] }}\r\n                        <div v-if=\"eventsDateMatch(date).length\" class=\"events\">\r\n                            <div\r\n                                v-for=\"(event, index) in eventsDateMatch(date)\"\r\n                                :key=\"index\"\r\n                                class=\"event\"\r\n                                :class=\"event.type\" />\r\n                        </div>\r\n                    </div>\r\n                    <div v-else :class=\"cellClasses(date)\">\r\n                        {{ monthNames[date.getMonth()] }}\r\n                    </div>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\r\nimport ODatepickerTable from \"./DatepickerTable.vue\";\r\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\r\n\r\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\r\nimport type { ComponentClass, OrugaOptions } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile\r\n * @displayName Datepicker\r\n * @style _datepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODatepicker\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /**\r\n     * Define picker mode\r\n     * @values date, month\r\n     */\r\n    type: {\r\n        type: String,\r\n        default: \"date\",\r\n        validator: (value: string) => [\"month\", \"date\"].indexOf(value) >= 0,\r\n    },\r\n    /** Set custom day names, else use names based on locale */\r\n    dayNames: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"datepicker.dayNames\", undefined),\r\n    },\r\n    /** Set custom month names, else use names based on locale */\r\n    monthNames: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"datepicker.monthNames\", undefined),\r\n    },\r\n    /**\r\n     * Size of the control input\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.size\"),\r\n    },\r\n    /** Set default date to focus on */\r\n    focusedDate: { type: Date, default: undefined },\r\n    /** Events to display on picker */\r\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\r\n    /** Event indicators for style class definiton */\r\n    indicators: { type: String, default: \"dots\" },\r\n    /** Min date to select */\r\n    minDate: { type: Date, default: undefined },\r\n    /** Max date to select */\r\n    maxDate: { type: Date, default: undefined },\r\n    /** Enable date range selection */\r\n    range: { type: Boolean, default: false },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Display datepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: true },\r\n    /** Same as native, also push new item to v-model instead of replacing */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.openOnFocus\", true),\r\n    },\r\n    /** Close dropdown on click */\r\n    closeOnClick: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.closeOnClick\", true),\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    dateFormatter: {\r\n        type: Function as PropType<(date: Date | Date[]) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"datepicker.dateFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    dateParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"datepicker.dateParser\", defaultFunction)(date),\r\n    },\r\n    /** Date creator function, default is `new Date()` */\r\n    dateCreator: {\r\n        type: Function as PropType<() => Date>,\r\n        default: () => getOption(\"datepicker.dateCreator\", () => new Date())(),\r\n    },\r\n    /** Define a list of dates which can be selected */\r\n    selectableDates: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Define a list of dates which can not be selected */\r\n    unselectableDates: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Define a list of weeks which can not be selected */\r\n    unselectableDaysOfWeek: {\r\n        type: Array as PropType<number[]>,\r\n        default: () =>\r\n            getOption(\"datepicker.unselectableDaysOfWeek\", undefined),\r\n    },\r\n    /** Show nearby month days */\r\n    nearbyMonthDays: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.nearbyMonthDays\", true),\r\n    },\r\n    /** Define if nearby month days can be selected */\r\n    nearbySelectableMonthDays: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.nearbySelectableMonthDays\", false),\r\n    },\r\n    /** Show weeek numbers */\r\n    showWeekNumber: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.showWeekNumber\", false),\r\n    },\r\n    /** Define if weeek numbers are clickable */\r\n    weekNumberClickable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.weekNumberClickable\", false),\r\n    },\r\n    /** Set the first day of a week */\r\n    firstDayOfWeek: {\r\n        type: Number,\r\n        default: () => getOption(\"datepicker.firstDayOfWeek\", 0),\r\n    },\r\n    /** Rules for the first week : 1 for the 1st January, 4 for the 4th January */\r\n    rulesForFirstWeek: { type: Number, default: () => 4 },\r\n    /** Define the range of years to show */\r\n    yearsRange: {\r\n        type: Array as PropType<number[]>,\r\n        default: () => getOption(\"datepicker.yearsRange\", [-100, 10]),\r\n    },\r\n    /** Trap dropdown on focus */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.trapFocus\", true),\r\n    },\r\n    /** Position of the dropdown relative to the input */\r\n    position: { type: String, default: undefined },\r\n    /** Enable dropdown mobile modal */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.mobileModal\", true),\r\n    },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Icon name for previous icon */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon name for next icon */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"datepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /** Accessibility next button aria label */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Next Page\"),\r\n    },\r\n    /** Accessibility previous button aria label  */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Previous Page\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker box where you choose the date */\r\n    boxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker header inside the box */\r\n    headerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker buttons inside the box */\r\n    headerButtonsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker buttons inside the box when a size is choosen */\r\n    headerButtonsSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the prev button inside the Datepicker box */\r\n    prevButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the next button inside the Datepicker box */\r\n    nextButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the month and year selects container inside the Datepicker box */\r\n    listsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker table inside the box */\r\n    tableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Datepicker header with days of the week inside the table */\r\n    tableHeadClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the cell inside the table header */\r\n    tableHeadCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table body inside the box */\r\n    tableBodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table row */\r\n    tableRowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell */\r\n    tableCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when nearby month days are hidden */\r\n    tableCellInvisibleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of table cell when it's selected */\r\n    tableCellSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first selected table cell when in range */\r\n    tableCellFirstSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cells within the range when the range is selected */\r\n    tableCellWithinSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last selected table cell during range selection */\r\n    tableCellLastSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first hovered table cell during range selection */\r\n    tableCellFirstHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection */\r\n    tableCellWithinHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last table cell hovered during range selection */\r\n    tableCellLastHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell of the current day */\r\n    tableCellTodayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is selectable */\r\n    tableCellSelectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is unselectable */\r\n    tableCellUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when nearby days (prev/next month) are selectable */\r\n    tableCellNearbyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the cell of a row when at least one event is present */\r\n    tableCellEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the events container */\r\n    tableEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event */\r\n    tableEventClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event indicator when a `variant` is specified */\r\n    tableEventVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event indicator */\r\n    tableEventIndicatorsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker table inside the box when type is month */\r\n    monthClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table body inside the box when type is month */\r\n    monthBodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table container when type is month */\r\n    monthTableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when type is month */\r\n    monthCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of table cell when it's selected when type is month */\r\n    monthCellSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first selected table cell when in range when type is month */\r\n    monthCellFirstSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cells within the range when the range is selected when type is month */\r\n    monthCellWithinSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last selected table cell during range selection when type is month */\r\n    monthCellLastSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first hovered table cell during range selection when type is month */\r\n    monthCellWithinHoveredRangeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection when type is month */\r\n    monthCellFirstHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection and cell is in range when type is month */\r\n    monthCellWithinHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last table cell hovered during range selection when type is month */\r\n    monthCellLastHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell of the current day when type is month */\r\n    monthCellTodayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is selectable when type is month */\r\n    monthCellSelectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is unselectable when type is month */\r\n    monthCellUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**Class of the events container when type is month */\r\n    monthCellEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"input\"]>(\"datepicker.inputClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal dropdown component\r\n     * @ignore\r\n     */\r\n    dropdownClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"dropdown\"]>(\r\n                \"datepicker.dropdownClasses\",\r\n                {},\r\n            ),\r\n    },\r\n    /**\r\n     * Class configuration for the internal select component\r\n     * @ignore\r\n     */\r\n    selectClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"select\"]>(\"datepicker.selectClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date | Date[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on range start is selected event\r\n     * @param value {Date} range start date\r\n     */\r\n    (e: \"range-start\", value: Date): void;\r\n    /**\r\n     * on range end is selected event\r\n     * @param value {Date} range end date\r\n     */\r\n    (e: \"range-end\", value: Date): void;\r\n    /**\r\n     * on month change event\r\n     * @param value {number} month number\r\n     */\r\n    (e: \"change-month\", value: number): void;\r\n    /**\r\n     * on year change event\r\n     * @param value {number} year number\r\n     */\r\n    (e: \"change-year\", value: number): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst { defaultDateFormatter, defaultDateParser } = useDatepickerMixins(props);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\r\n\r\n/** modelvalue of selected date */\r\nconst vmodel = defineModel<Date | Date[]>();\r\n\r\n/** Dropdown active state */\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\n/** modelValue formated into string */\r\nconst formattedValue = computed(() =>\r\n    Array.isArray(vmodel.value)\r\n        ? (props.dateFormatter as any)([...vmodel.value], defaultDateFormatter)\r\n        : (props.dateFormatter as any)(vmodel.value, defaultDateFormatter),\r\n);\r\n\r\nconst isTypeMonth = computed(() => props.type === \"month\");\r\n\r\n/**\r\n * When v-model is changed:\r\n *   1. Update internal value.\r\n *   2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        // updateInternalState\r\n        if (vmodel.value !== value) {\r\n            const isArray = Array.isArray(value);\r\n            const currentDate = isArray\r\n                ? !value.length\r\n                    ? props.dateCreator()\r\n                    : value[value.length - 1]\r\n                : !value\r\n                  ? props.dateCreator()\r\n                  : value;\r\n            if (\r\n                !isArray ||\r\n                (isArray &&\r\n                    Array.isArray(vmodel.value) &&\r\n                    value.length > vmodel.value.length)\r\n            ) {\r\n                focusedDateData.value = {\r\n                    day: currentDate.getDate(),\r\n                    month: currentDate.getMonth(),\r\n                    year: currentDate.getFullYear(),\r\n                };\r\n            }\r\n        }\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.focusedDate,\r\n    (value) => {\r\n        if (value) {\r\n            focusedDateData.value = {\r\n                day: value.getDate(),\r\n                month: value.getMonth(),\r\n                year: value.getFullYear(),\r\n            };\r\n        }\r\n    },\r\n);\r\n\r\nconst _initialDate =\r\n    (Array.isArray(props.modelValue)\r\n        ? props.modelValue[0]\r\n        : props.modelValue) ||\r\n    props.focusedDate ||\r\n    props.dateCreator();\r\n\r\nif (\r\n    !props.modelValue &&\r\n    props.maxDate &&\r\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\r\n) {\r\n    _initialDate.setFullYear(props.maxDate.getFullYear());\r\n}\r\n\r\nconst focusedDateData = ref<FocusedDate>({\r\n    day: _initialDate.getDate(),\r\n    month: _initialDate.getMonth(),\r\n    year: _initialDate.getFullYear(),\r\n});\r\n\r\n/*\r\n * Emit input event on month and/or year change\r\n */\r\nwatch(\r\n    () => focusedDateData.value.month,\r\n    (value) => emits(\"change-month\", value),\r\n);\r\nwatch(\r\n    () => focusedDateData.value.year,\r\n    (value) => emits(\"change-year\", value),\r\n);\r\n\r\nconst computedMonthNames = computed(() =>\r\n    Array.isArray(props.monthNames)\r\n        ? props.monthNames\r\n        : getMonthNames(props.locale),\r\n);\r\n\r\nconst listOfMonths = computed(() => {\r\n    let minMonth = 0;\r\n    let maxMonth = 12;\r\n    if (\r\n        props.minDate &&\r\n        focusedDateData.value.year === props.minDate.getFullYear()\r\n    ) {\r\n        minMonth = props.minDate.getMonth();\r\n    }\r\n    if (\r\n        props.maxDate &&\r\n        focusedDateData.value.year === props.maxDate.getFullYear()\r\n    ) {\r\n        maxMonth = props.maxDate.getMonth();\r\n    }\r\n    return computedMonthNames.value.map((name, index) => ({\r\n        name: name,\r\n        index: index,\r\n        disabled: index < minMonth || index > maxMonth,\r\n    }));\r\n});\r\n\r\nconst computedDayNames = computed(() => {\r\n    if (Array.isArray(props.dayNames)) return props.dayNames;\r\n    return getWeekdayNames(props.locale);\r\n});\r\n\r\n/*\r\n * Returns an array of years for the year dropdown. If earliest/latest\r\n * dates are set by props, range of years will fall within those dates.\r\n */\r\nconst listOfYears = computed(() => {\r\n    let latestYear = focusedDateData.value.year + props.yearsRange[1];\r\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\r\n        latestYear = Math.max(\r\n            props.maxDate.getFullYear(),\r\n            focusedDateData.value.year,\r\n        );\r\n    }\r\n\r\n    let earliestYear = focusedDateData.value.year + props.yearsRange[0];\r\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\r\n        earliestYear = Math.min(\r\n            props.minDate.getFullYear(),\r\n            focusedDateData.value.year,\r\n        );\r\n    }\r\n\r\n    return Array.from(\r\n        { length: latestYear - earliestYear + 1 || 1 },\r\n        (value, index) => earliestYear + index,\r\n    ).reverse();\r\n});\r\n\r\nconst showPrev = computed(() => {\r\n    if (!props.minDate) return true;\r\n    if (isTypeMonth.value)\r\n        return focusedDateData.value.year > props.minDate.getFullYear();\r\n\r\n    const dateToCheck = new Date(\r\n        focusedDateData.value.year,\r\n        focusedDateData.value.month,\r\n    );\r\n    const date = new Date(\r\n        props.minDate.getFullYear(),\r\n        props.minDate.getMonth(),\r\n    );\r\n    return dateToCheck > date;\r\n});\r\n\r\n/**\r\n * Either decrement month by 1 if not January or decrement year by 1\r\n * and set month to 11 (December) or decrement year when 'month'\r\n */\r\nfunction prev(): void {\r\n    if (props.disabled) return;\r\n\r\n    if (isTypeMonth.value) {\r\n        focusedDateData.value.year -= 1;\r\n    } else {\r\n        if (focusedDateData.value.month > 0) {\r\n            focusedDateData.value.month -= 1;\r\n        } else {\r\n            focusedDateData.value.month = 11;\r\n            focusedDateData.value.year -= 1;\r\n        }\r\n    }\r\n}\r\n\r\nconst showNext = computed(() => {\r\n    if (!props.maxDate) return true;\r\n    if (isTypeMonth.value)\r\n        return focusedDateData.value.year < props.maxDate.getFullYear();\r\n\r\n    const dateToCheck = new Date(\r\n        focusedDateData.value.year,\r\n        focusedDateData.value.month,\r\n    );\r\n    const date = new Date(\r\n        props.maxDate.getFullYear(),\r\n        props.maxDate.getMonth(),\r\n    );\r\n    return dateToCheck < date;\r\n});\r\n\r\n/**\r\n * Either increment month by 1 if not December or increment year by 1\r\n * and set month to 0 (January) or increment year when 'month'\r\n */\r\nfunction next(): void {\r\n    if (props.disabled) return;\r\n    if (isTypeMonth.value) {\r\n        focusedDateData.value.year += 1;\r\n    } else {\r\n        if (focusedDateData.value.month < 11) {\r\n            focusedDateData.value.month += 1;\r\n        } else {\r\n            focusedDateData.value.month = 0;\r\n            focusedDateData.value.year += 1;\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatNative(value: Date | Date[]): string {\r\n    if (Array.isArray(value)) value = value[0];\r\n\r\n    if (!value) return \"\";\r\n    const date = new Date(value);\r\n\r\n    if (isTypeMonth.value) {\r\n        // Format date into string 'YYYY-MM'\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        return year + \"-\" + ((month < 10 ? \"0\" : \"\") + month);\r\n    } else {\r\n        // Format date into string 'YYYY-MM-DD'\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return (\r\n            year +\r\n            \"-\" +\r\n            ((month < 10 ? \"0\" : \"\") + month) +\r\n            \"-\" +\r\n            ((day < 10 ? \"0\" : \"\") + day)\r\n        );\r\n    }\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/** Parse string into date */\r\nfunction onChange(value: string): void {\r\n    const date = (props.dateParser as any)(value, defaultDateParser);\r\n\r\n    if (\r\n        date &&\r\n        Array.isArray(date) &&\r\n        date.length === 2 &&\r\n        !isNaN(date[0]) &&\r\n        !isNaN(date[1])\r\n    ) {\r\n        vmodel.value = date;\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n/** Parse date from string */\r\nfunction onChangeNativePicker(value: string): void {\r\n    const s = value ? value.split(\"-\") : [];\r\n    if (s.length === 3) {\r\n        const year = parseInt(s[0], 10);\r\n        const month = parseInt(s[1]) - 1;\r\n        const day = parseInt(s[2]);\r\n        vmodel.value = new Date(year, month, day);\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-dpck\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-dpck--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"mobileClass\", \"o-dpck--mobile\", null, isMobile],\r\n    [\"expandedClass\", \"o-dpck--expanded\", null, computed(() => props.expanded)],\r\n);\r\n\r\nconst headerClasses = defineClasses([\"headerClass\", \"o-dpck__header\"]);\r\n\r\nconst headerButtonsClasses = defineClasses(\r\n    [\"headerButtonsClass\", \"o-dpck__header__buttons\"],\r\n    [\r\n        \"headerButtonsSizeClass\",\r\n        \"o-dpck__header__buttons--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n\r\nconst prevButtonClasses = defineClasses([\r\n    \"prevButtonClass\",\r\n    \"o-dpck__header__previous\",\r\n]);\r\n\r\nconst nextButtonClasses = defineClasses([\r\n    \"nextButtonClass\",\r\n    \"o-dpck__header__next\",\r\n]);\r\n\r\nconst listsClasses = defineClasses([\"listsClass\", \"o-dpck__header__list\"]);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-dpck__footer\"]);\r\n\r\nconst dropdownClass = defineClasses([\r\n    \"dropdownClasses.rootClass\",\r\n    \"o-tpck__dropdown\",\r\n]);\r\n\r\nconst boxClasses = defineClasses([\"boxClass\", \"o-dpck__box\"]);\r\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: () => pickerRef.value?.focus() });\r\n</script>\r\n\r\n<template>\r\n    <OPickerWrapper\r\n        ref=\"pickerRef\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"datepicker\"\r\n        :value=\"vmodel\"\r\n        :picker-props=\"props\"\r\n        :formatted-value=\"formattedValue\"\r\n        :native-type=\"!isTypeMonth ? 'date' : 'month'\"\r\n        :native-value=\"formatNative(vmodel)\"\r\n        :native-max=\"formatNative(maxDate)\"\r\n        :native-min=\"formatNative(minDate)\"\r\n        :stay-open=\"multiple\"\r\n        :dropdown-classes=\"dropdownClass\"\r\n        :root-classes=\"rootClasses\"\r\n        :box-class=\"boxClassBind\"\r\n        @change=\"onChange\"\r\n        @native-change=\"onChangeNativePicker\"\r\n        @focus=\"$emit('focus', $event)\"\r\n        @blur=\"$emit('blur', $event)\"\r\n        @invalid=\"$emit('invalid', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template v-if=\"$slots.trigger\" #trigger>\r\n            <!--\r\n                @slot Override the trigger\r\n            -->\r\n            <slot name=\"trigger\" />\r\n        </template>\r\n        <header :class=\"headerClasses\">\r\n            <!--\r\n                @slot Override the header\r\n            -->\r\n            <slot name=\"header\">\r\n                <div :class=\"headerButtonsClasses\">\r\n                    <OButton\r\n                        v-if=\"!disabled\"\r\n                        :class=\"prevButtonClasses\"\r\n                        :disabled=\"!showPrev\"\r\n                        :aria-label=\"ariaPreviousLabel\"\r\n                        :icon-pack=\"iconPack\"\r\n                        :icon-left=\"iconPrev\"\r\n                        outlined\r\n                        @click.prevent=\"prev\"\r\n                        @keydown.enter.prevent=\"prev\"\r\n                        @keydown.space.prevent=\"prev\" />\r\n\r\n                    <OButton\r\n                        v-if=\"!disabled\"\r\n                        :class=\"nextButtonClasses\"\r\n                        :disabled=\"!showNext\"\r\n                        :aria-label=\"ariaNextLabel\"\r\n                        :icon-pack=\"iconPack\"\r\n                        :icon-left=\"iconNext\"\r\n                        outlined\r\n                        @click.prevent=\"next\"\r\n                        @keydown.enter.prevent=\"next\"\r\n                        @keydown.space.prevent=\"next\" />\r\n\r\n                    <div :class=\"listsClasses\">\r\n                        <o-select\r\n                            v-if=\"!isTypeMonth\"\r\n                            v-model=\"focusedDateData.month\"\r\n                            :disabled=\"disabled\"\r\n                            :size=\"size\"\r\n                            v-bind=\"selectClasses\">\r\n                            <option\r\n                                v-for=\"month in listOfMonths\"\r\n                                :key=\"month.name\"\r\n                                :value=\"month.index\"\r\n                                :disabled=\"month.disabled\">\r\n                                {{ month.name }}\r\n                            </option>\r\n                        </o-select>\r\n                        <o-select\r\n                            v-model=\"focusedDateData.year\"\r\n                            :disabled=\"disabled\"\r\n                            :size=\"size\"\r\n                            v-bind=\"selectClasses\">\r\n                            <option\r\n                                v-for=\"year in listOfYears\"\r\n                                :key=\"year\"\r\n                                :value=\"year\">\r\n                                {{ year }}\r\n                            </option>\r\n                        </o-select>\r\n                    </div>\r\n                </div>\r\n            </slot>\r\n        </header>\r\n        <!--\r\n            @slot Override the body\r\n        -->\r\n        <slot name=\"body\">\r\n            <o-datepicker-month\r\n                v-if=\"isTypeMonth\"\r\n                v-model=\"vmodel\"\r\n                v-model:focused-date=\"focusedDateData\"\r\n                :month-names=\"computedMonthNames\"\r\n                :picker-props=\"props\"\r\n                @range-start=\"(date) => $emit('range-start', date)\"\r\n                @range-end=\"(date) => $emit('range-end', date)\" />\r\n            <o-datepicker-table\r\n                v-else\r\n                v-model=\"vmodel\"\r\n                v-model:focused-date=\"focusedDateData\"\r\n                :day-names=\"computedDayNames\"\r\n                :month-names=\"computedMonthNames\"\r\n                :picker-props=\"props\"\r\n                @range-start=\"(date) => $emit('range-start', date)\"\r\n                @range-end=\"(date) => $emit('range-end', date)\" />\r\n        </slot>\r\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\r\n            <!--\r\n                @slot Define an additional footer\r\n            -->\r\n            <slot name=\"footer\" />\r\n        </footer>\r\n    </OPickerWrapper>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Datepicker from \"./Datepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export datepicker specific types */\r\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\r\n\r\n/** export datepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Datepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export datepicker components */\r\nexport { Datepicker as ODatepicker };\r\n","import { computed } from \"vue\";\r\nimport { matchWithGroups } from \"../datepicker/utils\";\r\nimport type { TimepickerProps } from \"./types\";\r\n\r\nconst AM = \"AM\";\r\nconst PM = \"PM\";\r\nconst HOUR_FORMAT_24 = \"24\";\r\nconst HOUR_FORMAT_12 = \"12\";\r\n\r\nexport function useTimepickerMixins(props: TimepickerProps) {\r\n    const localeOptions = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: props.enableSeconds ? \"numeric\" : undefined,\r\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n    );\r\n\r\n    const dtf = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                hour: localeOptions.value.hour || \"numeric\",\r\n                minute: localeOptions.value.minute || \"numeric\",\r\n                second: props.enableSeconds\r\n                    ? localeOptions.value.second || \"numeric\"\r\n                    : undefined,\r\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\r\n            }),\r\n    );\r\n\r\n    const computedHourFormat = computed(\r\n        () =>\r\n            props.hourFormat ||\r\n            (localeOptions.value.hour12 ? HOUR_FORMAT_12 : HOUR_FORMAT_24),\r\n    );\r\n\r\n    const isHourFormat24 = computed(\r\n        () => computedHourFormat.value === HOUR_FORMAT_24,\r\n    );\r\n\r\n    const sampleTime = computed(() => {\r\n        const d = props.timeCreator();\r\n        d.setHours(10);\r\n        d.setSeconds(0);\r\n        d.setMinutes(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    });\r\n\r\n    const amString = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            d.setHours(10);\r\n            const dayPeriod = dtf.value\r\n                .formatToParts(d)\r\n                .find((part) => part.type === \"dayPeriod\");\r\n            if (dayPeriod) return dayPeriod.value;\r\n        }\r\n        return AM;\r\n    });\r\n\r\n    const pmString = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            d.setHours(20);\r\n            const dayPeriod = dtf.value\r\n                .formatToParts(d)\r\n                .find((part) => part.type === \"dayPeriod\");\r\n            if (dayPeriod) {\r\n                return dayPeriod.value;\r\n            }\r\n        }\r\n        return PM;\r\n    });\r\n\r\n    const meridiens = computed(() => [amString.value, pmString.value]);\r\n\r\n    const hourLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return \":\";\r\n    });\r\n\r\n    const minuteLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return \":\";\r\n    });\r\n\r\n    const secondLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    function defaultTimeFormatter(time: Date): string {\r\n        return dtf.value.format(time);\r\n    }\r\n\r\n    function defaultTimeParser(time: string): Date {\r\n        if (!time) return null;\r\n\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const formatRegex = dtf.value\r\n                .formatToParts(sampleTime.value)\r\n                .map((part) => {\r\n                    if (part.type === \"literal\") {\r\n                        return part.value.replace(/ /g, \"\\\\s?\");\r\n                    } else if (part.type === \"dayPeriod\") {\r\n                        return `((?!=<${part.type}>)(${amString.value}|${\r\n                            pmString.value\r\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\r\n                    }\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const timeGroups = matchWithGroups(formatRegex, time);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            timeGroups.hour = timeGroups.hour\r\n                ? parseInt(timeGroups.hour, 10)\r\n                : null;\r\n            timeGroups.minute = timeGroups.minute\r\n                ? parseInt(timeGroups.minute, 10)\r\n                : null;\r\n            timeGroups.second = timeGroups.second\r\n                ? parseInt(timeGroups.second, 10)\r\n                : null;\r\n            if (\r\n                timeGroups.hour &&\r\n                timeGroups.hour >= 0 &&\r\n                timeGroups.hour < 24 &&\r\n                timeGroups.minute &&\r\n                timeGroups.minute >= 0 &&\r\n                timeGroups.minute < 59\r\n            ) {\r\n                if (\r\n                    timeGroups.dayPeriod &&\r\n                    (timeGroups.dayPeriod.toLowerCase() ===\r\n                        pmString.value.toLowerCase() ||\r\n                        timeGroups.dayPeriod.toLowerCase() ===\r\n                            PM.toLowerCase()) &&\r\n                    timeGroups.hour < 12\r\n                ) {\r\n                    timeGroups.hour += 12;\r\n                }\r\n                const date = sampleTime.value;\r\n                date.setHours(timeGroups.hour);\r\n                date.setMinutes(timeGroups.minute);\r\n                date.setSeconds(timeGroups.second || 0);\r\n                return date;\r\n            }\r\n        }\r\n\r\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\r\n        let am = false;\r\n        if (props.hourFormat === HOUR_FORMAT_12) {\r\n            const dateString12 = time.split(\" \");\r\n            time = dateString12[0];\r\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\r\n        }\r\n        const timeSplit = time.split(\":\");\r\n        let hours = parseInt(timeSplit[0], 10);\r\n        const minutes = parseInt(timeSplit[1], 10);\r\n        const seconds = props.enableSeconds ? parseInt(timeSplit[2], 10) : 0;\r\n        if (\r\n            isNaN(hours) ||\r\n            hours < 0 ||\r\n            hours > 23 ||\r\n            (props.hourFormat === HOUR_FORMAT_12 &&\r\n                (hours < 1 || hours > 12)) ||\r\n            isNaN(minutes) ||\r\n            minutes < 0 ||\r\n            minutes > 59\r\n        ) {\r\n            return null;\r\n        }\r\n        const date = sampleTime.value;\r\n        date.setSeconds(seconds);\r\n        date.setMinutes(minutes);\r\n        if (props.hourFormat === HOUR_FORMAT_12) {\r\n            if (am && hours === 12) {\r\n                hours = 0;\r\n            } else if (!am && hours !== 12) {\r\n                hours += 12;\r\n            }\r\n        }\r\n        date.setHours(hours);\r\n        return new Date(date.getTime());\r\n    }\r\n\r\n    return {\r\n        defaultTimeFormatter,\r\n        defaultTimeParser,\r\n        pmString,\r\n        amString,\r\n        meridiens,\r\n        isHourFormat24,\r\n        hourLiteral,\r\n        minuteLiteral,\r\n        secondLiteral,\r\n    };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useMatchMedia,\r\n    usePropBinding,\r\n    getActiveClasses,\r\n} from \"@/composables\";\r\n\r\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile\r\n * @displayName Timepicker\r\n * @style _timepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTimepicker\",\r\n    configField: \"timepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Date as PropType<Date>, default: undefined },\r\n    /** The active state of the dropdown */\r\n    active: { type: Boolean, default: false },\r\n    /** Min time to select */\r\n    minTime: { type: Date as PropType<Date>, default: undefined },\r\n    /** Max time to select */\r\n    maxTime: { type: Date as PropType<Date>, default: undefined },\r\n    /** Display datepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /**\r\n     * Size of the button\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.size\"),\r\n    },\r\n    hourFormat: { type: String, default: undefined },\r\n    incrementHours: { type: Number, default: 1 },\r\n    incrementMinutes: { type: Number, default: 1 },\r\n    incrementSeconds: { type: Number, default: 1 },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.openOnFocus\", true),\r\n    },\r\n    /** Close dropdown on click */\r\n    closeOnClick: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.closeOnClick\", true),\r\n    },\r\n    enableSeconds: { type: Boolean, default: false },\r\n    defaultMinutes: { type: Number, default: undefined },\r\n    defaultSeconds: { type: Number, default: undefined },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    timeFormatter: {\r\n        type: Function as PropType<(date: Date) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"timepicker.timeFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    timeParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"timepicker.timeParser\", defaultFunction)(date),\r\n    },\r\n    /** time creator function, default is `new Date()` */\r\n    timeCreator: {\r\n        type: Function as PropType<() => Date>,\r\n        default: () => getOption(\"timepicker.timeCreator\", () => new Date())(),\r\n    },\r\n    /** Define a list of times which can not be selected */\r\n    unselectableTimes: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Reset the time inputs when meridian changes */\r\n    resetOnMeridianChange: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    /** Dropdown trapFocus */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.trapFocus\", true),\r\n    },\r\n    /** Dropdown position */\r\n    position: { type: String, default: undefined },\r\n    /** Enable dropdown mobile modal */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.mobileModal\", true),\r\n    },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"timepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker component size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker component box where you choose the date */\r\n    boxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker separator */\r\n    separatorClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.inputClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal dropdown component\r\n     * @ignore\r\n     */\r\n    dropdownClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.dropdownClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal select component\r\n     * @ignore\r\n     */\r\n    selectClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.selectClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst {\r\n    defaultTimeFormatter,\r\n    defaultTimeParser,\r\n    pmString,\r\n    amString,\r\n    meridiens,\r\n    isHourFormat24,\r\n    hourLiteral,\r\n    minuteLiteral,\r\n    secondLiteral,\r\n} = useTimepickerMixins(props);\r\n\r\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\r\n\r\nconst vmodel = useVModelBinding<Date>(props, emits);\r\n\r\n/** Dropdown active state */\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits);\r\n\r\nconst hoursSelected = ref();\r\nconst minutesSelected = ref();\r\nconst secondsSelected = ref();\r\nconst meridienSelected = ref();\r\n\r\n/**\r\n * When v-model is changed:\r\n *   1. Update internal value.\r\n *   2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (value) {\r\n            hoursSelected.value = value.getHours();\r\n            minutesSelected.value = value.getMinutes();\r\n            secondsSelected.value = value.getSeconds();\r\n            meridienSelected.value =\r\n                value.getHours() >= 12 ? pmString.value : amString.value;\r\n        } else {\r\n            hoursSelected.value = null;\r\n            minutesSelected.value = null;\r\n            secondsSelected.value = null;\r\n            meridienSelected.value = amString.value;\r\n        }\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n/** Format date into string */\r\nconst formattedValue = computed(() =>\r\n    (props.timeFormatter as any)(props.modelValue, defaultTimeFormatter),\r\n);\r\n\r\nconst nativeStep = computed(() => (props.enableSeconds ? \"1\" : null));\r\n\r\nwatch(\r\n    () => props.hourFormat,\r\n    () => {\r\n        if (hoursSelected.value !== null) {\r\n            meridienSelected.value =\r\n                hoursSelected.value >= 12 ? pmString.value : amString.value;\r\n        }\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.locale,\r\n    (value) => {\r\n        // see updateInternalState default\r\n        if (!value) meridienSelected.value = amString.value;\r\n    },\r\n);\r\n\r\nfunction formatNumber(value: number, prependZero: boolean): string {\r\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\r\n}\r\n\r\nfunction pad(value: number): string {\r\n    return (value < 10 ? \"0\" : \"\") + value;\r\n}\r\n\r\nconst hours = computed(() => {\r\n    if (!props.incrementHours || props.incrementHours < 1)\r\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\r\n    const hours = [];\r\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\r\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\r\n        let value = i;\r\n        let label = value;\r\n        if (!isHourFormat24.value) {\r\n            value = i + 1;\r\n            label = value;\r\n            if (meridienSelected.value === amString.value) {\r\n                if (value === 12) {\r\n                    value = 0;\r\n                }\r\n            } else if (meridienSelected.value === pmString.value) {\r\n                if (value !== 12) {\r\n                    value += 12;\r\n                }\r\n            }\r\n        }\r\n        hours.push({\r\n            label: formatNumber(label, false),\r\n            value: value,\r\n        });\r\n    }\r\n    return hours;\r\n});\r\n\r\nconst minutes = computed(() => {\r\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\r\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\r\n    const minutes = [];\r\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\r\n        minutes.push({\r\n            label: formatNumber(i, true),\r\n            value: i,\r\n        });\r\n    }\r\n    return minutes;\r\n});\r\n\r\nconst seconds = computed(() => {\r\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\r\n        throw new Error(\"Second increment cannot be null or less than 1.\");\r\n    const seconds = [];\r\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\r\n        seconds.push({\r\n            label: formatNumber(i, true),\r\n            value: i,\r\n        });\r\n    }\r\n    return seconds;\r\n});\r\n\r\nfunction isHourDisabled(hour: number): boolean {\r\n    let disabled = false;\r\n    if (props.minTime) {\r\n        const minHours = props.minTime.getHours();\r\n        const noMinutesAvailable = minutes.value.every((minute) => {\r\n            return isMinuteDisabledForHour(hour, minute.value);\r\n        });\r\n        disabled = hour < minHours || noMinutesAvailable;\r\n    }\r\n    if (props.maxTime) {\r\n        if (!disabled) {\r\n            const maxHours = props.maxTime.getHours();\r\n            disabled = hour > maxHours;\r\n        }\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hour);\r\n                date.setMinutes(minutesSelected.value);\r\n                date.setSeconds(secondsSelected.value);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    if (props.enableSeconds && secondsSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hour &&\r\n                            time.getMinutes() === minutesSelected.value &&\r\n                            time.getSeconds() === secondsSelected.value\r\n                        );\r\n                    } else if (minutesSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hour &&\r\n                            time.getMinutes() === minutesSelected.value\r\n                        );\r\n                    }\r\n                    return false;\r\n                });\r\n                if (unselectable.length > 0) {\r\n                    disabled = true;\r\n                } else {\r\n                    disabled = minutes.value.every((minute) => {\r\n                        return (\r\n                            (props.unselectableTimes as Date[]).filter(\r\n                                (time) => {\r\n                                    return (\r\n                                        time.getHours() === hour &&\r\n                                        time.getMinutes() === minute.value\r\n                                    );\r\n                                },\r\n                            ).length > 0\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return disabled;\r\n}\r\n\r\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\r\n    let disabled = false;\r\n    if (props.minTime) {\r\n        const minHours = props.minTime.getHours();\r\n        const minMinutes = props.minTime.getMinutes();\r\n        disabled = hour === minHours && minute < minMinutes;\r\n    }\r\n    if (props.maxTime) {\r\n        if (!disabled) {\r\n            const maxHours = props.maxTime.getHours();\r\n            const maxMinutes = props.maxTime.getMinutes();\r\n            disabled = hour === maxHours && minute > maxMinutes;\r\n        }\r\n    }\r\n    return disabled;\r\n}\r\n\r\nfunction isMinuteDisabled(minute: number): boolean {\r\n    if (hoursSelected.value === null) return false;\r\n\r\n    let disabled = false;\r\n    if (isHourDisabled(hoursSelected.value)) {\r\n        disabled = true;\r\n    } else {\r\n        disabled = isMinuteDisabledForHour(hoursSelected.value, minute);\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hoursSelected.value);\r\n                date.setMinutes(minute);\r\n                date.setSeconds(secondsSelected.value);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    if (props.enableSeconds && secondsSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hoursSelected.value &&\r\n                            time.getMinutes() === minute &&\r\n                            time.getSeconds() === secondsSelected.value\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            time.getHours() === hoursSelected.value &&\r\n                            time.getMinutes() === minute\r\n                        );\r\n                    }\r\n                });\r\n                disabled = unselectable.length > 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSecondDisabled(second: number): boolean {\r\n    if (minutesSelected.value == null) return false;\r\n    let disabled = false;\r\n\r\n    if (isMinuteDisabled(minutesSelected.value)) {\r\n        disabled = true;\r\n    } else {\r\n        if (props.minTime) {\r\n            const minHours = props.minTime.getHours();\r\n            const minMinutes = props.minTime.getMinutes();\r\n            const minSeconds = props.minTime.getSeconds();\r\n            disabled =\r\n                hoursSelected.value === minHours &&\r\n                minutesSelected.value === minMinutes &&\r\n                second < minSeconds;\r\n        }\r\n        if (props.maxTime) {\r\n            if (!disabled) {\r\n                const maxHours = props.maxTime.getHours();\r\n                const maxMinutes = props.maxTime.getMinutes();\r\n                const maxSeconds = props.maxTime.getSeconds();\r\n                disabled =\r\n                    hoursSelected.value === maxHours &&\r\n                    minutesSelected.value === maxMinutes &&\r\n                    second > maxSeconds;\r\n            }\r\n        }\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hoursSelected.value);\r\n                date.setMinutes(minutesSelected.value);\r\n                date.setSeconds(second);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    return (\r\n                        time.getHours() === hoursSelected.value &&\r\n                        time.getMinutes() === minutesSelected.value &&\r\n                        time.getSeconds() === second\r\n                    );\r\n                });\r\n                disabled = unselectable.length > 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isMeridienDisabled(meridienString: string): boolean {\r\n    const offset = meridienString == \"AM\" ? 0 : 12;\r\n    for (let i = 0; i < 12; i++) {\r\n        if (!isHourDisabled(i + offset)) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction updateDateSelected(\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n    meridiens,\r\n): void {\r\n    if (\r\n        hours != null &&\r\n        minutes != null &&\r\n        ((!isHourFormat24.value && meridiens !== null) || isHourFormat24.value)\r\n    ) {\r\n        let time: Date = null;\r\n        if (vmodel.value) {\r\n            time = new Date(vmodel.value);\r\n        } else {\r\n            time = props.timeCreator();\r\n            time.setMilliseconds(0);\r\n        }\r\n        time.setHours(hours);\r\n        time.setMinutes(minutes);\r\n        time.setSeconds(seconds);\r\n        if (!isNaN(time.getTime())) {\r\n            vmodel.value = new Date(time.getTime());\r\n        }\r\n    }\r\n}\r\n\r\n/** Format date into string 'HH-MM-SS'*/\r\nfunction formatNative(value: Date): string {\r\n    const date = new Date(value);\r\n    if (value && !isNaN(date.getTime())) {\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes();\r\n        const seconds = date.getSeconds();\r\n        return (\r\n            formatNumber(hours, true) +\r\n            \":\" +\r\n            formatNumber(minutes, true) +\r\n            \":\" +\r\n            formatNumber(seconds, true)\r\n        );\r\n    }\r\n    return \"\";\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\nfunction onMeridienChange(value: string): void {\r\n    if (hoursSelected.value !== null && props.resetOnMeridianChange) {\r\n        hoursSelected.value = null;\r\n        minutesSelected.value = null;\r\n        secondsSelected.value = null;\r\n        vmodel.value = null;\r\n    } else if (hoursSelected.value !== null) {\r\n        if (value === pmString.value) hoursSelected.value += 12;\r\n        else if (value === amString.value) hoursSelected.value -= 12;\r\n    }\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        minutesSelected.value,\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        value,\r\n    );\r\n}\r\n\r\nfunction onHoursChange(value: string): void {\r\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\r\n        minutesSelected.value = props.defaultMinutes;\r\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\r\n        secondsSelected.value = props.defaultSeconds;\r\n\r\n    updateDateSelected(\r\n        parseInt(value, 10),\r\n        minutesSelected.value,\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\nfunction onMinutesChange(value: string): void {\r\n    if (!secondsSelected.value && props.defaultSeconds)\r\n        secondsSelected.value = props.defaultSeconds;\r\n\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        parseInt(value, 10),\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\nfunction onSecondsChange(value: string): void {\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        minutesSelected.value,\r\n        parseInt(value, 10),\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\n/** Parse string into date */\r\nfunction onChange(value: string): void {\r\n    const date = (props.timeParser as any)(value, defaultTimeParser);\r\n    vmodel.value = date ? date : null;\r\n}\r\n\r\n/** Parse time from string */\r\nfunction onChangeNativePicker(date: string): void {\r\n    if (date) {\r\n        let time = null;\r\n        if (vmodel.value) {\r\n            time = new Date(vmodel.value);\r\n        } else {\r\n            time = props.timeCreator();\r\n            time.setMilliseconds(0);\r\n        }\r\n        const t = date.split(\":\");\r\n        time.setHours(parseInt(t[0], 10));\r\n        time.setMinutes(parseInt(t[1], 10));\r\n        time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\r\n        vmodel.value = new Date(time.getTime());\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst selectSelectClasses = defineClasses([\r\n    \"selectClasses.selectClass\",\r\n    \"o-tpck__select\",\r\n]);\r\n\r\nconst selectPlaceholderClasses = defineClasses([\r\n    \"selectClasses.placeholderClass\",\r\n    \"o-tpck__select-placeholder\",\r\n]);\r\n\r\nconst selectBind = computed(() => ({\r\n    \"select-class\": getActiveClasses(selectSelectClasses.value),\r\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses.value),\r\n    ...props.selectClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tpck\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-tpck--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"mobileClass\", \"o-tpck--mobile\", null, isMobile],\r\n);\r\n\r\nconst separatorClasses = defineClasses([\"separatorClass\", \"o-tpck__separtor\"]);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-tpck__footer\"]);\r\n\r\nconst dropdownClass = defineClasses([\r\n    \"dropdownClasses.rootClass\",\r\n    \"o-tpck__dropdown\",\r\n]);\r\n\r\nconst boxClasses = defineClasses([\"boxClass\", \"o-tpck__box\"]);\r\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: () => pickerRef.value?.focus() });\r\n</script>\r\n\r\n<template>\r\n    <OPickerWrapper\r\n        ref=\"pickerRef\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"timepicker\"\r\n        :value=\"vmodel\"\r\n        :picker-props=\"props\"\r\n        :formatted-value=\"formattedValue\"\r\n        native-type=\"time\"\r\n        :native-value=\"formatNative(vmodel)\"\r\n        :native-max=\"formatNative(maxTime)\"\r\n        :native-min=\"formatNative(minTime)\"\r\n        :native-step=\"nativeStep\"\r\n        :dropdown-classes=\"dropdownClass\"\r\n        :root-classes=\"rootClasses\"\r\n        :box-class=\"boxClassBind\"\r\n        @change=\"onChange\"\r\n        @native-change=\"onChangeNativePicker\"\r\n        @focus=\"$emit('focus', $event)\"\r\n        @blur=\"$emit('blur', $event)\"\r\n        @invalid=\"$emit('invalid', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template v-if=\"$slots.trigger\" #trigger>\r\n            <!--\r\n                @slot Override the trigger\r\n            -->\r\n            <slot name=\"trigger\" />\r\n        </template>\r\n        <o-select\r\n            v-bind=\"selectBind\"\r\n            v-model=\"hoursSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            placeholder=\"00\"\r\n            @change=\"onHoursChange($event.target.value)\">\r\n            <option\r\n                v-for=\"hour in hours\"\r\n                :key=\"hour.value\"\r\n                :value=\"hour.value\"\r\n                :disabled=\"isHourDisabled(hour.value)\">\r\n                {{ hour.label }}\r\n            </option>\r\n        </o-select>\r\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\r\n        <o-select\r\n            v-bind=\"selectBind\"\r\n            v-model=\"minutesSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            placeholder=\"00\"\r\n            @change=\"onMinutesChange($event.target.value)\">\r\n            <option\r\n                v-for=\"minute in minutes\"\r\n                :key=\"minute.value\"\r\n                :value=\"minute.value\"\r\n                :disabled=\"isMinuteDisabled(minute.value)\">\r\n                {{ minute.label }}\r\n            </option>\r\n        </o-select>\r\n        <template v-if=\"enableSeconds\">\r\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\r\n            <o-select\r\n                v-bind=\"selectBind\"\r\n                v-model=\"secondsSelected\"\r\n                override\r\n                :disabled=\"disabled\"\r\n                placeholder=\"00\"\r\n                @change=\"onSecondsChange($event.target.value)\">\r\n                <option\r\n                    v-for=\"second in seconds\"\r\n                    :key=\"second.value\"\r\n                    :value=\"second.value\"\r\n                    :disabled=\"isSecondDisabled(second.value)\">\r\n                    {{ second.label }}\r\n                </option>\r\n            </o-select>\r\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\r\n        </template>\r\n        <o-select\r\n            v-if=\"!isHourFormat24\"\r\n            v-bind=\"selectBind\"\r\n            v-model=\"meridienSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            @change=\"onMeridienChange($event.target.value)\">\r\n            <option\r\n                v-for=\"meridien in meridiens\"\r\n                :key=\"meridien\"\r\n                :value=\"meridien\"\r\n                :disabled=\"isMeridienDisabled(meridien)\">\r\n                {{ meridien }}\r\n            </option>\r\n        </o-select>\r\n\r\n        <footer v-if=\"$slots.default\" :class=\"footerClasses\">\r\n            <!--\r\n                @slot Define an additional content on footer\r\n            -->\r\n            <slot />\r\n        </footer>\r\n    </OPickerWrapper>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\r\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isMobileAgent } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport { matchWithGroups } from \"../datepicker/utils\";\r\n\r\nimport type { DatepickerProps } from \"../datepicker/types\";\r\nimport type { TimepickerProps } from \"../timepicker/types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\r\n * @displayName Datetimepicker\r\n * @style _datetimepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODatetimepicker\",\r\n    configField: \"datetimepicker\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst AM = \"AM\";\r\nconst PM = \"PM\";\r\nconst HOUR_FORMAT_24 = \"24\";\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Date, default: undefined },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Define props for the underlying datepicker component */\r\n    datepicker: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        default: undefined,\r\n    },\r\n    /** Define props for the underlying timepicker component */\r\n    timepicker: {\r\n        type: Object as PropType<TimepickerProps>,\r\n        default: undefined,\r\n    },\r\n    /** Min date to select */\r\n    minDatetime: { type: Date, default: undefined },\r\n    /** Max date to select */\r\n    maxDatetime: { type: Date, default: undefined },\r\n    /**\r\n     * Size of the input control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.size\"),\r\n    } /** Makes input full width when inside a grouped or addon field */,\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Display datetimepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    datetimeFormatter: {\r\n        type: Function as PropType<(date: Date) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    datetimeParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\r\n    },\r\n    /** Date creator function, default is `new Date()` */\r\n    datetimeCreator: {\r\n        type: Function as PropType<(date: Date) => Date>,\r\n        default: (date: Date) =>\r\n            getOption(\r\n                \"datetimepicker.datetimeCreator\",\r\n                (d: Date) => new Date(d),\r\n            )(date),\r\n    },\r\n    /** Dropdown position */\r\n    position: { type: String, default: undefined },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"datetimepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the Datepicker wrapper */\r\n    datepickerWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker wrapper */\r\n    timepickerWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date | Date[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on range start is selected event\r\n     * @param value {Date} range start date\r\n     */\r\n    (e: \"range-start\", value: Date): void;\r\n    /**\r\n     * on range end is selected event\r\n     * @param value {Date} range end date\r\n     */\r\n    (e: \"range-end\", value: Date): void;\r\n    /**\r\n     * on month change event\r\n     * @param value {number} month number\r\n     */\r\n    (e: \"change-month\", value: number): void;\r\n    /**\r\n     * on year change event\r\n     * @param value {number} year number\r\n     */\r\n    (e: \"change-year\", value: number): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\r\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\r\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\r\n\r\nconst elementRef = computed(() =>\r\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\r\n);\r\n\r\n// use form input functionality for native input\r\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\r\n    elementRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst isMobileNative = computed(\r\n    () => props.mobileNative && isMobileAgent.any(),\r\n);\r\n\r\nwatch([() => isMobileNative.value, () => props.inline], () => {\r\n    // $refs attached, it's time to refresh datepicker (input)\r\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\r\n});\r\n\r\n/** Dropdown active state */\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\nconst vmodel = defineModel<Date>();\r\n\r\nfunction updateVModel(value: Date | Date[]): void {\r\n    if (!value) {\r\n        vmodel.value = undefined;\r\n        return;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        updateVModel(value[0]);\r\n        return;\r\n    }\r\n    let date = new Date(value.getTime());\r\n    if (!props.modelValue) {\r\n        date = props.datetimeCreator(value);\r\n    } else {\r\n        // restore time part\r\n        if (\r\n            (value.getDate() !== props.modelValue.getDate() ||\r\n                value.getMonth() !== props.modelValue.getMonth() ||\r\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\r\n            value.getHours() === 0 &&\r\n            value.getMinutes() === 0 &&\r\n            value.getSeconds() === 0\r\n        ) {\r\n            date.setHours(\r\n                props.modelValue.getHours(),\r\n                props.modelValue.getMinutes(),\r\n                props.modelValue.getSeconds(),\r\n                0,\r\n            );\r\n        }\r\n    }\r\n    // check min and max range\r\n    if (props.minDatetime && date < props.minDatetime) {\r\n        date = props.minDatetime;\r\n    } else if (props.maxDatetime && date > props.maxDatetime) {\r\n        date = props.maxDatetime;\r\n    }\r\n    vmodel.value = new Date(date.getTime());\r\n}\r\n\r\nconst minDate = computed(() => {\r\n    if (!props.minDatetime)\r\n        return props.datepicker ? props.datepicker.minDate : null;\r\n    return new Date(\r\n        props.minDatetime.getFullYear(),\r\n        props.minDatetime.getMonth(),\r\n        props.minDatetime.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n    );\r\n});\r\n\r\nconst maxDate = computed(() => {\r\n    if (!props.maxDatetime)\r\n        return props.datepicker ? props.datepicker.maxDate : null;\r\n    return new Date(\r\n        props.maxDatetime.getFullYear(),\r\n        props.maxDatetime.getMonth(),\r\n        props.maxDatetime.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n    );\r\n});\r\n\r\n// Only enable min/max time if local (not necessarily UTC) date portion matches\r\nconst minTime = computed(() => {\r\n    if (\r\n        !props.minDatetime ||\r\n        vmodel.value === null ||\r\n        typeof vmodel.value === \"undefined\" ||\r\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\r\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\r\n        vmodel.value.getDate() != props.minDatetime.getDate()\r\n    ) {\r\n        return props.timepicker ? props.timepicker.minTime : null;\r\n    }\r\n    return props.minDatetime;\r\n});\r\n\r\nconst maxTime = computed(() => {\r\n    if (\r\n        !props.maxDatetime ||\r\n        vmodel.value === null ||\r\n        typeof vmodel.value === \"undefined\" ||\r\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\r\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\r\n        vmodel.value.getDate() != props.maxDatetime.getDate()\r\n    ) {\r\n        return props.timepicker ? props.timepicker.maxTime : null;\r\n    }\r\n    return props.maxDatetime;\r\n});\r\n\r\nconst datepickerSize = computed(() =>\r\n    props.datepicker?.size ? props.datepicker.size : props.size,\r\n);\r\n\r\nconst timepickerSize = computed(() =>\r\n    props.timepicker?.size ? props.timepicker.size : props.size,\r\n);\r\n\r\nconst timepickerDisabled = computed(() =>\r\n    props.timepicker?.disabled ? props.timepicker.disabled : props.disabled,\r\n);\r\n\r\nfunction formatNative(value: Date): string {\r\n    const date = new Date(value);\r\n    if (value && !isNaN(date.getTime())) {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes();\r\n        const seconds = date.getSeconds();\r\n        return (\r\n            year +\r\n            \"-\" +\r\n            ((month < 10 ? \"0\" : \"\") + month) +\r\n            \"-\" +\r\n            ((day < 10 ? \"0\" : \"\") + day) +\r\n            \"T\" +\r\n            ((hours < 10 ? \"0\" : \"\") + hours) +\r\n            \":\" +\r\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\r\n            \":\" +\r\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\r\n        );\r\n    }\r\n    return \"\";\r\n}\r\n\r\n// --- Time Format Feature ---\r\n\r\nconst enableSeconds = computed(() =>\r\n    timepickerRef.value?.enableSeconds\r\n        ? timepickerRef.value.enableSeconds\r\n        : false,\r\n);\r\n\r\nconst localeOptions = computed(\r\n    () =>\r\n        new Intl.DateTimeFormat(props.locale, {\r\n            year: \"numeric\",\r\n            month: \"numeric\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: enableSeconds.value ? \"numeric\" : undefined,\r\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n);\r\n\r\nconst isHourFormat24 = computed(\r\n    () =>\r\n        props.timepicker?.hourFormat === HOUR_FORMAT_24 ||\r\n        !localeOptions.value.hour12,\r\n);\r\n\r\nconst dtf = computed(\r\n    () =>\r\n        new Intl.DateTimeFormat(props.locale, {\r\n            year: localeOptions.value.year || \"numeric\",\r\n            month: localeOptions.value.month || \"numeric\",\r\n            day: localeOptions.value.day || \"numeric\",\r\n            hour: localeOptions.value.hour || \"numeric\",\r\n            minute: localeOptions.value.minute || \"numeric\",\r\n            second: enableSeconds.value\r\n                ? localeOptions.value.second || \"numeric\"\r\n                : undefined,\r\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\r\n        }),\r\n);\r\n\r\nconst amString = computed(() => {\r\n    if (\r\n        dtf.value.formatToParts &&\r\n        typeof dtf.value.formatToParts === \"function\"\r\n    ) {\r\n        const d = props.datetimeCreator(new Date());\r\n        d.setHours(10);\r\n        const dayPeriod = dtf.value\r\n            .formatToParts(d)\r\n            .find((part) => part.type === \"dayPeriod\");\r\n        if (dayPeriod) return dayPeriod.value;\r\n    }\r\n    return AM;\r\n});\r\n\r\nconst pmString = computed(() => {\r\n    if (\r\n        dtf.value.formatToParts &&\r\n        typeof dtf.value.formatToParts === \"function\"\r\n    ) {\r\n        const d = props.datetimeCreator(new Date());\r\n        d.setHours(20);\r\n        const dayPeriod = dtf.value\r\n            .formatToParts(d)\r\n            .find((part) => part.type === \"dayPeriod\");\r\n        if (dayPeriod) return dayPeriod.value;\r\n    }\r\n    return PM;\r\n});\r\n\r\nfunction defaultDatetimeParser(value: string): Date {\r\n    function defaultParser(date: string): Date {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\r\n            if (timepickerRef.value) {\r\n                dayPeriods.push(amString.value);\r\n                dayPeriods.push(pmString.value);\r\n            }\r\n            const parts = this.dtf.formatToParts(new Date());\r\n            const formatRegex = parts\r\n                .map((part, idx) => {\r\n                    if (part.type === \"literal\") {\r\n                        if (\r\n                            idx + 1 < parts.length &&\r\n                            parts[idx + 1].type === \"hour\"\r\n                        ) {\r\n                            return `[^\\\\d]+`;\r\n                        }\r\n                        return part.value.replace(/ /g, \"\\\\s?\");\r\n                    } else if (part.type === \"dayPeriod\") {\r\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\r\n                            \"|\",\r\n                        )})?)`;\r\n                    }\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const datetimeGroups = matchWithGroups(formatRegex, date);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            if (\r\n                datetimeGroups.year &&\r\n                datetimeGroups.year.length === 4 &&\r\n                datetimeGroups.month &&\r\n                datetimeGroups.month <= 12 &&\r\n                datetimeGroups.day &&\r\n                datetimeGroups.day <= 31 &&\r\n                datetimeGroups.hour &&\r\n                datetimeGroups.hour >= 0 &&\r\n                datetimeGroups.hour < 24 &&\r\n                datetimeGroups.minute &&\r\n                datetimeGroups.minute >= 0 &&\r\n                datetimeGroups.minute <= 59\r\n            ) {\r\n                const d = new Date(\r\n                    datetimeGroups.year,\r\n                    datetimeGroups.month - 1,\r\n                    datetimeGroups.day,\r\n                    datetimeGroups.hour,\r\n                    datetimeGroups.minute,\r\n                    datetimeGroups.second || 0,\r\n                );\r\n                return d;\r\n            }\r\n        }\r\n\r\n        return new Date(Date.parse(date));\r\n    }\r\n    const date = (props.datetimeParser as any)(value, defaultParser);\r\n    return date;\r\n}\r\n\r\nfunction defaultDatetimeFormatter(date: Date): string {\r\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\r\n        date ? dtf.value.format(date) : \"\",\r\n    );\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/** Parse date from string */\r\nfunction onChangeNativePicker(event: Event): void {\r\n    const date = (event.target as HTMLInputElement).value;\r\n    const s = date ? date.split(/\\D/) : [];\r\n    if (s.length >= 5) {\r\n        const year = parseInt(s[0], 10);\r\n        const month = parseInt(s[1], 10) - 1;\r\n        const day = parseInt(s[2], 10);\r\n        const hours = parseInt(s[3], 10);\r\n        const minutes = parseInt(s[4], 10);\r\n        // Seconds are omitted intentionally; they are unsupported by input\r\n        // type=datetime-local and cause the control to fail native validation\r\n        updateVModel(new Date(year, month, day, hours, minutes));\r\n    } else {\r\n        updateVModel(null);\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst datepickerWrapperClasses = defineClasses([\r\n    \"datepickerWrapperClass\",\r\n    \"o-dtpck__date\",\r\n]);\r\n\r\nconst timepickerWrapperClasses = defineClasses([\r\n    \"timepickerWrapperClass\",\r\n    \"o-dtpck__time\",\r\n]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <o-datepicker\r\n        v-if=\"!isMobileNative || inline\"\r\n        ref=\"datepickerRef\"\r\n        v-bind=\"{ ...$attrs, ...datepicker }\"\r\n        v-model:active=\"isActive\"\r\n        :model-value=\"vmodel\"\r\n        data-oruga=\"datetimepicker\"\r\n        :class=\"datepickerWrapperClasses\"\r\n        :rounded=\"rounded\"\r\n        :open-on-focus=\"openOnFocus\"\r\n        :position=\"position\"\r\n        :inline=\"inline\"\r\n        :readonly=\"readonly\"\r\n        :expanded=\"expanded\"\r\n        :close-on-click=\"false\"\r\n        :date-formatter=\"defaultDatetimeFormatter\"\r\n        :date-parser=\"defaultDatetimeParser\"\r\n        :min-date=\"minDate\"\r\n        :max-date=\"maxDate\"\r\n        :icon=\"icon\"\r\n        :icon-right=\"iconRight\"\r\n        :icon-right-clickable=\"iconRightClickable\"\r\n        :icon-pack=\"iconPack\"\r\n        :size=\"datepickerSize\"\r\n        :placeholder=\"placeholder\"\r\n        :range=\"false\"\r\n        :disabled=\"disabled\"\r\n        :mobile-native=\"isMobileNative\"\r\n        :locale=\"locale\"\r\n        :teleport=\"teleport\"\r\n        @update:model-value=\"updateVModel\"\r\n        @focus=\"onFocus\"\r\n        @blur=\"onBlur\"\r\n        @change-month=\"$emit('change-month', $event)\"\r\n        @change-year=\"$emit('change-year', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template #footer>\r\n            <div :class=\"timepickerWrapperClasses\">\r\n                <o-timepicker\r\n                    ref=\"timepickerRef\"\r\n                    v-bind=\"timepicker\"\r\n                    v-model=\"vmodel\"\r\n                    inline\r\n                    :readonly=\"readonly\"\r\n                    :min-time=\"minTime\"\r\n                    :max-time=\"maxTime\"\r\n                    :size=\"timepickerSize\"\r\n                    :disabled=\"timepickerDisabled\"\r\n                    :mobile-native=\"isMobileNative\"\r\n                    :locale=\"locale\" />\r\n            </div>\r\n            <template v-if=\"$slots.footer !== undefined\">\r\n                <!--\r\n                    @slot Define an additional footer\r\n                -->\r\n                <slot name=\"footer\" />\r\n            </template>\r\n        </template>\r\n    </o-datepicker>\r\n\r\n    <!-- Native Picker -->\r\n    <o-input\r\n        v-else\r\n        v-bind=\"$attrs\"\r\n        ref=\"nativeInputRef\"\r\n        type=\"datetime-local\"\r\n        autocomplete=\"off\"\r\n        :value=\"formatNative(vmodel)\"\r\n        :max=\"formatNative(maxDate)\"\r\n        :min=\"formatNative(minDate)\"\r\n        :placeholder=\"placeholder\"\r\n        :size=\"datepickerSize\"\r\n        :icon-pack=\"iconPack\"\r\n        :icon=\"icon\"\r\n        :rounded=\"rounded\"\r\n        :disabled=\"disabled\"\r\n        :readonly=\"false\"\r\n        :use-html5-validation=\"false\"\r\n        @change=\"onChangeNativePicker\"\r\n        @focus=\"onFocus\"\r\n        @blur=\"onBlur\"\r\n        @invalid=\"onInvalid\" />\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Datetimepicker from \"./Datetimepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export datetimepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Datetimepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export datetimepicker components */\r\nexport { Datetimepicker as ODatetimepicker };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Dropdown from \"./Dropdown.vue\";\r\nimport DropdownItem from \"./DropdownItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export dropdown plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Dropdown);\r\n        registerComponent(app, DropdownItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export dropdown components */\r\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Field from \"./Field.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export field plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Field);\r\n    },\r\n} as Plugin;\r\n\r\n/** export field components */\r\nexport { Field as OField };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Icon from \"./Icon.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export icon plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Icon);\r\n    },\r\n} as Plugin;\r\n\r\n/** export icon components */\r\nexport { Icon as OIcon };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Input from \"./Input.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export input plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Input);\r\n    },\r\n} as Plugin;\r\n\r\n/** export input components */\r\nexport { Input as OInput };\r\n","<script setup lang=\"ts\">\r\nimport { ref, onMounted, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useProgrammaticComponent,\r\n    usePropBinding,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * A simple loading overlay\r\n * @displayName Loading\r\n * @style _loading.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OLoading\",\r\n    configField: \"loading\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether loading is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Loader will overlay the full page. */\r\n    fullPage: { type: Boolean, default: true },\r\n    /** Notification label, unnecessary when default slot is used. */\r\n    label: { type: String, default: undefined },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"loading.animation\", \"fade\"),\r\n    },\r\n    /** Is Loading cancable by pressing escape or clicking outside. */\r\n    cancelable: { type: Boolean, default: false },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Icon name to show, unnecessary when default slot is used. */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"loading.icon\", \"loading\"),\r\n    },\r\n    /** Enable spin effect on icon */\r\n    iconSpin: {\r\n        type: Boolean,\r\n        default: () => getOption(\"loading.iconSpin\", true),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"loading.iconSize\", \"medium\"),\r\n    },\r\n    /**\r\n     * DOM element where the loading component will be created on (for programmatic usage).\r\n     * Note that this also changes fullPage to false.\r\n     */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"loading.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element when fullpage */\r\n    fullPageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the loading overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the loading icon */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the loading label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * fullPage prop two-way binding\r\n     * @param value {boolean} - updated fullPage prop\r\n     */\r\n    (e: \"update:fullPage\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\nconst displayInFullPage = usePropBinding(\"fullPage\", props, emits);\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        cancelOptions: [\"escape\", \"outside\"],\r\n    },\r\n);\r\n\r\nonMounted(() => {\r\n    if (props.programmatic && props.container) displayInFullPage.value = false;\r\n});\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-load\"],\r\n    [\"fullPageClass\", \"o-load--fullpage\", null, displayInFullPage],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-load__overlay\"]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-load__icon\"]);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-load__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <transition :name=\"animation\">\r\n        <div\r\n            v-if=\"isActive\"\r\n            ref=\"rootRef\"\r\n            data-oruga=\"loading\"\r\n            role=\"dialog\"\r\n            :class=\"rootClasses\">\r\n            <div\r\n                :class=\"overlayClasses\"\r\n                :tabindex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                @click=\"cancel('outside')\" />\r\n            <!-- \r\n                @slot Override icon and label\r\n                @binding {close} close - function to close the component\r\n            -->\r\n            <slot :close=\"close\">\r\n                <o-icon\r\n                    :icon=\"icon\"\r\n                    :spin=\"iconSpin\"\r\n                    :size=\"iconSize\"\r\n                    :class=\"iconClasses\"\r\n                    both />\r\n                <span v-if=\"label\" :class=\"labelClasses\">\r\n                    {{ label }}\r\n                </span>\r\n            </slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n","export default class InstanceRegistry<T> {\r\n    entries: Array<T>;\r\n\r\n    constructor() {\r\n        this.entries = [];\r\n    }\r\n\r\n    add(entry: T): void {\r\n        this.entries.push(entry);\r\n    }\r\n\r\n    remove(entry: T): void {\r\n        const index = this.entries.indexOf(entry);\r\n        this.entries.splice(index, 1);\r\n    }\r\n\r\n    walk(callback: (value: T) => boolean | void): void {\r\n        // Walk a copy of the array so that the callback is allowed to remove the instance\r\n        this.entries = [...this.entries].filter((e) => {\r\n            const ret = callback(e);\r\n            return !(ret === true);\r\n        });\r\n    }\r\n}\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport type { LoadingProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        loading: typeof LoadingProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Loading>();\r\n\r\ntype LoadingProgrammaticProps = Readonly<\r\n    string | (LoadingProps & OrugaOptions[\"loading\"])\r\n>;\r\n\r\nconst LoadingProgrammatic = {\r\n    open(params: LoadingProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      label: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.label)) {\r\n            slot = componentParams.label;\r\n            delete componentParams.label;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Loading, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default LoadingProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export loading specific types */\r\nexport type { LoadingProps } from \"./types\";\r\n\r\n/** export loading plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Loading);\r\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export loading components */\r\nexport { LoadingProgrammatic, Loading as OLoading };\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, toRaw, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useProviderParent,\r\n    type ProviderItem,\r\n} from \"@/composables\";\r\n\r\nimport type { MenuComponent, MenuItemComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A simple menu\r\n * @displayName Menu\r\n * @requires ./MenuItem.vue\r\n * @style _menu.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OMenu\",\r\n    configField: \"menu\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Menu label */\r\n    label: { type: String, default: undefined },\r\n    /** If sub menu items are collapsible */\r\n    accordion: { type: Boolean, default: true },\r\n    /** If the menu items are clickable */\r\n    activable: { type: Boolean, default: true },\r\n    /**\r\n     * Role attribute to be passed to the list container for better accessibility.\r\n     * Use menu only in situations where your dropdown is related to a navigation menu.\r\n     * @values list, menu, dialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"menu.ariaRole\", \"menu\"),\r\n        validator: (value: string) =>\r\n            [\"menu\", \"list\", \"dialog\"].indexOf(value) > -1,\r\n    },\r\n    /** Icon to be shown */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconSize\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu list */\r\n    listClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu list label */\r\n    listLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<MenuComponent>(() => ({\r\n    activable: props.activable,\r\n    accordion: props.accordion,\r\n    resetMenu,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { childItems } = useProviderParent<MenuItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nfunction resetMenu(excludedItems: ProviderItem[] = []): void {\r\n    childItems.value.forEach((item) => {\r\n        if (!excludedItems.includes(toRaw(item))) (item.data as any as MenuItemComponent).reset();\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\r\n\r\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\r\n\r\nconst labelClasses = defineClasses([\"listLabelClass\", \"o-menu__label\"]);\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" data-oruga=\"menu\" :class=\"rootClasses\">\r\n        <div v-if=\"label || $slots.label\" :class=\"labelClasses\">\r\n            <!-- \r\n                @slot Override icon and label\r\n            -->\r\n            <slot name=\"label\">\r\n                <o-icon\r\n                    v-if=\"icon\"\r\n                    :icon=\"icon\"\r\n                    :pack=\"iconPack\"\r\n                    :size=\"iconSize\" />\r\n                <span>{{ label }}</span>\r\n            </slot>\r\n        </div>\r\n        <ul :class=\"listClasses\" :role=\"ariaRole\">\r\n            <!--\r\n                @slot Place menu items here \r\n            -->\r\n            <slot />\r\n        </ul>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, toRaw, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useProviderChild,\r\n    useProviderParent,\r\n    type ProviderItem,\r\n} from \"@/composables\";\r\n\r\nimport type {\r\n    MenuComponent,\r\n    MenuItemComponent,\r\n    MenuItemProvider,\r\n} from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * A menu list item\r\n * @displayName Menu Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OMenuItem\",\r\n    configField: \"menu\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** The active state of the menu item, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Menu item label */\r\n    label: { type: String, default: undefined },\r\n    /** Menu item will be expanded */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Menu item will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Icon to be shown */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconSize\"),\r\n    },\r\n    /** Transition name to apply on menu list */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"menu.animation\", \"slide\"),\r\n    },\r\n    /** Menu item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"menu.menuTag\", \"a\"),\r\n    },\r\n    /**\r\n     * Role attribute to be passed to the list item for better accessibility.\r\n     * @values listitem, menuitem\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"menu.itemAriaRole\", \"menuitem\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the menu item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the active menu item */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the disabled menu item */\r\n    itemDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon of menu item */\r\n    itemIconTextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu item when is a submenu */\r\n    itemSubmenuClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element of menu item */\r\n    itemWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: boolean): void;\r\n    /**\r\n     * expanded prop two-way binding\r\n     * @param value {boolean} updated expanded prop\r\n     */\r\n    (e: \"update:expanded\", value: boolean): void;\r\n}>();\r\n\r\nconst providedData = computed<MenuItemComponent>(() => ({\r\n    reset,\r\n}));\r\n\r\n// Inject functionalities and data from the parent menu component\r\nconst { parent, item } = useProviderChild<MenuComponent>({\r\n    data: providedData,\r\n});\r\n\r\n// Inject functionalities and data from the parent menu-item component\r\nconst providedItem = useProviderChild<MenuItemProvider>({\r\n    key: \"menu-item\",\r\n    needParent: false,\r\n});\r\n\r\nconst itemParent = computed(() => providedItem.parent?.value);\r\n\r\nconst isActive = usePropBinding(\"active\", props, emits, { passive: true });\r\n\r\nconst isExpanded = usePropBinding(\"expanded\", props, emits, { passive: true });\r\n\r\n/** template identifier */\r\nconst identifier = computed(() =>\r\n    itemParent.value\r\n        ? `menu-item-${providedItem.item.value.identifier}`\r\n        : `menu-${item.value.identifier}`,\r\n);\r\n\r\nfunction onClick(): void {\r\n    if (props.disabled) return;\r\n    triggerReset();\r\n    isExpanded.value = props.expanded || !isExpanded.value;\r\n    if (parent.value.activable) isActive.value = true;\r\n}\r\n\r\nfunction triggerReset(child?: ProviderItem): void {\r\n    // The point of this method is to collect references to the clicked item and any parent,\r\n    // this way we can skip resetting those elements.\r\n    if (itemParent.value?.triggerReset) {\r\n        itemParent.value.triggerReset(toRaw(item.value));\r\n    }\r\n    // else if not a sub item reset parent menu\r\n    else if (parent.value.resetMenu) {\r\n        parent.value.resetMenu([toRaw(item.value), child]);\r\n    }\r\n}\r\n\r\nfunction reset(): void {\r\n    if (parent.value.accordion) isExpanded.value = false;\r\n    if (parent.value.activable) isActive.value = false;\r\n}\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<MenuItemProvider>(() => ({\r\n    triggerReset,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(rootRef, { key: \"menu-item\", data: provideData });\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-menu__item\"],\r\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\r\n    [\r\n        \"itemDisabledClass\",\r\n        \"o-menu__item--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"itemIconTextClass\",\r\n        \"o-menu__item--icon-text\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n);\r\n\r\nconst submenuClasses = defineClasses([\r\n    \"itemSubmenuClass\",\r\n    \"o-menu__item__submenu\",\r\n]);\r\n\r\nconst wrapperClasses = defineClasses([\r\n    \"itemWrapperClass\",\r\n    \"o-menu__item__wrapper\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <li\r\n        ref=\"rootRef\"\r\n        :role=\"ariaRole\"\r\n        :class=\"wrapperClasses\"\r\n        :data-id=\"identifier\"\r\n        data-oruga=\"menu-item\"\r\n        aria-roledescription=\"item\">\r\n        <component\r\n            :is=\"tag\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"itemClasses\"\r\n            @click=\"onClick()\">\r\n            <o-icon\r\n                v-if=\"icon\"\r\n                :icon=\"icon\"\r\n                :pack=\"iconPack\"\r\n                :size=\"iconSize\" />\r\n            <!-- \r\n                @slot Override label\r\n                @binding {boolean} expanded - item expanded state\r\n                @binding {boolean} active - item active state\r\n            -->\r\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\r\n                <span>{{ label }}</span>\r\n            </slot>\r\n        </component>\r\n\r\n        <!-- sub menu items -->\r\n        <template v-if=\"$slots.default\">\r\n            <transition :name=\"animation\">\r\n                <ul v-show=\"isExpanded\" :class=\"submenuClasses\">\r\n                    <!--\r\n                        @slot Place menu items here \r\n                    -->\r\n                    <slot />\r\n                </ul>\r\n            </transition>\r\n        </template>\r\n    </li>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Menu from \"./Menu.vue\";\r\nimport MenuItem from \"./MenuItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export menu plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Menu);\r\n        registerComponent(app, MenuItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export menu components */\r\nexport { Menu as OMenu, MenuItem as OMenuItem };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    watch,\r\n    nextTick,\r\n    onBeforeUnmount,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { vTrapFocus } from \"@/directives/trapFocus\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { removeElement, toCssDimension } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useMatchMedia,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * Classic modal overlay to include any content you may need\r\n * @displayName Modal\r\n * @style _modal.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OModal\",\r\n    configField: \"modal\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: false },\r\n    /** Display modal as full screen */\r\n    fullScreen: { type: Boolean, default: false },\r\n    /** Text content, unnecessary when default slot is used */\r\n    content: { type: String, default: undefined },\r\n    /** Width of the Modal */\r\n    width: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"modal.width\", 960),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"modal.animation\", \"zoom-out\"),\r\n    },\r\n    /**\r\n     * Is Modal cancleable by clicking 'X', pressing escape or clicking outside\r\n     * @values escape, x, outside, button, true, false\r\n     */\r\n    cancelable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"modal.cancelable\", [\"escape\", \"x\", \"outside\", \"button\"]),\r\n    },\r\n    /** Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside) */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled) */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\r\n     * but will set body to position fixed, might break some layouts.\r\n     * @values keep, clip\r\n     */\r\n    scroll: {\r\n        type: String,\r\n        default: () => getOption(\"modal.scroll\", \"keep\"),\r\n        validator: (value: string) => [\"keep\", \"clip\"].indexOf(value) >= 0,\r\n    },\r\n    /** Trap focus inside the modal */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.trapFocus\", true),\r\n    },\r\n    /**\r\n     * Role attribute to be passed to the div wrapper for better accessibility.\r\n     * @values dialog, alertdialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"modal.ariaRole\"),\r\n        validator: (value: string) =>\r\n            [\"dialog\", \"alertdialog\"].indexOf(value) >= 0,\r\n    },\r\n    /** Accessibility aria-label to be passed to the div wrapper element */\r\n    ariaLabel: { type: String, default: () => getOption(\"modal.ariaLabel\") },\r\n    /** Destroy modal on hide */\r\n    destroyOnHide: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.destroyOnHide\", false),\r\n    },\r\n    /** Automatically focus modal when active */\r\n    autoFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.autoFocus\", true),\r\n    },\r\n    /** Close icon name */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"modal.closeIcon\", \"close\"),\r\n    },\r\n    /**\r\n     * Size of close icon\r\n     * @values small, medium, large\r\n     */\r\n    closeIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"modal.closeIconSize\", \"medium\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"modal.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"modal.teleport\", false),\r\n    },\r\n    /**\r\n     * Component to be injected, used to open a component modal programmatically.\r\n     * Close modal within the component by emitting a 'close' event — emits('close')\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component */\r\n    events: { type: Object, default: () => ({}) },\r\n    /** DOM element where the modal component will be created on (for programmatic usage) */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"modal.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of modal component when its active */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when fullscreen */\r\n    fullScreenClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of modal component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when scroll is clip */\r\n    scrollClipClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when scroll is not clip */\r\n    noScrollClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        destroyOnHide: props.destroyOnHide,\r\n        cancelOptions: getOption(\"modal.cancelable\", [\r\n            \"escape\",\r\n            \"x\",\r\n            \"outside\",\r\n            \"button\",\r\n        ]),\r\n    },\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst _teleport = computed(() =>\r\n    typeof props.teleport === \"boolean\"\r\n        ? { to: \"body\", disabled: !props.teleport }\r\n        : { to: props.teleport, disabled: false },\r\n);\r\n\r\nconst savedScrollTop = ref(null);\r\nconst isAnimating = ref(!props.active);\r\n\r\nwatch(isActive, (value) => {\r\n    handleScroll();\r\n    if (value && rootRef.value && props.autoFocus)\r\n        nextTick(() => rootRef.value.focus());\r\n    // mark the modal as destoyed after it get closed\r\n    if (!value && props.destroyOnHide)\r\n        // wait for transition finish\r\n        setTimeout(() => removeElement(rootRef.value));\r\n});\r\n\r\nconst showX = computed(() =>\r\n    Array.isArray(props.cancelable)\r\n        ? props.cancelable.indexOf(\"x\") >= 0\r\n        : props.cancelable,\r\n);\r\n\r\nconst customStyle = computed(() =>\r\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\r\n);\r\n\r\nonBeforeUnmount(() => {\r\n    if (isClient) {\r\n        // reset scroll\r\n        const scrollto = savedScrollTop.value\r\n            ? savedScrollTop.value\r\n            : document.documentElement.scrollTop;\r\n        if (scrollClass.value) {\r\n            document.body.classList.remove(...scrollClass.value);\r\n            document.documentElement.classList.remove(...scrollClass.value);\r\n        }\r\n        document.documentElement.scrollTop = scrollto;\r\n        document.body.style.top = null;\r\n    }\r\n});\r\n\r\nfunction handleScroll(): void {\r\n    if (!isClient) return;\r\n\r\n    if (props.scroll === \"clip\") {\r\n        if (scrollClass.value) {\r\n            if (isActive.value)\r\n                document.documentElement.classList.add(...scrollClass.value);\r\n            else\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n        }\r\n        return;\r\n    }\r\n\r\n    savedScrollTop.value = savedScrollTop.value\r\n        ? savedScrollTop.value\r\n        : document.documentElement.scrollTop;\r\n\r\n    if (scrollClass.value) {\r\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\r\n        else document.body.classList.remove(...scrollClass.value);\r\n    }\r\n\r\n    if (isActive.value) {\r\n        document.body.style.top = `-${savedScrollTop.value}px`;\r\n        return;\r\n    }\r\n\r\n    document.documentElement.scrollTop = savedScrollTop.value;\r\n    document.body.style.top = null;\r\n    savedScrollTop.value = null;\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isAnimating.value = false;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isAnimating.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-modal\"],\r\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\r\n    [\"activeClass\", \"o-modal--active\", null, isActive],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-modal__content\"],\r\n    [\r\n        \"fullScreenClass\",\r\n        \"o-modal__content--full-screen\",\r\n        null,\r\n        computed(() => props.fullScreen),\r\n    ],\r\n);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\r\n\r\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\r\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\r\n\r\nconst scrollClass = computed(() =>\r\n    getActiveClasses(\r\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\r\n    ),\r\n);\r\n\r\n// computed ref must be computed at least once for programmatic usage\r\nscrollClass.value;\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\r\n        <transition\r\n            :name=\"animation\"\r\n            @after-enter=\"afterEnter\"\r\n            @before-leave=\"beforeLeave\">\r\n            <div\r\n                v-show=\"isActive\"\r\n                v-bind=\"$attrs\"\r\n                ref=\"rootRef\"\r\n                v-trap-focus=\"trapFocus\"\r\n                data-oruga=\"modal\"\r\n                :class=\"rootClasses\"\r\n                :tabindex=\"-1\"\r\n                :role=\"ariaRole\"\r\n                :aria-label=\"ariaLabel\"\r\n                :aria-modal=\"isActive\">\r\n                <div\r\n                    :class=\"overlayClasses\"\r\n                    tabindex=\"-1\"\r\n                    aria-hidden=\"true\"\r\n                    @click=\"cancel('outside')\" />\r\n\r\n                <div :class=\"contentClasses\" :style=\"customStyle\">\r\n                    <!-- injected component for programmatic usage -->\r\n                    <component\r\n                        v-bind=\"$props.props\"\r\n                        :is=\"component\"\r\n                        v-if=\"component\"\r\n                        v-on=\"$props.events\"\r\n                        @close=\"close\" />\r\n                    <!--\r\n                        @slot Modal default content, default is content prop\r\n                        @binding {(...args): void} close - function to close the component\r\n                    -->\r\n                    <slot v-else :close=\"close\">\r\n                        <div v-if=\"content\">{{ content }}</div>\r\n                    </slot>\r\n\r\n                    <o-icon\r\n                        v-if=\"showX\"\r\n                        v-show=\"!isAnimating\"\r\n                        clickable\r\n                        both\r\n                        :class=\"closeClasses\"\r\n                        :icon=\"closeIcon\"\r\n                        :size=\"closeIconSize\"\r\n                        @click=\"cancel('x')\" />\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </Teleport>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Modal from \"./Modal.vue\";\r\nimport type { ModalProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        modal: typeof ModalProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Modal>();\r\n\r\ntype ModalProgrammaticProps = Readonly<\r\n    string | (ModalProps & OrugaOptions[\"modal\"])\r\n>;\r\n\r\nconst ModalProgrammatic = {\r\n    open(params: ModalProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      content: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.content)) {\r\n            slot = componentParams.content;\r\n            delete componentParams.content;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Modal, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default ModalProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Modal from \"./Modal.vue\";\r\nimport ModalProgrammatic from \"./ModalProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export modal specific types */\r\nexport type { ModalProps } from \"./types\";\r\n\r\n/** export modal plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Modal);\r\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export modal components */\r\nexport { ModalProgrammatic, Modal as OModal };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Bold notification blocks to alert your users of something\r\n * @displayName Notification\r\n * @requires ./NotificationNotice.vue\r\n * @style _notification.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ONotification\",\r\n    configField: \"notification\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: true },\r\n    /**\r\n     * Type (color) of the notification\r\n     * @values info, success, warning, danger\r\n     */\r\n    type: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"info\", \"success\", \"warning\", \"danger\", undefined].indexOf(value) >\r\n            -1,\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"notification.variant\"),\r\n    },\r\n    /**\r\n     * Which position the notification will appear when programmatically\r\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"notification.position\", \"top\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"top-right\",\r\n                \"top\",\r\n                \"top-left\",\r\n                \"bottom-right\",\r\n                \"bottom\",\r\n                \"bottom-left\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Message text (can contain HTML), unnecessary when default slot is used */\r\n    message: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: undefined,\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"notification.animation\", \"fade\"),\r\n    },\r\n    /** Accessibility label for the close button */\r\n    ariaCloseLabel: {\r\n        type: String,\r\n        default: () => getOption(\"notification.ariaCloseLabel\", \"Close\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"notification.iconPack\"),\r\n    },\r\n    /** Icon name to use */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"notification.iconSize\", \"large\"),\r\n    },\r\n    /** Add close button to the item that closes the notification */\r\n    closable: { type: Boolean, default: false },\r\n    /** Close icon name */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"notification.closeIcon\", \"close\"),\r\n    },\r\n    /**\r\n     * Size of close icon\r\n     * @values small, medium, large\r\n     */\r\n    closeIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"notification.closeIconSize\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button container */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the content element */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon on the left */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the element when positioned */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the notification variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the wrapper element */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\n/** Icon name (MDI) based on type. */\r\nconst computedIcon = computed(() => {\r\n    if (props.icon) return props.icon;\r\n\r\n    switch (props.type) {\r\n        case \"info\":\r\n            return \"information\";\r\n        case \"success\":\r\n            return \"check-circle\";\r\n        case \"warning\":\r\n            return \"alert\";\r\n        case \"danger\":\r\n            return \"alert-circle\";\r\n        default:\r\n            return null;\r\n    }\r\n});\r\n\r\n/** Close the Message and emit events. */\r\nfunction close(...args: any[]): void {\r\n    isActive.value = false;\r\n    emits(\"close\", ...args);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-notification\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-notification--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-notification--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n);\r\n\r\nconst wrapperClasses = defineClasses([\r\n    \"wrapperClass\",\r\n    \"o-notification__wrapper\",\r\n]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\r\n\r\nconst contentClasses = defineClasses([\r\n    \"contentClass\",\r\n    \"o-notification__content\",\r\n]);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\r\n</script>\r\n\r\n<template>\r\n    <transition :name=\"animation\">\r\n        <article\r\n            v-show=\"isActive\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"rootClasses\"\r\n            data-oruga=\"notification\">\r\n            <button\r\n                v-if=\"closable\"\r\n                :class=\"closeClasses\"\r\n                type=\"button\"\r\n                :aria-label=\"ariaCloseLabel\"\r\n                @click=\"close({ action: 'close', method: 'x' })\">\r\n                <o-icon\r\n                    clickable\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    :icon=\"closeIcon\"\r\n                    :size=\"closeIconSize\" />\r\n            </button>\r\n\r\n            <!--\r\n                @slot Notification inner content, outside of the message container\r\n                @binding {(...args): void} close - function to close the notification\r\n            -->\r\n            <slot name=\"inner\" :close=\"close\" />\r\n\r\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\r\n                <o-icon\r\n                    v-if=\"computedIcon\"\r\n                    :icon=\"computedIcon\"\r\n                    :pack=\"iconPack\"\r\n                    :class=\"iconClasses\"\r\n                    both\r\n                    :size=\"iconSize\"\r\n                    aria-hidden />\r\n                <div :class=\"contentClasses\">\r\n                    <!--\r\n                        @slot Notification default content, default is message prop\r\n                        @binding {(...args): void} close - function to close the notification\r\n                    -->\r\n                    <slot :close=\"close\">\r\n                        <span v-if=\"message\" v-html=\"message\" />\r\n                    </slot>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </transition>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    onMounted,\r\n    onBeforeMount,\r\n    watch,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { NotifcationProps } from \"./types\";\r\nimport type { ProgrammaticInstance, ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage\r\n * @displayName Notification Notice\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ONotificationNotice\",\r\n    configField: \"notification\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether notification is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: true },\r\n    /**\r\n     * Which position the notification will appear when programmatically.\r\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"notification.position\", \"top\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"top-right\",\r\n                \"top\",\r\n                \"top-left\",\r\n                \"bottom-right\",\r\n                \"bottom\",\r\n                \"bottom-left\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Hide notification after duration (in miliseconds) */\r\n    duration: {\r\n        type: Number,\r\n        default: () => getOption(\"notification.duration\", 2000),\r\n    },\r\n    /** Show the Notification infinitely until it is dismissed. */\r\n    infinite: { type: Boolean, default: false },\r\n    /** If notice should queue with others notices (snackbar/toast/notification). */\r\n    queue: {\r\n        type: Boolean,\r\n        default: () => getOption(\"notification.queue\"),\r\n    },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Component to be injected.\r\n     * Close notification within the component by emitting a 'close' event — $emit('close').\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component. */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component. */\r\n    events: { type: Object, default: () => ({}) },\r\n    /**\r\n     * DOM element the toast will be created on (for programmatic usage).\r\n     * Note that this also changes the position of the toast from fixed to absolute.\r\n     * Meaning that the container should be fixed.\r\n     */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"notification.container\", \"body\"),\r\n    },\r\n    /**\r\n     * Props passed to the internal notification component.\r\n     * @ignore\r\n     */\r\n    notification: {\r\n        type: Object as PropType<NotifcationProps>,\r\n        default: () => ({}),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Root class of the notice */\r\n    noticeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the notice when positioned */\r\n    noticePositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the custom container element */\r\n    noticeCustomContainerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst notificationRef = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, container } = useProgrammaticComponent(\r\n    () => notificationRef.value.$el,\r\n    props,\r\n    emits,\r\n    {\r\n        cancelOptions: [\"escape\", \"x\"],\r\n    },\r\n);\r\n\r\nconst parentTop = ref(null);\r\nconst parentBottom = ref(null);\r\n\r\nconst timer = ref();\r\n\r\nwatch(\r\n    () => isActive,\r\n    (value) => {\r\n        if (value) setAutoClose();\r\n        else if (timer.value) clearTimeout(timer.value);\r\n    },\r\n);\r\n\r\n/** Create or inject notice dom container elements. */\r\nonBeforeMount(() => {\r\n    if (\r\n        noticeClasses.value &&\r\n        positionBottomClasses.value &&\r\n        positionTopClasses.value\r\n    ) {\r\n        const rootClasses = getActiveClasses(noticeClasses.value);\r\n        const topClasses = getActiveClasses(positionTopClasses.value);\r\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\r\n\r\n        parentTop.value = container.value.querySelector(\r\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\r\n        );\r\n        parentBottom.value = container.value.querySelector(\r\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\r\n        );\r\n\r\n        if (parentTop.value && parentBottom.value) return;\r\n\r\n        if (!parentTop.value) {\r\n            parentTop.value = document.createElement(\"div\");\r\n            parentTop.value.className = `${rootClasses.join(\r\n                \" \",\r\n            )} ${topClasses.join(\" \")}`;\r\n        }\r\n\r\n        if (!parentBottom.value) {\r\n            parentBottom.value = document.createElement(\"div\");\r\n            parentBottom.value.className = `${rootClasses.join(\r\n                \" \",\r\n            )} ${bottomClasses.join(\" \")}`;\r\n        }\r\n\r\n        container.value.appendChild(parentTop.value);\r\n        container.value.appendChild(parentBottom.value);\r\n\r\n        if (container.value.tagName !== \"BODY\") {\r\n            const classes = getActiveClasses(\r\n                noticeCustomContainerClasses.value,\r\n            );\r\n            if (classes?.length)\r\n                classes\r\n                    .filter((c) => !!c)\r\n                    .forEach((c: string) => {\r\n                        parentTop.value.classList.add(c);\r\n                        parentBottom.value.classList.add(c);\r\n                    });\r\n        }\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    showNotice();\r\n    setAutoClose();\r\n});\r\n\r\nconst correctParent = computed(() => {\r\n    switch (props.position) {\r\n        case \"top-right\":\r\n        case \"top\":\r\n        case \"top-left\":\r\n            return parentTop.value;\r\n\r\n        case \"bottom-right\":\r\n        case \"bottom\":\r\n        case \"bottom-left\":\r\n            return parentBottom.value;\r\n        default:\r\n            return null;\r\n    }\r\n});\r\n\r\nconst shouldQueue = computed(() =>\r\n    props.queue\r\n        ? parentTop.value.childElementCount > 0 ||\r\n          parentBottom.value.childElementCount > 0\r\n        : false,\r\n);\r\n\r\nfunction showNotice(): void {\r\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\r\n    correctParent.value.insertAdjacentElement(\r\n        \"afterbegin\",\r\n        notificationRef.value.$el,\r\n    );\r\n    isActive.value = true;\r\n}\r\n\r\n/** Set timer to auto close message */\r\nfunction setAutoClose(): void {\r\n    if (!props.infinite) {\r\n        // clear old timer\r\n        if (timer.value) clearTimeout(timer.value);\r\n        // set new timer\r\n        timer.value = setTimeout(() => {\r\n            if (isActive.value)\r\n                handleClose({ action: \"close\", method: \"timeout\" });\r\n        }, props.duration);\r\n    }\r\n}\r\n\r\nfunction handleClose(...args: any[]): void {\r\n    clearTimeout(timer.value);\r\n    close(...args);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\r\n\r\nconst positionTopClasses = defineClasses([\r\n    \"noticePositionClass\",\r\n    \"o-notices--\",\r\n    \"top\",\r\n]);\r\nconst positionBottomClasses = defineClasses([\r\n    \"noticePositionClass\",\r\n    \"o-notices--\",\r\n    \"bottom\",\r\n]);\r\n\r\nconst noticeCustomContainerClasses = defineClasses([\r\n    \"noticeCustomContainerClass\",\r\n    \"o-notices__custom-container\",\r\n]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close: handleClose, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <o-notification\r\n        v-bind=\"notification\"\r\n        ref=\"notificationRef\"\r\n        v-model:active=\"isActive\"\r\n        :position=\"position\"\r\n        @close=\"handleClose\">\r\n        <template #inner=\"{ close }\">\r\n            <!-- injected component for programmatic usage -->\r\n            <component\r\n                v-bind=\"$props.props\"\r\n                :is=\"component\"\r\n                v-if=\"component\"\r\n                v-on=\"$props.events\"\r\n                @close=\"close\" />\r\n        </template>\r\n        <slot />\r\n    </o-notification>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport NotificationNotice from \"./NotificationNotice.vue\";\r\nimport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        notification: typeof NotificationProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof NotificationNotice>();\r\n\r\ntype NotifcationProgrammaticProps = Readonly<\r\n    | string\r\n    | (NotifcationNoticeProps &\r\n          NotifcationProps &\r\n          OrugaOptions[\"notification\"] &\r\n          Record<string, unknown>)\r\n>;\r\n\r\nconst NotificationProgrammatic = {\r\n    open(params: NotifcationProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      message: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.message)) {\r\n            slot = componentParams.message;\r\n            delete componentParams.message;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n            position: getOption(\"notification.position\", \"top-right\"),\r\n        };\r\n\r\n        const notificationParams = componentParams.notification\r\n            ? componentParams.notification\r\n            : componentParams;\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.notification = merge({}, notificationParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(NotificationNotice, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default NotificationProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Notification from \"./Notification.vue\";\r\nimport NotificationProgrammatic from \"./NotificationProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export notification specific types */\r\nexport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\r\n\r\n/** export notification plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Notification);\r\n        registerComponentProgrammatic(\r\n            app,\r\n            \"notification\",\r\n            NotificationProgrammatic,\r\n        );\r\n    },\r\n} as Plugin;\r\n\r\n/** export notification components */\r\nexport { Notification as ONotification, NotificationProgrammatic };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport type { ClassBind, DynamicComponent } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OPaginationButton\",\r\n    configField: \"pagination\",\r\n});\r\n\r\nconst props = defineProps({\r\n    number: { type: Number, default: undefined },\r\n    isCurrent: { type: Boolean, default: false },\r\n    click: {\r\n        type: Function as PropType<(event: Event) => void>,\r\n        required: true,\r\n    },\r\n    ariaLabel: { type: String, default: undefined },\r\n    disabled: { type: Boolean, default: false },\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: \"button\" as DynamicComponent,\r\n    },\r\n    class: { type: String, default: undefined },\r\n    linkClass: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    linkCurrentClass: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n});\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst linkClasses = computed(() => [\r\n    ...props.linkClass,\r\n    props.class,\r\n    ...(props.isCurrent ? props.linkCurrentClass : []),\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"tag\"\r\n        role=\"button\"\r\n        :tabindex=\"disabled ? null : 0\"\r\n        :disabled=\"disabled\"\r\n        :class=\"linkClasses\"\r\n        v-bind=\"$attrs\"\r\n        :aria-label=\"ariaLabel\"\r\n        :aria-current=\"isCurrent\"\r\n        @click.prevent=\"click\"\r\n        @keydown.enter.prevent=\"click\">\r\n        <slot>{{ number }}</slot>\r\n    </component>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, nextTick, type PropType } from \"vue\";\r\n\r\nimport OPaginationButton from \"./PaginationButton.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useMatchMedia, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * A responsive and flexible pagination\r\n * @displayName Pagination\r\n * @style _pagination.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OPagination\",\r\n    configField: \"pagination\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Total count of items */\r\n    total: { type: Number, default: undefined },\r\n    /** Items count for each page */\r\n    perPage: {\r\n        type: [Number, String],\r\n        default: () => getOption(\"pagination.perPage\", 20),\r\n    },\r\n    /** Current page number, use v-model:current to make it two-way binding. */\r\n    current: { type: Number, default: 1 },\r\n    /** Number of pagination items to show before current page. */\r\n    rangeBefore: { type: Number, default: 1 },\r\n    /** Number of pagination items to show after current page. */\r\n    rangeAfter: { type: Number, default: 1 },\r\n    /**\r\n     * Pagination size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.size\"),\r\n    },\r\n    /** Simple style */\r\n    simple: {\r\n        type: Boolean,\r\n        default: () => getOption(\"pagination.simple\", false),\r\n    },\r\n    /** Rounded button style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"pagination.rounded\", false),\r\n    },\r\n    /**\r\n     * Buttons order\r\n     * @values centered, right, left\r\n     */\r\n    order: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.order\", \"right\"),\r\n        validator: (value: string) =>\r\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\r\n    },\r\n    /** Pagination button tag name */\r\n    buttonTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"pagination.buttonTag\", \"button\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconPack\"),\r\n    },\r\n    /** Icon to use for previous button */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon to use for next button */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility label for the next page button. */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaNextLabel\", \"Next page\"),\r\n    },\r\n    /** Accessibility label for the previous page button. */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () =>\r\n            getOption(\"pagination.ariaPreviousLabel\", \"Previous page\"),\r\n    },\r\n    /** Accessibility label for the page button. */\r\n    ariaPageLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaPageLabel\", \"page\"),\r\n    },\r\n    /** Accessibility label for the current page button. */\r\n    ariaCurrentLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaCurrentLabel\", \"Current page\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the prev button */\r\n    prevButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the next button */\r\n    nextButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination list */\r\n    listClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination list items */\r\n    listItemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the link button */\r\n    linkClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the current link */\r\n    linkCurrentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination ellipsis */\r\n    ellipsisClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the info in `simple` mode */\r\n    infoClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination order */\r\n    orderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination in `simple` mode */\r\n    simpleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the disabled link */\r\n    linkDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the pagination size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of pagination component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * current prop two-way binding\r\n     * @param value {number} updated current prop\r\n     */\r\n    (e: \"update:current\", value: number): void;\r\n    /**\r\n     * on current change event\r\n     * @param value {number} current value\r\n     */\r\n    (e: \"change\", event: number): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst current = usePropBinding(\"current\", props, emits);\r\n\r\n/** Total page size (count). */\r\nconst pageCount = computed(() =>\r\n    Math.ceil(props.total / Number(props.perPage)),\r\n);\r\n\r\n/** If current page is trying to be greater than page count, set to last. */\r\nwatch(\r\n    () => pageCount.value,\r\n    (value) => {\r\n        if (props.current > value) last();\r\n    },\r\n);\r\n\r\n/** First item of the page (count). */\r\nconst firstItem = computed(() => {\r\n    const perPage = Number(props.perPage);\r\n    const firstItem = props.current * perPage - perPage + 1;\r\n    return firstItem >= 0 ? firstItem : 0;\r\n});\r\n\r\n/** Check if previous button is available. */\r\nconst hasPrev = computed(() => props.current > 1);\r\n\r\n/** Check if first page button should be visible. */\r\nconst hasFirst = computed(() => props.current >= 2 + props.rangeBefore);\r\n\r\n/** Check if first ellipsis should be visible. */\r\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\r\n\r\n/** Check if last page button should be visible. */\r\nconst hasLast = computed(\r\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\r\n);\r\n\r\n/** Check if last ellipsis should be visible. */\r\nconst hasLastEllipsis = computed(\r\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\r\n);\r\n\r\n/** Check if next button is available. */\r\nconst hasNext = computed(() => props.current < pageCount.value);\r\n\r\n/**\r\n * Get near pages, 1 before and 1 after the current.\r\n * Also add the click event to the array.\r\n */\r\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\r\n    if (props.simple) return;\r\n\r\n    let left = Math.max(1, props.current - props.rangeBefore);\r\n    if (left - 1 === 2) {\r\n        left--; // Do not show the ellipsis if there is only one to hide\r\n    }\r\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\r\n    if (pageCount.value - right === 2) {\r\n        right++; // Do not show the ellipsis if there is only one to hide\r\n    }\r\n\r\n    const pages = [];\r\n    for (let i = left; i <= right; i++) {\r\n        pages.push(getPage(i));\r\n    }\r\n    return pages;\r\n});\r\n\r\n/** Get properties for a page */\r\nfunction getPage(\r\n    num: number,\r\n    ariaLabel?: string,\r\n): {\r\n    number: number;\r\n    isCurrent: boolean;\r\n    click: (event: Event) => void;\r\n    ariaLabel: string;\r\n    tag: DynamicComponent;\r\n} {\r\n    return {\r\n        number: num,\r\n        isCurrent: props.current === num,\r\n        click: (event: Event): void => changePage(num, event),\r\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\r\n        tag: props.buttonTag,\r\n    };\r\n}\r\n\r\n/** Get text for aria-label according to page number. */\r\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\r\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\r\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\r\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\r\n        return (\r\n            props.ariaCurrentLabel +\r\n            \", \" +\r\n            props.ariaPageLabel +\r\n            \" \" +\r\n            pageNumber +\r\n            \".\"\r\n        );\r\n    return null;\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction prev(event?: Event): void {\r\n    changePage(props.current - 1, event);\r\n}\r\n\r\n/** Next button click listener. */\r\nfunction next(event?: Event): void {\r\n    changePage(props.current + 1, event);\r\n}\r\n\r\n/** First button click listener. */\r\nfunction first(event?: Event): void {\r\n    changePage(1, event);\r\n}\r\n\r\n/** Last button click listener. */\r\nfunction last(event?: Event): void {\r\n    changePage(pageCount.value, event);\r\n}\r\n\r\nfunction changePage(page: number, event: Event): void {\r\n    if (props.current === page || page < 1 || page > pageCount.value) return;\r\n    emits(\"change\", page);\r\n    current.value = page;\r\n\r\n    // Set focus on element to keep tab order\r\n    if (event && event.target)\r\n        nextTick(() => (event.target as HTMLElement).focus());\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-pag\"],\r\n    [\r\n        \"orderClass\",\r\n        \"o-pag--\",\r\n        computed(() => props.order),\r\n        computed(() => !!props.order),\r\n    ],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-pag--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"simpleClass\", \"o-pag--simple\", null, computed(() => props.simple)],\r\n    [\"mobileClass\", \"o-pag--mobile\", null, isMobile],\r\n);\r\n\r\nconst prevBtnClasses = defineClasses(\r\n    [\"prevButtonClass\", \"o-pag__previous\"],\r\n    [\r\n        \"linkDisabledClass\",\r\n        \"o-pag__link--disabled\",\r\n        null,\r\n        computed(() => !hasPrev.value),\r\n    ],\r\n);\r\n\r\nconst nextBtnClasses = defineClasses(\r\n    [\"nextButtonClass\", \"o-pag__next\"],\r\n    [\r\n        \"linkDisabledClass\",\r\n        \"o-pag__link--disabled\",\r\n        null,\r\n        computed(() => !hasNext.value),\r\n    ],\r\n);\r\n\r\nconst infoClasses = defineClasses([\"infoClass\", \"o-pag__info\"]);\r\n\r\nconst ellipsisClasses = defineClasses([\"ellipsisClass\", \"o-pag__ellipsis\"]);\r\n\r\nconst listClasses = defineClasses([\"listClass\", \"o-pag__list\"]);\r\n\r\nconst linkClasses = defineClasses(\r\n    [\"linkClass\", \"o-pag__link\"],\r\n    [\r\n        \"roundedClass\",\r\n        \"o-pag__link--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst linkCurrentClasses = defineClasses([\r\n    \"linkCurrentClass\",\r\n    \"o-pag__link--current\",\r\n]);\r\n\r\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pag__item\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ last, first, prev, next });\r\n</script>\r\n\r\n<template>\r\n    <nav :class=\"rootClasses\" data-oruga=\"pagination\">\r\n        <!-- \r\n            @slot Previous button slot\r\n            @binding {number} number - page number \r\n            @binding {boolean} isCurrent - if page is current\r\n            @binding {(event:Event): void} click - onClick handler\r\n            @binding {string} ariaLabel - aria-label attribute\r\n        -->\r\n        <slot name=\"previous\" v-bind=\"getPage(current - 1, ariaPreviousLabel)\">\r\n            <o-pagination-button\r\n                v-bind=\"getPage(current - 1, ariaPreviousLabel)\"\r\n                :class=\"prevBtnClasses\"\r\n                :link-class=\"linkClasses\"\r\n                :link-current-class=\"linkCurrentClasses\">\r\n                <o-icon\r\n                    :icon=\"iconPrev\"\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    aria-hidden=\"true\" />\r\n            </o-pagination-button>\r\n        </slot>\r\n        <!-- \r\n            @slot Next button slot\r\n            @binding {number} number - page number \r\n            @binding {boolean} isCurrent - if page is current\r\n            @binding {(event:Event): void} click - onClick handler\r\n            @binding {string} ariaLabel - aria-label attribute\r\n        -->\r\n        <slot name=\"next\" v-bind=\"getPage(current + 1, ariaNextLabel)\">\r\n            <o-pagination-button\r\n                v-bind=\"getPage(current + 1, ariaNextLabel)\"\r\n                :class=\"nextBtnClasses\"\r\n                :link-class=\"linkClasses\"\r\n                :link-current-class=\"linkCurrentClasses\">\r\n                <o-icon\r\n                    :icon=\"iconNext\"\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    aria-hidden=\"true\" />\r\n            </o-pagination-button>\r\n        </slot>\r\n\r\n        <small v-if=\"simple\" :class=\"infoClasses\">\r\n            <template v-if=\"perPage == 1\">\r\n                {{ firstItem }} / {{ total }}\r\n            </template>\r\n            <template v-else>\r\n                {{ firstItem }}-{{ Math.min(current * Number(perPage), total) }}\r\n                /\r\n                {{ total }}\r\n            </template>\r\n        </small>\r\n\r\n        <ul v-else :class=\"listClasses\">\r\n            <!--First-->\r\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\r\n                <slot v-bind=\"getPage(1)\">\r\n                    <o-pagination-button\r\n                        v-bind=\"getPage(1)\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\r\n                <span :class=\"ellipsisClasses\">&hellip;</span>\r\n            </li>\r\n\r\n            <!--Pages-->\r\n            <li\r\n                v-for=\"page in pagesInRange\"\r\n                :key=\"page.number\"\r\n                :class=\"listItemClasses\">\r\n                <slot v-bind=\"page\">\r\n                    <o-pagination-button\r\n                        v-bind=\"page\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n\r\n            <!--Last-->\r\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\r\n                <span :class=\"ellipsisClasses\">&hellip;</span>\r\n            </li>\r\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\r\n                <!-- \r\n                    @slot Pagination button slot\r\n                    @binding {number} number - page number \r\n                    @binding {boolean} isCurrent - if page is current\r\n                    @binding {(event:Event): void} click - onClick handler\r\n                    @binding {string} ariaLabel - aria-label attribute\r\n                -->\r\n                <slot v-bind=\"getPage(pageCount)\">\r\n                    <o-pagination-button\r\n                        v-bind=\"getPage(pageCount)\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Pagination from \"./Pagination.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export pagination plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Pagination);\r\n    },\r\n} as Plugin;\r\n\r\n/** export pagination components */\r\nexport { Pagination as OPagination };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select an option from a set\r\n * @displayName Radio\r\n * @style _radio.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ORadio\",\r\n    configField: \"radio\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"radio.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"radio.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Same as native name */\r\n    name: { type: String, default: undefined },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when radio is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element when checked */\r\n    checkedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string, number, boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number | boolean): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number | boolean, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\r\n\r\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-radio\"],\r\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-radio--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-radio--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-radio--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-radio__input\"],\r\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"radio\"\r\n        role=\"radio\"\r\n        :aria-checked=\"isChecked\"\r\n        @click.stop=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"radio\"\r\n            data-oruga-input=\"radio\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Override the label, default is label prop \r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Radio from \"./Radio.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export radio plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Radio);\r\n    },\r\n} as Plugin;\r\n\r\n/** export radio components */\r\nexport { Radio as ORadio };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Select from \"./Select.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export select specific types */\r\nexport type { OptionsItem } from \"./types\";\r\n\r\n/** export select plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Select);\r\n    },\r\n} as Plugin;\r\n\r\n/** export select components */\r\nexport { Select as OSelect };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { toCssDimension } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A placeholder for content to load\r\n * @displayName Skeleton\r\n * @style _skeleton.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSkeleton\",\r\n    configField: \"skeleton\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Show or hide loader\t */\r\n    active: { type: Boolean, default: true },\r\n    /** Show a loading animation */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.animated\", true),\r\n    },\r\n    /** Custom width */\r\n    width: { type: [Number, String], default: undefined },\r\n    /** Custom height */\r\n    height: { type: [Number, String], default: undefined },\r\n    /** Show a circle shape */\r\n    circle: { type: Boolean, default: false },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.rounded\", true),\r\n    },\r\n    /** Number of shapes to display */\r\n    count: { type: Number, default: 1 },\r\n    /**\r\n     * Size of skeleton\r\n     * @values small, medium, large\r\n     */\r\n    size: { type: String, default: undefined },\r\n    /**\r\n     * Skeleton position in relation to the element\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\r\n        default: \"left\",\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton animation */\r\n    animationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item rounded */\r\n    itemRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst itemStyle = computed(() => ({\r\n    height: toCssDimension(props.height),\r\n    width: toCssDimension(props.width),\r\n    borderRadius: props.circle ? \"50%\" : null,\r\n}));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-sklt\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-sklt--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n);\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-sklt__item\"],\r\n    [\r\n        \"itemRoundedClass\",\r\n        \"o-sklt__item--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n    [\r\n        \"animationClass\",\r\n        \"o-sklt__item--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sklt__item--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\r\n        <div\r\n            v-for=\"i in count\"\r\n            :key=\"i\"\r\n            :class=\"itemClasses\"\r\n            :style=\"itemStyle\" />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Skeleton from \"./Skeleton.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export skeleton plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Skeleton);\r\n    },\r\n} as Plugin;\r\n\r\n/** export skeleton components */\r\nexport { Skeleton as OSkeleton };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    watch,\r\n    onMounted,\r\n    onBeforeUnmount,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useClickOutside,\r\n    useMatchMedia,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * A sidebar to use as left/right overlay or static\r\n * @displayName Sidebar\r\n * @style _sidebar.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSidebar\",\r\n    configField: \"sidebar\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the sidebar\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.variant\"),\r\n    },\r\n    /** Show an overlay like modal */\r\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\r\n    /** Display the Sidebear inline */\r\n    inline: { type: Boolean, default: false },\r\n    /**\r\n     * Sidebar position\r\n     * @values top, right, bottom, left\r\n     */\r\n    position: {\r\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\r\n        default: () => getOption(\"sidebar.position\", \"left\"),\r\n    },\r\n    /** Show sidebar in fullheight */\r\n    fullheight: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullheight\", false),\r\n    },\r\n    /** Show sidebar in fullwidth */\r\n    fullwidth: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullwidth\", false),\r\n    },\r\n    /** Show a small sidebar */\r\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\r\n    /**\r\n     * Custom layout on mobile\r\n     * @values fullwidth, reduced, hidden\r\n     */\r\n    mobile: {\r\n        type: String,\r\n        default: getOption(\"sidebar.mobile\"),\r\n        validator: (value: string) =>\r\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\r\n    },\r\n    /** Expand sidebar on hover when reduced or mobile is reduce */\r\n    expandOnHover: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.expandOnHover\", false),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.animation\"),\r\n    },\r\n    /**\r\n     * Is Sidebar cancleable by pressing escape or clicking outside.\r\n     * @values escape, outside, true, false\r\n     */\r\n    cancelable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled) */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\r\n     * but will set body to position fixed, might break some layouts.\r\n     * @values keep, clip\r\n     */\r\n    scroll: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\r\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\r\n    },\r\n    /** Destroy sidebar on hide */\r\n    destroyOnHide: {\r\n        type: Boolean,\r\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"sidebar.teleport\", false),\r\n    },\r\n    /**\r\n     * Component to be injected, used to open a component sidebar programmatically.\r\n     * Close sidebar within the component by emitting a 'close' event — emits('close')\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component. */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component. */\r\n    events: { type: Object, default: () => ({}) },\r\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"sidebar.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when its active */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar when teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullheight */\r\n    fullheightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullwidth */\r\n    fullwidthClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when its inlined */\r\n    inlineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when reduced */\r\n    reduceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when expanded on hover */\r\n    expandOnHoverClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar clipped */\r\n    crollClipClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar is not clipped */\r\n    noScrollClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is hidden */\r\n    hiddenClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is visible */\r\n    visibleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\nconst sidebarContent = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        destroyOnHide: props.destroyOnHide,\r\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst savedScrollTop = ref(null);\r\nconst isAnimating = ref(!props.active);\r\n\r\nwatch(isActive, (value) => {\r\n    if (props.overlay) handleScroll();\r\n    if (value) addHandler();\r\n    else removeHandler();\r\n});\r\n\r\nconst _teleport = computed(() =>\r\n    typeof props.teleport === \"boolean\"\r\n        ? { to: \"body\", disabled: !props.teleport }\r\n        : { to: props.teleport, disabled: false },\r\n);\r\n\r\nconst transitionName = computed(() => {\r\n    if (props.animation) return props.animation;\r\n\r\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\r\n    const right = props.position === \"right\";\r\n    const open = right ? !isActive.value : isActive.value;\r\n\r\n    return open\r\n        ? vertical\r\n            ? \"slide-down\"\r\n            : \"slide-next\"\r\n        : vertical\r\n          ? \"slide-up\"\r\n          : \"slide-prev\";\r\n});\r\n\r\nconst hideOnMobile = computed(\r\n    () => props.mobile === \"hidden\" && isMobile.value,\r\n);\r\n\r\nonMounted(() => {\r\n    if (props.active) addHandler();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    removeHandler();\r\n    if (isClient) {\r\n        if (props.overlay) {\r\n            // reset scroll\r\n            const scrollto = savedScrollTop.value\r\n                ? savedScrollTop.value\r\n                : document.documentElement.scrollTop;\r\n            if (scrollClass.value) {\r\n                document.body.classList.remove(...scrollClass.value);\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n            document.documentElement.scrollTop = scrollto;\r\n            document.body.style.top = null;\r\n        }\r\n    }\r\n});\r\n\r\nlet removeOutsideListener = null;\r\n\r\n/** add outside click event listener */\r\nfunction addHandler(): void {\r\n    if (isClient && !props.overlay) {\r\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\r\n    }\r\n}\r\n\r\n/** remove outside click event listener */\r\nfunction removeHandler(): void {\r\n    if (removeOutsideListener !== null) removeOutsideListener();\r\n}\r\n\r\n/** Close fixed sidebar if clicked outside. */\r\nfunction clickedOutside(event: Event): void {\r\n    if (props.inline || !isActive.value || isAnimating.value) return;\r\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\r\n        event.preventDefault();\r\n    cancel(\"outside\");\r\n}\r\n\r\nfunction handleScroll(): void {\r\n    if (!isClient) return;\r\n\r\n    if (props.scroll === \"clip\") {\r\n        if (scrollClass.value?.length) {\r\n            if (isActive.value) {\r\n                document.documentElement.classList.add(...scrollClass.value);\r\n            } else {\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    savedScrollTop.value = savedScrollTop.value\r\n        ? savedScrollTop.value\r\n        : document.documentElement.scrollTop;\r\n\r\n    if (scrollClass.value) {\r\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\r\n        else document.body.classList.remove(...scrollClass.value);\r\n    }\r\n\r\n    if (isActive.value) {\r\n        document.body.style.top = `-${savedScrollTop.value}px`;\r\n        return;\r\n    }\r\n\r\n    document.documentElement.scrollTop = savedScrollTop.value;\r\n    document.body.style.top = null;\r\n    savedScrollTop.value = null;\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isAnimating.value = false;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isAnimating.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-side\"],\r\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\r\n    [\"activeClass\", \"o-side--active\", null, isActive],\r\n    [\r\n        \"teleportClass\",\r\n        \"o-side--teleport\",\r\n        null,\r\n        computed(() => !!props.teleport),\r\n    ],\r\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-side__content\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"fullheightClass\",\r\n        \"o-side__content--fullheight\",\r\n        null,\r\n        computed(() => props.fullheight),\r\n    ],\r\n    [\r\n        \"fullwidthClass\",\r\n        \"o-side__content--fullwidth\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.fullwidth ||\r\n                (props.mobile === \"fullwidth\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"reduceClass\",\r\n        \"o-side__content--reduced\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"expandOnHoverClass\",\r\n        \"o-side__content--reduced-expand\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.expandOnHover &&\r\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\r\n        ),\r\n    ],\r\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\r\n    [\r\n        \"hiddenClass\",\r\n        \"o-side__content--hidden\",\r\n        null,\r\n        computed(() => !isActive.value),\r\n    ],\r\n);\r\n\r\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\r\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\r\n\r\nconst scrollClass = computed(() =>\r\n    getActiveClasses(\r\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\r\n    ),\r\n);\r\n\r\n// computed ref must be computed at least once for programmatic usage\r\nscrollClass.value;\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\r\n        <div\r\n            v-show=\"!hideOnMobile\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"rootClasses\"\r\n            data-oruga=\"sidebar\">\r\n            <div\r\n                v-if=\"overlay && isActive\"\r\n                :class=\"overlayClasses\"\r\n                :tabindex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                @click=\"(evt) => clickedOutside(evt)\" />\r\n            <transition\r\n                :name=\"transitionName\"\r\n                @after-enter=\"afterEnter\"\r\n                @before-leave=\"beforeLeave\">\r\n                <div\r\n                    v-show=\"isActive\"\r\n                    ref=\"sidebarContent\"\r\n                    :class=\"contentClasses\">\r\n                    <!--\r\n                        @slot Sidebar default content, default is component prop\r\n                        @binding {(...args):void} close - function to close the component\r\n                    -->\r\n                    <slot :close=\"close\">\r\n                        <!-- injected component for programmatic usage -->\r\n                        <component\r\n                            v-bind=\"$props.props\"\r\n                            :is=\"component\"\r\n                            v-if=\"component\"\r\n                            v-on=\"$props.events\"\r\n                            @close=\"close\" />\r\n                    </slot>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </Teleport>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport type { SidebarProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        sidebar: typeof SidebarProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Sidebar>();\r\n\r\ntype SidebarProgrammaticProps = Readonly<\r\n    SidebarProps & OrugaOptions[\"sidebar\"]\r\n>;\r\n\r\nconst SidebarProgrammatic = {\r\n    open(params: SidebarProgrammaticProps): ProgrammaticExpose {\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, params);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Sidebar, propsData);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default SidebarProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export sidebar specific types */\r\nexport type { SidebarProps } from \"./types\";\r\n\r\n/** export sidebar plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Sidebar);\r\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export sidebar components */\r\nexport { SidebarProgrammatic, Sidebar as OSidebar };\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\r\n\r\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useEventListener,\r\n    useClickOutside,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * Display a brief helper text to your user\r\n * @displayName Tooltip\r\n * @style _tooltip.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTooltip\",\r\n    configField: \"tooltip\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: false },\r\n    /** Tooltip text, unnecessary when content slot is used */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Color of the tooltip\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.variant\"),\r\n    },\r\n    /**\r\n     * Position of the Tooltip relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.position\", \"auto\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Tooltip will be always active */\r\n    always: { type: Boolean, default: false },\r\n    /** Tooltip will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Tooltip default animation */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\r\n    },\r\n    /** Tooltip will be multilined */\r\n    multiline: { type: Boolean, default: false },\r\n    /** Tooltip trigger tag name */\r\n    triggerTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\r\n    },\r\n    /**\r\n     * Tooltip trigger events\r\n     * @values hover, click, focus, contextmenu\r\n     */\r\n    triggers: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\r\n        validator: (values: string[]) =>\r\n            values.filter(\r\n                (value) =>\r\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\r\n                    -1,\r\n            ).length === values.length,\r\n    },\r\n    /** Tooltip delay before it appears (number in ms) */\r\n    delay: { type: Number, default: undefined },\r\n    /**\r\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\r\n     * @values true, false, content, outside, escape\r\n     */\r\n    closeable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"dropdown.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the dropdown is teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip content when is multiline */\r\n    multilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger when is always visible */\r\n    alwaysClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip arrow */\r\n    arrowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip arrow position */\r\n    arrowPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /** on active change to false event */\r\n    (e: \"close\"): void;\r\n    /** on active change to true event */\r\n    (e: \"open\"): void;\r\n}>();\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\nwatch(isActive, (value) => {\r\n    if (value) emits(\"open\");\r\n    else emits(\"close\");\r\n});\r\n\r\nconst timer = ref();\r\n\r\nconst autoPosition = ref(props.position);\r\n\r\n/** update autoPosition on prop change */\r\nwatch(\r\n    () => props.position,\r\n    (v) => (autoPosition.value = v),\r\n);\r\n\r\n// --- Event Handler ---\r\n\r\nconst contentRef = ref<HTMLElement>();\r\nconst triggerRef = ref<HTMLElement>();\r\n\r\nconst eventCleanups = ref([]);\r\n\r\nwatch(isActive, (value) => {\r\n    // on active set event handler\r\n    if (value && isClient) {\r\n        setTimeout(() => {\r\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\r\n                // set outside handler\r\n                eventCleanups.value.push(\r\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\r\n                );\r\n            }\r\n\r\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\r\n                // set keyup handler\r\n                eventCleanups.value.push(\r\n                    useEventListener(\"keyup\", onKeyPress, document, {\r\n                        immediate: true,\r\n                    }),\r\n                );\r\n            }\r\n        });\r\n    } else if (!value) {\r\n        // on close cleanup event handler\r\n        eventCleanups.value.forEach((fn) => fn());\r\n        eventCleanups.value.length = 0;\r\n    }\r\n});\r\n\r\nconst cancelOptions = computed<string[]>(() =>\r\n    typeof props.closeable === \"boolean\"\r\n        ? props.closeable\r\n            ? [\"escape\", \"outside\", \"content\"]\r\n            : []\r\n        : props.closeable,\r\n);\r\n\r\n/** Close tooltip if clicked outside. */\r\nfunction onClickedOutside(): void {\r\n    if (!isActive.value || props.always) return;\r\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\r\n    isActive.value = false;\r\n}\r\n\r\n/** Keypress event that is bound to the document */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\r\n        isActive.value = false;\r\n    }\r\n}\r\n\r\nfunction onClick(): void {\r\n    if (props.triggers.indexOf(\"click\") < 0) return;\r\n    // if not active, toggle after clickOutside event\r\n    // this fixes toggling programmatic\r\n    nextTick(() => setTimeout(() => open()));\r\n}\r\n\r\nfunction onContextMenu(event: Event): void {\r\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\r\n    event.preventDefault();\r\n    open();\r\n}\r\n\r\nfunction onFocus(): void {\r\n    if (props.triggers.indexOf(\"focus\") < 0) return;\r\n    open();\r\n}\r\n\r\nfunction onHover(): void {\r\n    if (props.triggers.indexOf(\"hover\") < 0) return;\r\n    open();\r\n}\r\n\r\nfunction open(): void {\r\n    if (props.disabled) return;\r\n    if (props.delay) {\r\n        timer.value = setTimeout(() => {\r\n            isActive.value = true;\r\n            timer.value = null;\r\n        }, props.delay);\r\n    } else {\r\n        isActive.value = true;\r\n    }\r\n}\r\n\r\nfunction onClose(): void {\r\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n    isActive.value = !props.closeable;\r\n    if (timer.value && props.closeable) clearTimeout(timer.value);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tip\"],\r\n    [\r\n        \"teleportClass\",\r\n        \"o-tip--teleport\",\r\n        null,\r\n        computed(() => !!props.teleport),\r\n    ],\r\n);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\r\n\r\nconst arrowClasses = defineClasses(\r\n    [\"arrowClass\", \"o-tip__arrow\"],\r\n    [\r\n        \"arrowPositionClass\",\r\n        \"o-tip__arrow--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"variantArrowClass\",\r\n        \"o-tip__arrow--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-tip__content\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-tip__content--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-tip__content--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"multilineClass\",\r\n        \"o-tip__content--multiline\",\r\n        null,\r\n        computed(() => props.multiline),\r\n    ],\r\n    [\r\n        \"alwaysClass\",\r\n        \"o-tip__content--always\",\r\n        null,\r\n        computed(() => props.always),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\r\n        <PositionWrapper\r\n            v-slot=\"{ setContent }\"\r\n            v-model:position=\"autoPosition\"\r\n            :teleport=\"teleport\"\r\n            :class=\"rootClasses\"\r\n            :trigger=\"triggerRef\"\r\n            default-position=\"top\"\r\n            :disabled=\"!isActive\">\r\n            <transition :name=\"animation\">\r\n                <div\r\n                    v-show=\"isActive || (always && !disabled)\"\r\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\r\n                    :class=\"contentClasses\">\r\n                    <span :class=\"arrowClasses\"></span>\r\n\r\n                    <!--\r\n                        @slot Tooltip content, default is label prop\r\n                    -->\r\n                    <slot name=\"content\">{{ label }}</slot>\r\n                </div>\r\n            </transition>\r\n        </PositionWrapper>\r\n\r\n        <component\r\n            :is=\"triggerTag\"\r\n            ref=\"triggerRef\"\r\n            :class=\"triggerClasses\"\r\n            aria-haspopup=\"true\"\r\n            @click=\"onClick\"\r\n            @contextmenu=\"onContextMenu\"\r\n            @mouseenter=\"onHover\"\r\n            @focus.capture=\"onFocus\"\r\n            @blur.capture=\"onClose\"\r\n            @mouseleave=\"onClose\">\r\n            <!--\r\n                @slot Tooltip trigger slot\r\n                @binding {boolean} active - tooltip active state\r\n            -->\r\n            <slot :active=\"isActive\" />\r\n        </component>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport OTooltip from \"../tooltip/Tooltip.vue\";\r\n\r\nimport { isClient } from \"@/utils/ssr\";\r\n\r\nimport type { SliderProps } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Thumb\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderThumb\",\r\n    configField: \"slider\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** parent slider component props  */\r\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\r\n    modelValue: { type: Number, required: true },\r\n    sliderSize: { type: Function as PropType<() => number>, required: true },\r\n    thumbWrapperClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    thumbClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /** on value change event */\r\n    (e: \"change\"): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\r\nconst slider = computed<SliderProps>(() => props.sliderProps);\r\n\r\nconst isFocused = ref(false);\r\nconst dragging = ref(false);\r\nconst startX = ref(0);\r\nconst startPosition = ref(0);\r\nconst newPosition = ref(null);\r\nconst oldValue = ref(props.modelValue);\r\n\r\nconst tooltip = computed(() => slider.value.tooltip);\r\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\r\nconst disabled = computed(() => slider.value.disabled);\r\nconst max = computed(() => slider.value.max);\r\nconst min = computed(() => slider.value.min);\r\nconst step = computed(() => slider.value.step);\r\nconst indicator = computed(() => slider.value.indicator);\r\n\r\nconst ariaLabel = computed(() =>\r\n    Array.isArray(slider.value.ariaLabel)\r\n        ? slider.value.ariaLabel[0]\r\n        : slider.value.ariaLabel,\r\n);\r\n\r\nconst precision = computed(() => {\r\n    const precisions = [min.value, max.value, step.value].map((item) => {\r\n        const decimal = (\"\" + item).split(\".\")[1];\r\n        return decimal ? decimal.length : 0;\r\n    });\r\n    return Math.max(...precisions);\r\n});\r\n\r\nconst computedTooltipVariant = computed(() =>\r\n    slider.value.tooltipVariant\r\n        ? slider.value.tooltipVariant\r\n        : slider.value.variant,\r\n);\r\n\r\nconst currentPosition = computed(\r\n    () =>\r\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\r\n);\r\n\r\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\r\n\r\nconst formattedValue = computed(() => {\r\n    if (typeof slider.value.customFormatter !== \"undefined\")\r\n        return slider.value.customFormatter(props.modelValue);\r\n\r\n    if (slider.value.format === \"percent\")\r\n        return new Intl.NumberFormat(slider.value.locale, {\r\n            style: \"percent\",\r\n        }).format((props.modelValue - min.value) / (max.value - min.value));\r\n\r\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\r\n});\r\n\r\nfunction onFocus(): void {\r\n    isFocused.value = true;\r\n}\r\n\r\nfunction onBlur(): void {\r\n    isFocused.value = false;\r\n}\r\n\r\nfunction onButtonDown(event): void {\r\n    if (disabled.value) return;\r\n    event.preventDefault();\r\n    onDragStart(event);\r\n\r\n    if (isClient) {\r\n        document.addEventListener(\"mousemove\", onDragging);\r\n        document.addEventListener(\"touchmove\", onDragging);\r\n        document.addEventListener(\"mouseup\", onDragEnd);\r\n        document.addEventListener(\"touchend\", onDragEnd);\r\n        document.addEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction onLeftKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) -\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onRightKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) +\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onHomeKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value = 0;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onEndKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value = 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onDragStart(event): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\r\n\r\n    startX.value = event.clientX;\r\n    startPosition.value = parseFloat(currentPosition.value);\r\n    newPosition.value = startPosition.value;\r\n}\r\n\r\nfunction onDragging(event): void {\r\n    if (dragging.value) {\r\n        if (event.type === \"touchmove\")\r\n            event.clientX = event.touches[0].clientX;\r\n\r\n        const diff =\r\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\r\n        newPosition.value = startPosition.value + diff;\r\n        setPosition(newPosition.value);\r\n    }\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.modelValue !== oldValue.value) emits(\"change\");\r\n\r\n    setPosition(newPosition.value);\r\n    if (isClient) {\r\n        document.removeEventListener(\"mousemove\", onDragging);\r\n        document.removeEventListener(\"touchmove\", onDragging);\r\n        document.removeEventListener(\"mouseup\", onDragEnd);\r\n        document.removeEventListener(\"touchend\", onDragEnd);\r\n        document.removeEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction setPosition(percent: number): void {\r\n    if (percent === null || isNaN(percent)) return;\r\n    if (percent < 0) percent = 0;\r\n    else if (percent > 100) percent = 100;\r\n\r\n    const stepLength = 100 / ((max.value - min.value) / step.value);\r\n    const steps = Math.round(percent / stepLength);\r\n    let value =\r\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\r\n    value = parseFloat(value.toFixed(precision.value));\r\n    emits(\"update:modelValue\", value);\r\n\r\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\r\n}\r\n\r\ndefineExpose({ setPosition });\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"thumbWrapperClasses\"\r\n        :style=\"wrapperStyle\"\r\n        data-oruga=\"slider-thumb\">\r\n        <o-tooltip\r\n            :label=\"formattedValue\"\r\n            :variant=\"computedTooltipVariant\"\r\n            :disabled=\"disabled || !tooltip\"\r\n            :always=\"tooltipAlways || dragging || isFocused\">\r\n            <div\r\n                v-bind=\"$attrs\"\r\n                :class=\"thumbClasses\"\r\n                :tabindex=\"disabled ? null : 0\"\r\n                role=\"slider\"\r\n                :aria-label=\"ariaLabel\"\r\n                :aria-valuenow=\"modelValue\"\r\n                :aria-valuemin=\"min\"\r\n                :aria-valuemax=\"max\"\r\n                :aria-disabled=\"disabled\"\r\n                aria-orientation=\"horizontal\"\r\n                @mousedown=\"onButtonDown\"\r\n                @touchstart=\"onButtonDown\"\r\n                @focus=\"onFocus\"\r\n                @blur=\"onBlur\"\r\n                @keydown.left.prevent=\"onLeftKeyDown\"\r\n                @keydown.right.prevent=\"onRightKeyDown\"\r\n                @keydown.down.prevent=\"onLeftKeyDown\"\r\n                @keydown.up.prevent=\"onRightKeyDown\"\r\n                @keydown.home.prevent=\"onHomeKeyDown\"\r\n                @keydown.end.prevent=\"onEndKeyDown\">\r\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\r\n            </div>\r\n        </o-tooltip>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Tick\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderTick\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Value of single tick */\r\n    value: { type: Number, required: true },\r\n    /** Tick label */\r\n    label: { type: String, default: undefined },\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent } = useProviderChild<SliderComponent>();\r\n\r\nconst position = computed(() => {\r\n    const pos =\r\n        ((props.value - parent.value.min) /\r\n            (parent.value.max - parent.value.min)) *\r\n        100;\r\n    return pos >= 0 && pos <= 100 ? pos : 0;\r\n});\r\n\r\nconst hidden = computed(\r\n    () => props.value === parent.value.min || props.value === parent.value.max,\r\n);\r\n\r\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"tickClass\", \"o-slide__tick\"],\r\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\r\n);\r\n\r\nconst tickLabelClasses = defineClasses([\r\n    \"tickLabelClass\",\r\n    \"o-slide__tick-label\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\r\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\r\n            <!-- \r\n                @slot Override tick content, default is label prop\r\n             -->\r\n            <slot> {{ label }} </slot>\r\n        </span>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OSliderThumb from \"./SliderThumb.vue\";\r\nimport OSliderTick from \"./SliderTick.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderParent } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A slider to select a value or range from a given range\r\n * @displayName Slider\r\n * @requires ./SliderTick.vue\r\n * @style _slider.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSlider\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Number, Array] as PropType<number | number[]>,\r\n        default: 0,\r\n    },\r\n    /** Minimum value */\r\n    min: { type: Number, default: 0 },\r\n    /** Maximum  value */\r\n    max: { type: Number, default: 100 },\r\n    /** Step interval of ticks */\r\n    step: { type: Number, default: 1 },\r\n    /**\r\n     * Color of the slider\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.variant\"),\r\n    },\r\n    /**\r\n     * Vertical size of slider\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"slider.size\"),\r\n    },\r\n    /** Show tick marks */\r\n    ticks: { type: Boolean, default: false },\r\n    /** Show tooltip when thumb is being dragged */\r\n    tooltip: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.tooltip\", true),\r\n    },\r\n    /**\r\n     * Color of the tooltip\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    tooltipVariant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.tooltipVariant\"),\r\n    },\r\n    /** Tooltip displays always */\r\n    tooltipAlways: { type: Boolean, default: false },\r\n    /** Rounded thumb */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.rounded\", false),\r\n    },\r\n    /** Slider will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Update v-model only when dragging is finished */\r\n    lazy: { type: Boolean, default: false },\r\n    /** Function to format the tooltip label for display */\r\n    customFormatter: { type: Function, default: undefined },\r\n    /** Increases slider size on focus */\r\n    biggerSliderFocus: { type: Boolean, default: false },\r\n    /** Show indicators */\r\n    indicator: { type: Boolean, default: false },\r\n    /**\r\n     * Define v-model format\r\n     * @values row, percent\r\n     */\r\n    format: {\r\n        type: String,\r\n        default: () => getOption(\"slider.format\", \"raw\"),\r\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\r\n    ariaLabel: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"slider.ariaLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the vertical slider size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider track */\r\n    trackClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the filled part of the slider */\r\n    fillClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the slider is rounded */\r\n    thumbRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the thumb gets dragged */\r\n    thumbDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb wrapper */\r\n    thumbWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb */\r\n    thumbClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider tick */\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to display on the wrapper element when the slider is dragged */\r\n    thumbWrapperDraggingClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /**\r\n     * on value change event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"change\", value: number | number[]): void;\r\n    /**\r\n     * on dragging event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     * */\r\n    (e: \"dragging\", value: number | number[]): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\nfunction emitValue(event: any): void {\r\n    const val = isRange.value\r\n        ? [minValue.value, maxValue.value]\r\n        : valueStart.value || 0;\r\n    emits(event, val);\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<SliderComponent>(() => ({\r\n    max: props.max,\r\n    min: props.min,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(undefined, { data: provideData });\r\n\r\nconst sliderRef = ref();\r\nconst thumbStartRef = ref();\r\nconst thumbEndRef = ref();\r\n\r\nconst valueStart = ref<number>(null);\r\nconst valueEnd = ref<number>(null);\r\nconst dragging = ref(false);\r\nconst isRange = ref(false);\r\n\r\nconst isThumbReversed = ref();\r\nconst isTrackClickDisabled = ref();\r\n\r\nsetValues(props.modelValue);\r\n\r\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\r\n\r\n/** When min, max or v-model is changed set the new active step. */\r\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\r\n    setValues(props.modelValue),\r\n);\r\n\r\nconst tickValues = computed(() => {\r\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\r\n    const result = [];\r\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n});\r\n\r\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\r\n\r\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\r\n\r\nconst barSize = computed(() =>\r\n    isRange.value\r\n        ? `${\r\n              (100 * (maxValue.value - minValue.value)) /\r\n              (props.max - props.min)\r\n          }%`\r\n        : `${\r\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\r\n          }%`,\r\n);\r\n\r\nconst barStart = computed(() =>\r\n    isRange.value\r\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\r\n        : \"0%\",\r\n);\r\n\r\nconst barStyle = computed(() => ({\r\n    width: barSize.value,\r\n    left: barStart.value,\r\n}));\r\n\r\nfunction setValues(newValue: number | number[]): void {\r\n    if (props.min > props.max) return;\r\n\r\n    if (Array.isArray(newValue)) {\r\n        isRange.value = true;\r\n        const smallValue =\r\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\r\n                ? props.min\r\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\r\n        const largeValue =\r\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\r\n                ? props.max\r\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\r\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\r\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\r\n    } else {\r\n        isRange.value = false;\r\n        valueStart.value = isNaN(newValue)\r\n            ? props.min\r\n            : Math.min(props.max, Math.max(props.min, newValue));\r\n        valueEnd.value = null;\r\n    }\r\n}\r\n\r\nfunction onInternalValueUpdate(): void {\r\n    if (isRange.value)\r\n        isThumbReversed.value = valueStart.value > valueEnd.value;\r\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\r\n    if (dragging.value) emitValue(\"dragging\");\r\n}\r\n\r\nfunction sliderSize(): number {\r\n    return sliderRef.value.getBoundingClientRect().width;\r\n}\r\n\r\nfunction onSliderClick(event: MouseEvent): void {\r\n    if (props.disabled || isTrackClickDisabled.value) return;\r\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\r\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\r\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\r\n    const diffFirst = Math.abs(targetValue - valueStart.value);\r\n    if (!isRange.value) {\r\n        if (diffFirst < props.step / 2) return;\r\n        thumbStartRef.value.setPosition(percent);\r\n    } else {\r\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\r\n        if (diffFirst <= diffSecond) {\r\n            if (diffFirst < props.step / 2) return;\r\n            thumbStartRef.value.setPosition(percent);\r\n        } else {\r\n            if (diffSecond < props.step / 2) return;\r\n            thumbEndRef.value.setPosition(percent);\r\n        }\r\n    }\r\n    emitValue(\"change\");\r\n}\r\n\r\nfunction onDragStart(): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    isTrackClickDisabled.value = true;\r\n    // avoid triggering onSliderClick after dragend\r\n    setTimeout(() => (isTrackClickDisabled.value = false));\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.lazy) emitValue(\"update:modelValue\");\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-slide\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-slide--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-slide--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n);\r\n\r\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\r\n\r\nconst fillClasses = defineClasses(\r\n    [\"fillClass\", \"o-slide__fill\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-slide__fill--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst thumbClasses = defineClasses(\r\n    [\"thumbClass\", \"o-slide__thumb\"],\r\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\r\n    [\r\n        \"thumbRoundedClass\",\r\n        \"o-slide__thumb--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst thumbWrapperClasses = defineClasses(\r\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\r\n    [\r\n        \"thumbWrapperDraggingClass\",\r\n        \"o-slide__thumb-wrapper--dragging\",\r\n        null,\r\n        dragging,\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\r\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\r\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\r\n            <template v-if=\"ticks\">\r\n                <o-slider-tick\r\n                    v-for=\"(val, key) in tickValues\"\r\n                    :key=\"key\"\r\n                    :value=\"val\"\r\n                    :tick-class=\"tickClass\"\r\n                    :tick-hidden-class=\"tickHiddenClass\"\r\n                    :tick-label-class=\"tickLabelClass\" />\r\n            </template>\r\n\r\n            <!--\r\n                @slot Define additional slider ticks here\r\n             -->\r\n            <slot />\r\n\r\n            <o-slider-thumb\r\n                ref=\"thumbStartRef\"\r\n                v-model=\"valueStart\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n\r\n            <o-slider-thumb\r\n                v-if=\"isRange\"\r\n                ref=\"thumbEndRef\"\r\n                v-model=\"valueEnd\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Slider from \"./Slider.vue\";\r\nimport SliderTick from \"./SliderTick.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export slider specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export slider plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Slider);\r\n        registerComponent(app, SliderTick);\r\n    },\r\n} as Plugin;\r\n\r\n/** export slider components */\r\nexport { Slider as OSlider, SliderTick as OSliderTick };\r\n","<script setup lang=\"ts\">\r\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\r\n\r\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Responsive horizontal process steps\r\n * @displayName Steps\r\n * @requires ./StepItem.vue\r\n * @style _steps.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSteps\",\r\n    configField: \"steps\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"steps.variant\"),\r\n    },\r\n    /**\r\n     * Tab size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"steps.size\"),\r\n    },\r\n    /** Show tab in vertical layout */\r\n    vertical: { type: Boolean, default: false },\r\n    /**\r\n     * Position of the tab\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Icon pack to use for the navigation\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\r\n    },\r\n    /**\r\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\r\n     */\r\n    hasNavigation: { type: Boolean, default: true },\r\n    /** Step navigation is animated */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animated\", true),\r\n    },\r\n    /**\r\n     * Transition animation name\r\n     * @values [next, prev], [right, left, down, up]\r\n     */\r\n    animation: {\r\n        type: Array as PropType<Array<string>>,\r\n        default: () =>\r\n            getOption(\"tabs.animation\", [\r\n                \"slide-next\",\r\n                \"slide-prev\",\r\n                \"slide-down\",\r\n                \"slide-up\",\r\n            ]),\r\n        validator: (value: Array<string>) =>\r\n            value.length === 2 || value.length === 4,\r\n    },\r\n    /** Apply animation on the initial render */\r\n    animateInitially: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animateInitially\", false),\r\n    },\r\n    /**\r\n     * Position of the marker label\r\n     * @values bottom, right, left\r\n     */\r\n    labelPosition: {\r\n        type: String,\r\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\r\n        validator: (value: string) =>\r\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\r\n    },\r\n    /** Rounded step markers */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"steps.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility next button aria label */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaNextLabel\"),\r\n    },\r\n    /** Accessibility previous button aria label  */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Size of the steps */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger */\r\n    verticalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component when is vertical and its position changes */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the steps container */\r\n    stepsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Steps component when animation gets triggered */\r\n    animatedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps markers trigger when are rounded */\r\n    stepMarkerRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component dividers */\r\n    stepDividerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component marker */\r\n    stepMarkerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content */\r\n    stepContentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content when transition is happening */\r\n    stepContentTransitioningClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component navigation element */\r\n    stepNavigationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link */\r\n    stepLinkClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link when clickable */\r\n    stepLinkClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label */\r\n    stepLinkLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label when positioned */\r\n    stepLinkLabelPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of steps component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on tab change event\r\n     * @param value {string | number} new tab value\r\n     * @param value {string | number} old tab value\r\n     */\r\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<StepsComponent>(() => ({\r\n    activeValue: vmodel.value,\r\n    vertical: props.vertical,\r\n    animated: props.animated,\r\n    animation: props.animation,\r\n    animateInitially: props.animateInitially,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nconst items = computed<StepItem[]>(() =>\r\n    sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n    })),\r\n);\r\n\r\nconst vmodel = defineModel<string | number>();\r\n\r\n/** When v-model is changed set the new active tab. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (vmodel.value !== value) performAction(value);\r\n    },\r\n);\r\n\r\nconst activeItem = computed(() =>\r\n    isDefined(vmodel.value)\r\n        ? items.value.find((item) => item.value === vmodel.value) ||\r\n          items.value[0]\r\n        : items.value[0],\r\n);\r\n\r\nconst isTransitioning = computed(() =>\r\n    items.value.some((item) => item.isTransitioning),\r\n);\r\n\r\n/** Check if previous button is available. */\r\nconst hasPrev = computed(() => !!prevItem.value);\r\n\r\n/** Check if next button is available. */\r\nconst hasNext = computed(() => !!nextItem.value);\r\n\r\n/** Retrieves the previous visible item */\r\nconst prevItem = computed(() => {\r\n    if (!activeItem.value) return null;\r\n\r\n    let prevItem = null;\r\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\r\n        if (items.value[idx].visible) {\r\n            prevItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return prevItem;\r\n});\r\n\r\n/** Retrieves the next visible item */\r\nconst nextItem = computed(() => {\r\n    let nextItem = null;\r\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\r\n    for (; idx < items.value.length; idx++) {\r\n        if (items.value[idx].visible) {\r\n            nextItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return nextItem;\r\n});\r\n\r\n/**\r\n * Return if the step should be clickable or not.\r\n */\r\nfunction isItemClickable(item: StepItem): boolean {\r\n    if (item.clickable === undefined)\r\n        return item.index < activeItem.value?.index;\r\n    return item.clickable;\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction prev(): void {\r\n    if (hasPrev.value) itemClick(prevItem.value);\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction next(): void {\r\n    if (hasNext.value) itemClick(nextItem.value);\r\n}\r\n\r\n/** Item click listener, emit input event and change active child. */\r\nfunction itemClick(item: StepItem): void {\r\n    if (vmodel.value !== item.value) performAction(item.value);\r\n}\r\n\r\n/** Activate next child and deactivate prev child */\r\nfunction performAction(newId: number | string): void {\r\n    const oldId = activeItem.value.value;\r\n    const oldItem = activeItem.value;\r\n    const newItem =\r\n        items.value.find((item) => item.value === newId) || items.value[0];\r\n\r\n    if (oldItem && newItem) {\r\n        oldItem.deactivate(newItem.index);\r\n        newItem.activate(oldItem.index);\r\n    }\r\n\r\n    nextTick(() => {\r\n        vmodel.value = newId;\r\n        emits(\"change\", newId, oldId);\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-steps__wrapper\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-steps--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"verticalClass\",\r\n        \"o-steps__wrapper-vertical\",\r\n        null,\r\n        computed(() => props.vertical),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-steps__wrapper-position-\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && props.vertical),\r\n    ],\r\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\r\n);\r\n\r\nconst wrapperClasses = defineClasses(\r\n    [\"stepsClass\", \"o-steps\"],\r\n    [\r\n        \"animatedClass\",\r\n        \"o-steps--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n);\r\n\r\nconst stepDividerClasses = defineClasses([\r\n    \"stepDividerClass\",\r\n    \"o-steps__divider\",\r\n]);\r\n\r\nconst stepMarkerClasses = defineClasses(\r\n    [\"stepMarkerClass\", \"o-steps__marker\"],\r\n    [\r\n        \"stepMarkerRoundedClass\",\r\n        \"o-steps__marker--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst stepContentClasses = defineClasses(\r\n    [\"stepContentClass\", \"o-steps__content\"],\r\n    [\r\n        \"stepContentTransitioningClass\",\r\n        \"o-steps__content-transitioning\",\r\n        null,\r\n        isTransitioning,\r\n    ],\r\n);\r\n\r\nconst stepNavigationClasses = defineClasses([\r\n    \"stepNavigationClass\",\r\n    \"o-steps__navigation\",\r\n]);\r\n\r\nconst stepLinkLabelClasses = defineClasses([\r\n    \"stepLinkLabelClass\",\r\n    \"o-steps__title\",\r\n]);\r\n\r\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"stepLinkClass\", \"o-steps__link\"],\r\n        [\r\n            \"stepLinkLabelPositionClass\",\r\n            \"o-steps__link-label-\",\r\n            props.labelPosition,\r\n            !!props.labelPosition,\r\n        ],\r\n        [\r\n            \"stepLinkClickableClass\",\r\n            \"o-steps__link-clickable\",\r\n            null,\r\n            isItemClickable(childItem),\r\n        ],\r\n    );\r\n\r\n    return classes.value;\r\n}\r\n\r\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\r\n        [\r\n            \"itemHeaderVariantClass\",\r\n            \"o-steps__nav-item--\",\r\n            childItem.variant || props.variant,\r\n            !!childItem.variant || !!props.variant,\r\n        ],\r\n        [\r\n            \"itemHeaderActiveClass\",\r\n            \"o-steps__nav-item-active\",\r\n            null,\r\n            childItem.value === activeItem.value.value,\r\n        ],\r\n        [\r\n            \"itemHeaderPreviousClass\",\r\n            \"o-steps__nav-item-previous\",\r\n            null,\r\n            activeItem.value.index > childItem.index,\r\n        ],\r\n    );\r\n\r\n    const headerClass = { [childItem.headerClass || \"\"]: true };\r\n    return [headerClass, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\r\n        <ol :class=\"wrapperClasses\">\r\n            <li\r\n                v-for=\"(childItem, index) in items\"\r\n                v-show=\"childItem.visible\"\r\n                :key=\"childItem.value\"\r\n                :aria-current=\"\r\n                    childItem.value === activeItem.value ? 'step' : undefined\r\n                \"\r\n                :class=\"itemClasses(childItem)\">\r\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\r\n\r\n                <component\r\n                    :is=\"childItem.tag\"\r\n                    role=\"button\"\r\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\r\n                    :class=\"stepLinkClasses(childItem)\"\r\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\r\n                    @keydown.enter=\"\r\n                        isItemClickable(childItem) && itemClick(childItem)\r\n                    \">\r\n                    <div :class=\"stepMarkerClasses\">\r\n                        <o-icon\r\n                            v-if=\"childItem.icon\"\r\n                            :icon=\"childItem.icon\"\r\n                            :pack=\"childItem.iconPack\"\r\n                            :size=\"size\" />\r\n                        <span v-else-if=\"childItem.step\">\r\n                            {{ childItem.step }}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div :class=\"stepLinkLabelClasses\">\r\n                        {{ childItem.label }}\r\n                    </div>\r\n                </component>\r\n            </li>\r\n        </ol>\r\n\r\n        <section :class=\"stepContentClasses\">\r\n            <!--\r\n                @slot Place step items here\r\n            -->\r\n            <slot />\r\n        </section>\r\n\r\n        <!--\r\n            @slot Override step navigation\r\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\r\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\r\n        -->\r\n        <slot\r\n            name=\"navigation\"\r\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\r\n            :next=\"{ disabled: !hasNext, action: next }\">\r\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconPrev\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasPrev\"\r\n                    :aria-label=\"ariaPreviousLabel\"\r\n                    @click.prevent=\"prev\" />\r\n\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconNext\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasNext\"\r\n                    :aria-label=\"ariaNextLabel\"\r\n                    @click.prevent=\"next\" />\r\n            </nav>\r\n        </slot>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isEqual, uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { StepsComponent, StepItemComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Step Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OStepItem\",\r\n    configField: \"steps\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Item value (it will be used as v-model of wrapper component) */\r\n    value: { type: [String, Number], default: () => uuid() },\r\n    /** Item label */\r\n    label: { type: String, default: undefined },\r\n    /** Step marker content (when there is no icon) */\r\n    step: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Default style for the step.\r\n     * This will override parent type.\r\n     * Could be used to set a completed step to \"success\" for example\r\n     */\r\n    variant: { type: String, default: undefined },\r\n    /**\r\n     * Item can be used directly to navigate.\r\n     * If undefined, previous steps are clickable while the others are not\r\n     */\r\n    clickable: { type: Boolean, default: undefined },\r\n    /** Show/hide item */\r\n    visible: { type: Boolean, default: true },\r\n    /** Icon on the left */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"steps.icon\"),\r\n    },\r\n    /** Icon pack */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Step item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\r\n    },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\r\n    },\r\n    /** Sets a class to the item header */\r\n    headerClass: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the content item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item when active */\r\n    itemHeaderActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item behind the active one */\r\n    itemHeaderPreviousClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item with variant (default value by parent steps component) */\r\n    itemHeaderVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** on tab item activate event */\r\n    (e: \"activate\"): void;\r\n    /** on tab item deactivate event */\r\n    (e: \"deactivate\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\n\r\nconst providedData = computed<StepItemComponent>(() => ({\r\n    ...props,\r\n    $slots: slots,\r\n    isTransitioning: isTransitioning.value,\r\n    activate,\r\n    deactivate,\r\n}));\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<StepsComponent>({\r\n    data: providedData,\r\n});\r\n\r\nconst transitionName = ref();\r\n\r\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\r\n\r\nconst isTransitioning = ref(false);\r\n\r\nconst nextAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\nconst prevAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\n/** Activate element, alter animation name based on the index. */\r\nfunction activate(oldIndex: number): void {\r\n    transitionName.value =\r\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"activate\");\r\n}\r\n\r\n/** Deactivate element, alter animation name based on the index. */\r\nfunction deactivate(newIndex: number): void {\r\n    transitionName.value =\r\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"deactivate\");\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\r\n</script>\r\n\r\n<template>\r\n    <Transition\r\n        :css=\"parent.animated\"\r\n        :name=\"transitionName\"\r\n        :appear=\"parent.animateInitially\"\r\n        @after-enter=\"afterEnter\"\r\n        @before-leave=\"beforeLeave\">\r\n        <div\r\n            v-show=\"isActive && visible\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"elementClasses\"\r\n            :data-id=\"`steps-${item.identifier}`\"\r\n            data-oruga=\"steps-item\"\r\n            :tabindex=\"isActive ? 0 : -1\"\r\n            :role=\"ariaRole\"\r\n            aria-roledescription=\"item\">\r\n            <!-- \r\n                @slot Step item content\r\n            -->\r\n            <slot />\r\n        </div>\r\n    </Transition>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Steps from \"./Steps.vue\";\r\nimport StepItem from \"./StepItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export steps specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export steps plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Steps);\r\n        registerComponent(app, StepItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export steps components */\r\nexport { Steps as OSteps, StepItem as OStepItem };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Switch between two opposing states\r\n * @displayName Switch\r\n * @style _switch.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSwitch\",\r\n    configField: \"switch\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.variant\"),\r\n    },\r\n    /**\r\n     * Color of the switch when is passive\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    passiveVariant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.passiveVariant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"switch.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Name attribute on native checkbox */\r\n    name: { type: String, default: undefined },\r\n    /** Overrides the returned value when it's checked */\r\n    trueValue: { type: [String, Number, Boolean], default: true },\r\n    /** Overrides the returned value when it's not checked */\r\n    falseValue: { type: [String, Number, Boolean], default: false },\r\n    /** Rounded style */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Label position */\r\n    position: { type: String, default: \"right\" },\r\n    /** Accessibility label to establish relationship between the switch and control label' */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when switch is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check */\r\n    switchClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check when checked */\r\n    switchCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the inner switch check */\r\n    switchCheckClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch passive variant */\r\n    passiveVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of switch label position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Root class of the native input checkbox */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number | boolean): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number | boolean, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\r\n    passive: true,\r\n});\r\n\r\nconst isChecked = computed(\r\n    () =>\r\n        vmodel.value === props.trueValue ||\r\n        (Array.isArray(vmodel.value) &&\r\n            vmodel.value.includes(props.nativeValue)),\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-switch\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-switch--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"passiveVariantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.passiveVariant + \"-passive\"),\r\n        computed(() => !!props.passiveVariant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-switch__input\"],\r\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\r\n);\r\n\r\nconst switchClasses = defineClasses(\r\n    [\"switchClass\", \"o-switch__check\"],\r\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst switchCheckClasses = defineClasses(\r\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"switch\"\r\n        role=\"switch\"\r\n        :aria-checked=\"isChecked\"\r\n        @click=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            data-oruga-input=\"switch\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :true-value=\"trueValue\"\r\n            :false-value=\"falseValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span :class=\"switchClasses\">\r\n            <span :class=\"switchCheckClasses\"></span>\r\n        </span>\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Override the label, default is label prop \r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Switch from \"./Switch.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export switch plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Switch);\r\n    },\r\n} as Plugin;\r\n\r\n/** export switch components */\r\nexport { Switch as OSwitch };\r\n","import type { DefineComponent, PropType } from \"vue\";\r\nimport { defineComponent, h } from \"vue\";\r\nimport type { DynamicComponent } from \"@/types\";\r\n\r\n/** This components renders a specific slot and only the slot of another component */\r\nexport default defineComponent({\r\n    name: \"OSlotComponent\",\r\n    props: {\r\n        /** Component to be get the slot from */\r\n        component: { type: Object, required: true },\r\n        /** Slot name */\r\n        name: { type: String, default: \"default\" },\r\n        /** Props passed to the slot */\r\n        props: { type: Object, default: () => {} },\r\n        /** Tag name of the slot wrapper element */\r\n        tag: {\r\n            type: [String, Object, Function] as PropType<DynamicComponent>,\r\n            default: \"div\" as DynamicComponent,\r\n        },\r\n    },\r\n    render() {\r\n        const slot = (this.component as DefineComponent).$slots[this.name]\r\n            ? (this.component as DefineComponent).$slots[this.name](this.props)\r\n            : {};\r\n\r\n        return h(this.tag, {}, slot);\r\n    },\r\n});\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, ref, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OField from \"../field/Field.vue\";\r\n\r\nimport { getValueByPath } from \"@/utils/helpers\";\r\n\r\nimport type { TableColumn } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTableMobileSort\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    currentSortColumn: {\r\n        type: Object as PropType<TableColumn>,\r\n        default: undefined,\r\n    },\r\n    columns: {\r\n        type: Array as PropType<TableColumn[]>,\r\n        default: undefined,\r\n    },\r\n    placeholder: { type: String, default: undefined },\r\n    iconPack: { type: String, default: undefined },\r\n    sortIcon: { type: String, default: \"arrow-up\" },\r\n    sortIconSize: { type: String, default: \"small\" },\r\n    isAsc: { type: Boolean, default: false },\r\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"sort\", column: TableColumn, event: Event);\r\n}>();\r\n\r\nconst mobileSort = ref<string>(\r\n    getValueByPath(props.currentSortColumn, \"identifier\"),\r\n);\r\n\r\nconst showPlaceholder = computed(\r\n    () =>\r\n        !props.columns ||\r\n        !props.columns.some(\r\n            (column) =>\r\n                getValueByPath(column, \"identifier\") === mobileSort.value,\r\n        ),\r\n);\r\n\r\nconst sortableColumns = computed(() =>\r\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\r\n);\r\n\r\nconst isCurrentSort = computed(\r\n    () =>\r\n        getValueByPath(props.currentSortColumn, \"identifier\") ===\r\n        mobileSort.value,\r\n);\r\n\r\nwatch(mobileSort, (value) => {\r\n    if (props.currentSortColumn.identifier === value) return;\r\n    sort();\r\n});\r\n\r\nwatch(\r\n    () => props.currentSortColumn,\r\n    (column) => {\r\n        mobileSort.value = getValueByPath(column, \"identifier\");\r\n    },\r\n);\r\n\r\nfunction sort(event?: Event): void {\r\n    const column = sortableColumns.value.filter(\r\n        (c) => getValueByPath(c, \"identifier\") === mobileSort.value,\r\n    )[0];\r\n    emits(\"sort\", column, event);\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"mobileSortClasses\">\r\n        <o-field>\r\n            <o-select v-model=\"mobileSort\" expanded>\r\n                <template v-if=\"placeholder\">\r\n                    <option\r\n                        v-show=\"showPlaceholder\"\r\n                        :value=\"{}\"\r\n                        selected\r\n                        disabled\r\n                        hidden>\r\n                        {{ placeholder }}\r\n                    </option>\r\n                </template>\r\n                <option\r\n                    v-for=\"(column, index) in sortableColumns\"\r\n                    :key=\"index\"\r\n                    :value=\"column.identifier\">\r\n                    {{ column.label }}\r\n                </option>\r\n            </o-select>\r\n            <o-button @click=\"sort($event)\">\r\n                <o-icon\r\n                    v-show=\"isCurrentSort\"\r\n                    :icon=\"sortIcon\"\r\n                    :pack=\"iconPack\"\r\n                    :size=\"sortIconSize\"\r\n                    both\r\n                    :rotation=\"!isAsc ? 180 : 0\" />\r\n            </o-button>\r\n        </o-field>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { toRaw, computed, getCurrentInstance, type PropType } from \"vue\";\r\n\r\nimport { useProviderChild } from \"@/composables\";\r\nimport { toCssDimension } from \"@/utils/helpers\";\r\n\r\nimport type { TableColumnComponent } from \"./types\";\r\n\r\n/**\r\n * @displayName Table Column\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTableColumn\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Define the column label */\r\n    label: { type: String, default: undefined },\r\n    /** Define an object property key if data is an object */\r\n    field: { type: String, default: undefined },\r\n    /** Define a column sub heading  */\r\n    subheading: { type: String, default: undefined },\r\n    /** Add addtional meta information for the column for custom purpose*/\r\n    meta: {\r\n        type: [String, Number, Boolean, Function, Object, Array],\r\n        default: undefined,\r\n    },\r\n    /** Column fixed width */\r\n    width: { type: [Number, String], default: undefined },\r\n    /** Define column value as number */\r\n    numeric: { type: Boolean, default: false },\r\n    /**\r\n     * Position of the column content\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\r\n    },\r\n    /** Enable an additional searchbar below the column header */\r\n    searchable: { type: Boolean, default: false },\r\n    /** Enable column sortability */\r\n    sortable: { type: Boolean, default: false },\r\n    /** Define whether the column is visible or not */\r\n    visible: { type: Boolean, default: true },\r\n    /** Define a custom sort function */\r\n    customSort: {\r\n        type: Function as PropType<\r\n            (a: unknown, b: unknown, isAsc: boolean) => number\r\n        >,\r\n        default: undefined,\r\n    },\r\n    /** Define a custom funtion for the filter search */\r\n    customSearch: {\r\n        type: Function as PropType<(row: unknown, filter: string) => boolean>,\r\n        default: undefined,\r\n    },\r\n    /** Whether the column is sticky or not */\r\n    sticky: { type: Boolean, default: false },\r\n    /** Make header selectable */\r\n    headerSelectable: { type: Boolean, default: false },\r\n    /**\r\n     * Adds native attributes to th\r\n     * @deprecated will be moved to table component in v0.9\r\n     */\r\n    thAttrs: {\r\n        type: Function as PropType<(column: typeof props) => object>,\r\n        default: () => ({}),\r\n    },\r\n    /**\r\n     * Adds native attributes to td\r\n     * @deprecated will be moved to table component in v0.9\r\n     */\r\n    tdAttrs: {\r\n        type: Function as PropType<\r\n            (row: unknown, column: typeof props) => object\r\n        >,\r\n        default: () => ({}),\r\n    },\r\n});\r\n\r\nconst style = computed(() => ({\r\n    width: toCssDimension(props.width),\r\n}));\r\n\r\nconst isHeaderUnselectable = computed(\r\n    () => !props.headerSelectable && props.sortable,\r\n);\r\n\r\nconst vm = getCurrentInstance();\r\n\r\nconst providedData = computed<TableColumnComponent>(() => ({\r\n    ...toRaw(props), // TODO: remove toRaw when tdAttrs/thAttrs are moved to table component\r\n    label: props.label,\r\n    field: props.field,\r\n    subheading: props.subheading,\r\n    meta: props.meta,\r\n    width: props.width,\r\n    numeric: props.numeric,\r\n    position: props.position,\r\n    searchable: props.searchable,\r\n    sortable: props.sortable,\r\n    visible: props.visible,\r\n    customSort: props.customSort,\r\n    customSearch: props.customSearch,\r\n    sticky: props.sticky,\r\n    headerSelectable: props.headerSelectable,\r\n    $el: vm.proxy,\r\n    $slots: vm.slots,\r\n    style: style.value,\r\n    isHeaderUnselectable: isHeaderUnselectable.value,\r\n}));\r\n\r\nconst { item } = useProviderChild({ data: providedData });\r\n</script>\r\n\r\n<template>\r\n    <span :data-id=\"item.identifier\" data-oruga=\"table-column\">\r\n        {{ label }}\r\n\r\n        <!--\r\n            Do not render these slots here.\r\n            These are only for documentation purposes.\r\n            Slots are defined in table component.\r\n        -->\r\n        <template v-if=\"false\">\r\n            <!--\r\n                @slot Default Slot\r\n                @binding {unknown} row - row data \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - row index \r\n                @binding {number} colindex - column index \r\n                @binding {(row): void} toggle-details - toggle details function \r\n            -->\r\n            <slot\r\n                :row=\"null\"\r\n                :column=\"null\"\r\n                :index=\"null\"\r\n                :colindex=\"null\"\r\n                :toggle-details=\"null\" />\r\n            <!--\r\n                @slot Override header label \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n            -->\r\n            <slot name=\"header\" :column=\"null\" :index=\"null\" />\r\n            <!--\r\n                @slot Override subheading label \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n            -->\r\n            <slot name=\"subheading\" :column=\"null\" :index=\"null\" />\r\n\r\n            <!--\r\n                @slot Override searchable input \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n                @binding {Record<string,string>} filters - active filters object\r\n            -->\r\n            <slot\r\n                name=\"searchable\"\r\n                :column=\"null\"\r\n                :index=\"null\"\r\n                :filters=\"null\" />\r\n        </template>\r\n    </span>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\nimport OPagination from \"../pagination/Pagination.vue\";\r\n\r\nimport { usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTablePagination\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    current: { type: Number, default: undefined },\r\n    paginated: { type: Boolean, default: false },\r\n    rootClass: {\r\n        type: [String, Array, Object] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * current prop two-way binding\r\n     * @param value {number} updated current prop\r\n     */\r\n    (e: \"update:current\", value: number): void;\r\n    /**\r\n     * on current change event\r\n     * @param value {number} current value\r\n     */\r\n    (e: \"change\", event: number): void;\r\n}>();\r\n\r\nconst currentPage = usePropBinding(\"current\", props, emits);\r\n\r\n/** Paginator change listener. */\r\nfunction pageChanged(page: number): void {\r\n    const newPage = page > 0 ? page : 1;\r\n    currentPage.value = newPage;\r\n    emits(\"change\", newPage);\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClass\">\r\n        <div>\r\n            <slot />\r\n        </div>\r\n        <div>\r\n            <o-pagination\r\n                v-if=\"paginated\"\r\n                v-bind=\"$attrs\"\r\n                :current=\"currentPage\"\r\n                @change=\"pageChanged\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    watch,\r\n    onMounted,\r\n    nextTick,\r\n    useSlots,\r\n    toValue,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OCheckbox from \"../checkbox/Checkbox.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\nimport OLoading from \"../loading/Loading.vue\";\r\nimport OSlotComponent from \"../utils/SlotComponent\";\r\n\r\nimport OTableMobileSort from \"./TableMobileSort.vue\";\r\nimport OTableColumn from \"./TableColumn.vue\";\r\nimport OTablePagination from \"./TablePagination.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    getValueByPath,\r\n    indexOf,\r\n    toCssDimension,\r\n    escapeRegExpChars,\r\n    removeDiacriticsFromString,\r\n    uuid,\r\n} from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useProviderParent,\r\n    usePropBinding,\r\n    useMatchMedia,\r\n    useDebounce,\r\n    getActiveClasses,\r\n} from \"@/composables\";\r\n\r\nimport type { Column, TableColumn, TableColumnComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Tabulated data are sometimes needed, it's even better when it's responsive\r\n * @displayName Table\r\n * @requires ./TableColumn.vue\r\n * @style _table.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTable\",\r\n    configField: \"table\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Table data */\r\n    data: { type: Array as PropType<unknown[]>, default: () => [] },\r\n    /** Table columns */\r\n    columns: { type: Array as PropType<Column[]>, default: () => [] },\r\n    /** Border to all cells */\r\n    bordered: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.bordered\", false),\r\n    },\r\n    /** Whether table is striped */\r\n    striped: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.striped\", false),\r\n    },\r\n    /** Makes the cells narrower */\r\n    narrowed: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.narrowed\", false),\r\n    },\r\n    /** Rows are highlighted when hovering */\r\n    hoverable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.hoverable\", false),\r\n    },\r\n    /** Enable loading state */\r\n    loading: { type: Boolean, default: false },\r\n    /** Allow row details  */\r\n    detailed: { type: Boolean, default: false },\r\n    /** Rows can be checked (multiple) */\r\n    checkable: { type: Boolean, default: false },\r\n    /** Show check/uncheck all checkbox in table header when checkable */\r\n    headerCheckable: { type: Boolean, default: true },\r\n    /**\r\n     * Position of the checkbox when checkable\r\n     * @values left, right\r\n     */\r\n    checkboxPosition: {\r\n        type: String,\r\n        default: () => getOption(\"table.checkboxPosition\", \"left\"),\r\n        validator: (value: string) => [\"left\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Color of the checkbox when checkable\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    checkboxVariant: {\r\n        type: String,\r\n        default: () => getOption(\"table.checkboxVariant\"),\r\n    },\r\n    /** Set which row is selected, use v-model:selected to make it two-way binding */\r\n    selected: { type: Object, default: undefined },\r\n    /** Custom method to verify if a row is selectable, works when is selected. */\r\n    isRowSelectable: { type: Function, default: () => true },\r\n    /** Table can be focused and user can navigate with keyboard arrows (require selected) and rows are highlighted when hovering */\r\n    focusable: { type: Boolean, default: false },\r\n    /** Custom method to verify if row is checked, works when is checkable. Useful for backend pagination */\r\n    customIsChecked: {\r\n        type: Function as PropType<(row: unknown, data: unknown[]) => boolean>,\r\n        default: undefined,\r\n    },\r\n    /** Custom method to verify if a row is checkable, works when is checkable */\r\n    isRowCheckable: {\r\n        type: Function as PropType<(row: unknown) => boolean>,\r\n        default: (row: unknown) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.isRowCheckable\", (row) => true)(row),\r\n    },\r\n    /** Set which rows are checked, use v-model:checkedRows to make it two-way binding */\r\n    checkedRows: { type: Array, default: () => [] },\r\n    /** Rows appears as cards on mobile (collapse rows) */\r\n    mobileCards: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.mobileCards\", true),\r\n    },\r\n    /** Sets the default sort column and order — e.g. ['first_name', 'desc'] */\r\n    defaultSort: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"table.defaultSort\"),\r\n    },\r\n    /**\r\n     * Sets the default sort column direction on the first click\r\n     * @values asc, desc\r\n     */\r\n    defaultSortDirection: {\r\n        type: String,\r\n        default: () => getOption(\"table.defaultSortDirection\", \"asc\"),\r\n    },\r\n    /** Sets the header sorting icon */\r\n    sortIcon: {\r\n        type: String,\r\n        default: () => getOption(\"table.sortIcon\", \"arrow-up\"),\r\n    },\r\n    /**\r\n     * Sets the size of the sorting icon\r\n     * @values small, medium, large\r\n     */\r\n    sortIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"table.sortIconSize\", \"small\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"table.iconPack\"),\r\n    },\r\n    /** Columns won't be sorted with Javascript, use with sort event to sort in your backend */\r\n    backendSorting: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.backendSorting\", false),\r\n    },\r\n    /** Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend */\r\n    backendFiltering: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.backendFiltering\", false),\r\n    },\r\n    /** Add a class to row based on the return */\r\n    rowClass: {\r\n        type: Function as PropType<(row: unknown, index: number) => string>,\r\n        default: (row: unknown, index: number) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.rowClass\", (row, index) => \"\")(row, index),\r\n    },\r\n    /** Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop) */\r\n    openedDetailed: { type: Array, default: () => [] },\r\n    /** Controls the visibility of the trigger that toggles the detailed rows. */\r\n    hasDetailedVisible: {\r\n        type: Function as PropType<(row: unknown) => boolean>,\r\n        default: (row: unknown) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.hasDetailedVisible\", (row) => true)(row),\r\n    },\r\n    /** Use a unique key of your data Object when use detailed or opened detailed. (id recommended) */\r\n    detailKey: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailKey\"),\r\n    },\r\n    /** Allow chevron icon and column to be visible */\r\n    showDetailIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.showDetailIcon\", true),\r\n    },\r\n    /** Icon name of detail action */\r\n    detailIcon: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailIcon\", \"chevron-right\"),\r\n    },\r\n    /** Custom style on details */\r\n    customDetailRow: { type: Boolean, default: false },\r\n    /* Transition name to use when toggling row details. */\r\n    detailTransition: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailTransition\", \"slide\"),\r\n    },\r\n    /** Text when nothing is selected */\r\n    mobileSortPlaceholder: {\r\n        type: String,\r\n        default: () => getOption(\"table.mobileSortPlaceholder\"),\r\n    },\r\n    /** Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended) */\r\n    customRowKey: {\r\n        type: String,\r\n        default: () => getOption(\"table.customRowKey\"),\r\n    },\r\n    /** Allows rows to be draggable */\r\n    draggable: { type: Boolean, default: false },\r\n    /** Allows columns to be draggable */\r\n    draggableColumn: { type: Boolean, default: false },\r\n    /** Add a horizontal scrollbar when table is too wide */\r\n    scrollable: { type: Boolean, default: undefined },\r\n    /** Show a sticky table header */\r\n    stickyHeader: { type: Boolean, default: false },\r\n    /** Table fixed height */\r\n    height: { type: [Number, String], default: undefined },\r\n    /** Add a native event to filter */\r\n    filtersEvent: { type: String, default: \"\" },\r\n    /** Filtering debounce time (in milliseconds) */\r\n    debounceSearch: { type: Number, default: undefined },\r\n    /** Show header */\r\n    showHeader: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.showHeader\", true),\r\n    },\r\n    /** Make the checkbox column sticky when checkable */\r\n    stickyCheckbox: { type: Boolean, default: false },\r\n    /** Adds pagination to the table */\r\n    paginated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginated\", false),\r\n    },\r\n    /** Rows won't be paginated with Javascript, use with page-change event to paginate in your backend */\r\n    backendPagination: { type: Boolean, default: false },\r\n    /** Total number of table data if backend-pagination is enabled */\r\n    total: { type: Number, default: 0 },\r\n    /** Current page of table data (if paginated), use v-model:currentPage to make it two-way binding */\r\n    currentPage: { type: Number, default: 1 },\r\n    /** How many rows per page (if paginated) */\r\n    perPage: {\r\n        type: [Number, String],\r\n        default: () => getOption(\"table.perPage\", 20),\r\n    },\r\n    /**\r\n     * Pagination position (if paginated)\r\n     * @values bottom, top, both\r\n     */\r\n    paginationPosition: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationPosition\", \"bottom\"),\r\n        validator: (value: string) =>\r\n            [\"bottom\", \"top\", \"both\"].indexOf(value) >= 0,\r\n    },\r\n    /** Rounded pagination if paginated */\r\n    paginationRounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginationRounded\", false),\r\n    },\r\n    /** Size of pagination if paginated */\r\n    paginationSize: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationSize\", \"small\"),\r\n    },\r\n    /** Enable simple style pagination if paginated */\r\n    paginationSimple: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginationSimple\", false),\r\n    },\r\n    /**\r\n     * Pagination buttons order if paginated\r\n     * @values centered, right, left\r\n     */\r\n    paginationOrder: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationOrder\"),\r\n        validator: (value: string) =>\r\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"table.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility label for the pagination next page button. */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaNextLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination previous page button. */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaPreviousLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination page button. */\r\n    ariaPageLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaPageLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination current page button. */\r\n    ariaCurrentLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaCurrentLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table */\r\n    tableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when it is empty */\r\n    emptyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row detail */\r\n    detailedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when is bordered */\r\n    borderedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when rows are striped */\r\n    stripedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when rows are narrowed */\r\n    narrowedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when is hoverable */\r\n    hoverableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper when header is sticky */\r\n    stickyHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper when its content is scrollable */\r\n    scrollableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row when selected */\r\n    trSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row when checkable and checked */\r\n    trCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element */\r\n    thClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when component is positioned */\r\n    thPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when component is sticky\" */\r\n    thStickyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when is checkable */\r\n    thCheckboxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element currently sorted */\r\n    thCurrentSortClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sortable Table `th` element */\r\n    thSortableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element that is unsortable */\r\n    thUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table sort icon in the header */\r\n    thSortIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element of the detail column of triggers */\r\n    thDetailedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` subheading element */\r\n    thSubheadingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element */\r\n    tdClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when component is positioned */\r\n    tdPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when component is sticky */\r\n    tdStickyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when is checkable */\r\n    tdCheckboxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element that contains the chevron to trigger details */\r\n    tdDetailedChevronClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sortable form wrapper on mobile */\r\n    mobileSortClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table pagination wrapper */\r\n    paginationWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * currentPage prop two-way binding\r\n     * @param value {number} updated currentPage prop\r\n     */\r\n    (e: \"update:currentPage\", value: number): void;\r\n    /**\r\n     * on pagination page change event\r\n     * @param page {number} updated page\r\n     */\r\n    (e: \"page-change\", page: number): void;\r\n    /**\r\n     * select prop two-way binding\r\n     * @param value {typeof data} updated select prop\r\n     */\r\n    (e: \"update:selected\", value: unknown): void;\r\n    /**\r\n     * on row select event\r\n     * @param newRow {typeof data} new select value\r\n     * @param oldRow {typeof data} old select value\r\n     */\r\n    (e: \"select\", newrow: unknown, oldrow: unknown): void;\r\n    /**\r\n     * on row checked event\r\n     * @param value {Array<typeof data>} all checked rows\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"check\", value: Array<unknown>, row?: unknown): void;\r\n    /**\r\n     * on all rows checked event\r\n     * @param value {Array<typeof data>} all checked rows\r\n     */\r\n    (e: \"check-all\", value: Array<unknown>): void;\r\n    /**\r\n     * checkedRows prop two-way binding\r\n     * @param value {Array<typeof data>} updated checkedRows prop\r\n     */\r\n    (e: \"update:checkedRows\", value: Array<unknown>): void;\r\n    /**\r\n     * on column sort change event\r\n     * @param column {Column} column data\r\n     * @param direction {string}  'asc' or 'desc'\r\n     *\r\n     * @param event {Event} native  event\r\n     */\r\n    (e: \"sort\", column: Column, direction: \"asc\" | \"desc\", event: Event): void;\r\n    /**\r\n     * on filter change event\r\n     * @param filters {Record<string, string>} filter object\r\n     */\r\n    (e: \"filters-change\", value: Record<string, string>): void;\r\n    /**\r\n     * on natvie filter event based on props filtersEvent\r\n     * @param filtersEvent {string} props filtersEvent value\r\n     * @param filters {Record<string, string>} filter object\r\n     * @param event {Event} native  event\r\n     */\r\n    (\r\n        e: \"filters-event\",\r\n        filtersEvent: string,\r\n        filters: Record<string, string>,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * openedDetailed prop two-way binding\r\n     * @param value {Array<typeof data>} updated openedDetailed prop\r\n     */\r\n    (e: \"update:openedDetailed\", value: Array<unknown>): void;\r\n    /**\r\n     * on details open event\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"details-open\", row: unknown): void;\r\n    /**\r\n     * on details close event\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"details-close\", row: unknown): void;\r\n    /**\r\n     * on row click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native click event\r\n     */\r\n    (e: \"click\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row double click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native click event\r\n     */\r\n    (e: \"dblclick\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row right click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native contextmenu event\r\n     */\r\n    (e: \"contextmenu\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row mouseenter event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native mouseenter event\r\n     */\r\n    (e: \"mouseenter\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row mouseleave event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native mouseleave event\r\n     */\r\n    (e: \"mouseleave\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on cell click event\r\n     * @param row {typeof data} row data\r\n     * @param column {Column} column data\r\n     * @param index {number} row index\r\n     * @param colindex {number} column index\r\n     * @param event {Event} native click event\r\n     */\r\n    (\r\n        e: \"cell-click\",\r\n        row: unknown,\r\n        column: Column,\r\n        index: number,\r\n        colindex: number,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * on row dragstart event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragstart event\r\n     */\r\n    (e: \"dragstart\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row dragend event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragend event\r\n     */\r\n    (e: \"dragend\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row drop event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native drop event\r\n     */\r\n    (e: \"drop\", row: unknown, index: number, event: DragEvent): void;\r\n\r\n    /**\r\n     * on row dragleave event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragleave event\r\n     */\r\n    (e: \"dragleave\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row dragover event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragover event\r\n     */\r\n    (e: \"dragover\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndragstart event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragstart event\r\n     */\r\n    (\r\n        e: \"columndragstart\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n    /**\r\n     * on column columndragend event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragend event\r\n     */\r\n    (e: \"columndragend\", column: Column, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndrop event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndrop event\r\n     */\r\n    (e: \"columndrop\", column: Column, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndragleave event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragleave event\r\n     */\r\n    (\r\n        e: \"columndragleave\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n    /**\r\n     * on column columndragover event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragover event\r\n     */\r\n    (\r\n        e: \"columndragover\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\r\n\r\nconst rootRef = ref<HTMLElement>();\r\nconst slotRef = ref<HTMLElement>();\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst provider = useProviderParent<TableColumnComponent>(slotRef);\r\n\r\nconst tableColumns = computed<TableColumn[]>(() =>\r\n    provider.sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n        thAttrsData: {},\r\n        tdAttrsData: [],\r\n    })),\r\n);\r\n\r\nconst tableData = computed(() => {\r\n    if (!props.data?.length) return [...props.data];\r\n    // if no customRowKey is given and data are objects, create unique row id for each row\r\n    return props.data.map((row) =>\r\n        !props.customRowKey && typeof row === \"object\"\r\n            ? Object.assign({ __rowKey: uuid() }, row)\r\n            : row,\r\n    );\r\n});\r\n\r\nconst tableRows = ref(tableData.value);\r\nconst dataTotal = ref(\r\n    props.backendPagination ? props.total : tableData.value.length,\r\n);\r\n\r\nconst tableCurrentPage = usePropBinding<number>(\"currentPage\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\n/**\r\n * When table rows data change:\r\n *   1. Update internal value.\r\n *   2. Filter data if it's not backend-filtered.\r\n *   3. Sort again if it's not backend-sorted.\r\n *   4. Set new total if it's not backend-paginated.\r\n */\r\nwatch(\r\n    () => tableData.value,\r\n    (value) => {\r\n        // if not backend filtered, filter rows\r\n        if (!props.backendFiltering)\r\n            tableRows.value = value.filter((row) => isRowFiltered(row));\r\n        else tableRows.value = [...value];\r\n        // if not backend sorted, sort rows\r\n        if (!props.backendSorting) sort(currentSortColumn.value, true);\r\n        // if not backend paginated, set pagination total\r\n        if (!props.backendPagination) dataTotal.value = tableRows.value.length;\r\n    },\r\n    { deep: true },\r\n);\r\n\r\n/**\r\n * When Pagination total change, update internal total\r\n * only if it's backend-paginated.\r\n */\r\nwatch(\r\n    () => props.total,\r\n    (newTotal) => {\r\n        if (!props.backendPagination) return;\r\n        dataTotal.value = newTotal;\r\n    },\r\n);\r\n\r\nconst tableWrapperStyle = computed(() => ({\r\n    height: toCssDimension(props.height),\r\n}));\r\n\r\n/** Splitted data based on the pagination. */\r\nconst visibleRows = computed(() => {\r\n    if (!props.paginated) return tableRows.value;\r\n\r\n    const currentPage = tableCurrentPage.value;\r\n    const perPage = Number(props.perPage);\r\n\r\n    if (tableRows.value.length <= perPage) {\r\n        return tableRows.value;\r\n    } else {\r\n        const start = (currentPage - 1) * perPage;\r\n        const end = start + perPage;\r\n        return tableRows.value.slice(start, end);\r\n    }\r\n});\r\n\r\nconst visibleColumns = computed(() => {\r\n    if (!tableColumns.value) return [];\r\n    return tableColumns.value.filter(\r\n        (column) => column.visible || column.visible === undefined,\r\n    );\r\n});\r\n\r\n/** process thAttrs & tdAttrs when row or columns got changed */\r\nwatch([visibleRows, visibleColumns], () => {\r\n    if (visibleColumns.value.length && visibleRows.value.length) {\r\n        for (let i = 0; i < visibleColumns.value.length; i++) {\r\n            const col = visibleColumns.value[i];\r\n            col.thAttrsData =\r\n                typeof col.thAttrs === \"function\" ? col.thAttrs(col) : {};\r\n            col.tdAttrsData = visibleRows.value.map((data) =>\r\n                typeof col.tdAttrs === \"function\" ? col.tdAttrs(data, col) : {},\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\n/** Return total column count based if it's checkable or expanded */\r\nconst columnCount = computed(() => {\r\n    let count = visibleColumns.value.length;\r\n    count += props.checkable ? 1 : 0;\r\n    count += props.detailed && props.showDetailIcon ? 1 : 0;\r\n    return count;\r\n});\r\n\r\n/** Check if has any searchable column. */\r\nconst hasSearchablenewColumns = computed(() =>\r\n    tableColumns.value.some((column) => column.searchable),\r\n);\r\n\r\n/** return if scrollable table */\r\nconst isScrollable = computed(() => {\r\n    if (props.scrollable) return true;\r\n    if (!tableColumns.value) return false;\r\n    return tableColumns.value.some((column) => column.sticky);\r\n});\r\n\r\nconst slots = useSlots();\r\n\r\nconst hasCustomSubheadings = computed(() => {\r\n    if (slots.subheading) return true;\r\n    return tableColumns.value.some((column) => !!column.subheading);\r\n});\r\n\r\n/** Check if footer slot has custom content. */\r\nfunction hasCustomFooterSlot(): boolean {\r\n    if (slots.footer) {\r\n        // [Vue warn]: Slot \"footer\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\r\n        const footer = slots.footer();\r\n        if (footer.length > 1) return true;\r\n\r\n        const tag = footer[0][\"tag\"];\r\n        if (tag !== \"th\" && tag !== \"td\") return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/** Table arrow keys listener, change selection. */\r\nfunction onArrowPressed(pos: number, event: KeyboardEvent): void {\r\n    if (!visibleRows.value.length) return;\r\n\r\n    let index = visibleRows.value.indexOf(props.selected) + pos;\r\n\r\n    // Prevent from going up from first and down from last\r\n    index =\r\n        index < 0\r\n            ? 0\r\n            : index > visibleRows.value.length - 1\r\n              ? visibleRows.value.length - 1\r\n              : index;\r\n\r\n    const row = visibleRows.value[index];\r\n\r\n    if (!props.isRowSelectable(row)) {\r\n        let newIndex = null;\r\n        if (pos > 0) {\r\n            for (\r\n                let i = index;\r\n                i < visibleRows.value.length && newIndex === null;\r\n                i++\r\n            ) {\r\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\r\n            }\r\n        } else {\r\n            for (let i = index; i >= 0 && newIndex === null; i--) {\r\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\r\n            }\r\n        }\r\n        if (newIndex >= 0) {\r\n            selectRow(visibleRows.value[newIndex], index, event);\r\n        }\r\n    } else {\r\n        selectRow(row, index, event);\r\n    }\r\n}\r\n\r\n/**\r\n * Row click listener.\r\n * Emit all necessary events.\r\n */\r\nfunction selectRow(row: unknown, index: number, event: Event): void {\r\n    emits(\"click\", row, index, event);\r\n\r\n    if (props.selected === row) return;\r\n    if (!props.isRowSelectable(row)) return;\r\n\r\n    // emit new and old row\r\n    emits(\"select\", row, props.selected);\r\n\r\n    // emit new row to update user variable\r\n    emits(\"update:selected\", row);\r\n}\r\n\r\nfunction isRowSelected(row: unknown, selectedRow: unknown): boolean {\r\n    return selectedRow ? getRowKey(row) === getRowKey(selectedRow) : false;\r\n}\r\n\r\nfunction getRowKey(row: unknown): unknown {\r\n    if (props.customRowKey) return row[props.customRowKey];\r\n    if (typeof row === \"object\") return row[\"__rowKey\"];\r\n    return row;\r\n}\r\n\r\n// --- Filter Feature ---\r\n\r\nconst filters = ref<Record<string, string>>({});\r\n\r\nwatch(\r\n    filters.value,\r\n    (value) => {\r\n        if (props.debounceSearch)\r\n            useDebounce(() => handleFiltersChange(value), props.debounceSearch);\r\n        else handleFiltersChange(value);\r\n    },\r\n    { deep: true },\r\n);\r\n\r\nfunction onFiltersEvent(event: Event): void {\r\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\r\n}\r\n\r\nfunction handleFiltersChange(value: Record<string, string>): void {\r\n    if (props.backendFiltering) {\r\n        emits(\"filters-change\", value);\r\n    } else {\r\n        tableRows.value = props.data.filter((row) => isRowFiltered(row));\r\n        if (!props.backendPagination) {\r\n            dataTotal.value = tableRows.value.length;\r\n        }\r\n        if (!props.backendSorting) {\r\n            if (Object.keys(currentSortColumn.value).length > 0) {\r\n                doSortSingleColumn(currentSortColumn.value);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isRowFiltered(row: unknown): boolean {\r\n    for (const key in filters.value) {\r\n        if (!filters.value[key]) continue;\r\n        const input = filters.value[key];\r\n        const column = tableColumns.value.filter((c) => c.field === key)[0];\r\n        if (typeof column?.customSearch === \"function\") {\r\n            if (!column.customSearch(row, input)) return false;\r\n        } else {\r\n            const value = getValueByPath(row, key);\r\n            if (value == null) return false;\r\n            if (Number.isInteger(value)) {\r\n                if (value !== Number(input)) return false;\r\n            } else {\r\n                const re = new RegExp(escapeRegExpChars(input), \"i\");\r\n                if (Array.isArray(value)) {\r\n                    const valid = value.some(\r\n                        (val) =>\r\n                            re.test(removeDiacriticsFromString(val)) ||\r\n                            re.test(val),\r\n                    );\r\n                    if (!valid) return false;\r\n                } else {\r\n                    if (\r\n                        !re.test(removeDiacriticsFromString(value)) &&\r\n                        !re.test(value)\r\n                    ) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// --- Sort Feature ---\r\n\r\nconst currentSortColumn = ref<TableColumn>();\r\nconst isAsc = ref(true);\r\n\r\nonMounted(() => nextTick(() => checkSort()));\r\n\r\n/** Check if has any sortable column. */\r\nconst hasSortablenewColumns = computed(() =>\r\n    tableColumns.value.some((column) => column.sortable),\r\n);\r\n\r\n/** Check if the column is the current sort column. */\r\nfunction isColumnSorted(column: TableColumn): boolean {\r\n    return currentSortColumn.value?.identifier === column.identifier;\r\n}\r\n\r\n/** Call initSort only first time (For example async data). */\r\nfunction checkSort(): void {\r\n    if (tableColumns.value.length && !currentSortColumn.value) {\r\n        // is first time sort\r\n        initSort();\r\n    } else if (tableColumns.value.length) {\r\n        if (\r\n            currentSortColumn.value &&\r\n            Object.keys(currentSortColumn.value).length > 0\r\n        ) {\r\n            for (let i = 0; i < tableColumns.value.length; i++) {\r\n                if (\r\n                    currentSortColumn.value.field ===\r\n                    tableColumns.value[i].field\r\n                ) {\r\n                    currentSortColumn.value = tableColumns.value[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** Initial sorted column based on the default-sort prop. */\r\nfunction initSort(): void {\r\n    if (!props.defaultSort) return;\r\n    let sortField = \"\";\r\n    let sortDirection = props.defaultSortDirection;\r\n    if (Array.isArray(props.defaultSort)) {\r\n        sortField = props.defaultSort[0];\r\n        if (props.defaultSort[1]) {\r\n            sortDirection = props.defaultSort[1];\r\n        }\r\n    } else {\r\n        sortField = props.defaultSort;\r\n    }\r\n    const sortColumn = tableColumns.value.filter(\r\n        (column) => column.field === sortField,\r\n    )[0];\r\n    if (sortColumn) {\r\n        isAsc.value = sortDirection.toLowerCase() !== \"desc\";\r\n        sort(sortColumn, true);\r\n    }\r\n}\r\n\r\n/**\r\n * Sort the column.\r\n * Toggle current direction on column if it's sortable\r\n * and not just updating the prop.\r\n */\r\nfunction sort(\r\n    column: TableColumn,\r\n    updateDirection = false,\r\n    event?: Event,\r\n): void {\r\n    if (!column || !column.sortable) return;\r\n\r\n    if (!updateDirection)\r\n        isAsc.value = isColumnSorted(column)\r\n            ? !isAsc.value\r\n            : props.defaultSortDirection.toLowerCase() !== \"desc\";\r\n\r\n    // if not first time sort\r\n    if (currentSortColumn.value)\r\n        emits(\"sort\", column, isAsc.value ? \"asc\" : \"desc\", event);\r\n\r\n    if (!props.backendSorting) doSortSingleColumn(column);\r\n\r\n    currentSortColumn.value = column;\r\n}\r\n\r\nfunction doSortSingleColumn(column: Column): void {\r\n    tableRows.value = sortBy(\r\n        tableRows.value,\r\n        column.field,\r\n        column.customSort,\r\n        isAsc.value,\r\n    );\r\n}\r\n\r\n/**\r\n * Sort an array by key without mutating original data.\r\n * Call the user sort function if it was passed.\r\n */\r\nfunction sortBy(\r\n    array: unknown[],\r\n    key: string,\r\n    fn: (a: unknown, b: unknown, asc: boolean) => number,\r\n    isAsc: boolean,\r\n): unknown[] {\r\n    let sorted = [];\r\n    // Sorting without mutating original data\r\n    if (fn && typeof fn === \"function\") {\r\n        sorted = [...array].sort((a, b) => fn(a, b, isAsc));\r\n    } else {\r\n        sorted = [...array].sort((a, b) => {\r\n            // Get nested values from objects\r\n            let newA = getValueByPath(a, key);\r\n            let newB = getValueByPath(b, key);\r\n\r\n            // sort boolean type\r\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\r\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\r\n            }\r\n\r\n            if (!newA && newA !== 0) return 1;\r\n            if (!newB && newB !== 0) return -1;\r\n            if (newA === newB) return 0;\r\n\r\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\r\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\r\n\r\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\r\n        });\r\n    }\r\n\r\n    return sorted;\r\n}\r\n\r\n// --- Checkable Feature ---\r\n\r\nconst newCheckedRows = ref([...props.checkedRows]);\r\nconst lastCheckedRowIndex = ref(null);\r\n\r\n/**\r\n * When checkedRows prop change, update internal value without\r\n * mutating original data.\r\n */\r\nwatch(\r\n    () => props.checkedRows,\r\n    (rows) => {\r\n        newCheckedRows.value = [...rows];\r\n    },\r\n    { deep: true },\r\n);\r\n\r\n/** Check if all rows in the page are checked. */\r\nconst isAllChecked = computed(() => {\r\n    const validVisibleData = visibleRows.value.filter((row) =>\r\n        props.isRowCheckable(row),\r\n    );\r\n    if (validVisibleData.length === 0) return false;\r\n    const isAllChecked = validVisibleData.some(\r\n        (currentVisibleRow) =>\r\n            indexOf(\r\n                newCheckedRows.value,\r\n                currentVisibleRow,\r\n                props.customIsChecked,\r\n            ) < 0,\r\n    );\r\n    return !isAllChecked;\r\n});\r\n\r\n/** Check if all rows in the page are checkable. */\r\nconst isAllUncheckable = computed(() => {\r\n    const validVisibleData = visibleRows.value.filter((row) =>\r\n        props.isRowCheckable(row),\r\n    );\r\n    return validVisibleData.length === 0;\r\n});\r\n\r\n/** Check if the row is checked (is added to the array). */\r\nfunction isRowChecked(row: unknown): boolean {\r\n    return indexOf(newCheckedRows.value, row, props.customIsChecked) >= 0;\r\n}\r\n\r\n/** Remove a checked row from the array. */\r\nfunction removeCheckedRow(row: unknown): void {\r\n    const index = indexOf(newCheckedRows.value, row, props.customIsChecked);\r\n    if (index >= 0) newCheckedRows.value.splice(index, 1);\r\n}\r\n\r\n/**\r\n * Header checkbox click listener.\r\n * Add or remove all rows in current page.\r\n */\r\nfunction checkAll(): void {\r\n    const allChecked = isAllChecked.value;\r\n    visibleRows.value.forEach((currentRow) => {\r\n        if (props.isRowCheckable(currentRow)) removeCheckedRow(currentRow);\r\n\r\n        if (!allChecked) {\r\n            if (props.isRowCheckable(currentRow))\r\n                newCheckedRows.value.push(currentRow);\r\n        }\r\n    });\r\n\r\n    emits(\"check\", newCheckedRows.value);\r\n    emits(\"check-all\", newCheckedRows.value);\r\n\r\n    // Emit checked rows to update user variable\r\n    emits(\"update:checkedRows\", newCheckedRows.value);\r\n}\r\n\r\n/** Row checkbox click listener. */\r\nfunction checkRow(row: unknown, index: number): void {\r\n    if (!props.isRowCheckable(row)) return;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const lastIndex = lastCheckedRowIndex.value;\r\n    lastCheckedRowIndex.value = index;\r\n\r\n    // if (event.shiftKey && lastIndex !== null && index !== lastIndex) {\r\n    //         shiftCheckRow(row, index, lastIndex);\r\n\r\n    if (!isRowChecked(row)) newCheckedRows.value.push(row);\r\n    else removeCheckedRow(row);\r\n\r\n    emits(\"check\", newCheckedRows.value, row);\r\n\r\n    // Emit checked rows to update user variable\r\n    emits(\"update:checkedRows\", newCheckedRows.value);\r\n}\r\n\r\n/** Check row when shift is pressed. */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nfunction shiftCheckRow(\r\n    row: unknown,\r\n    index: number,\r\n    lastCheckedRowIndex: number,\r\n): void {\r\n    // Get the subset of the list between the two indicies\r\n    const subset = visibleRows.value.slice(\r\n        Math.min(index, lastCheckedRowIndex),\r\n        Math.max(index, lastCheckedRowIndex) + 1,\r\n    );\r\n\r\n    // Determine the operation based on the state of the clicked checkbox\r\n    const shouldCheck = !isRowChecked(row);\r\n\r\n    subset.forEach((item) => {\r\n        removeCheckedRow(item);\r\n        if (shouldCheck && props.isRowCheckable(item))\r\n            newCheckedRows.value.push(item);\r\n    });\r\n}\r\n\r\n// --- Detail Row Feature ---\r\n\r\nconst visibleDetailRows = ref(props.openedDetailed);\r\n\r\n/**\r\n * return if detailed row tabled\r\n * will be with chevron column & icon or not\r\n */\r\nconst showDetailRowIcon = computed(\r\n    () => props.detailed && props.showDetailIcon,\r\n);\r\n\r\n/**\r\n * When the user wants to control the detailed rows via props.\r\n * Or wants to open the details of certain row with the router for example.\r\n */\r\nwatch(\r\n    () => props.openedDetailed,\r\n    (expandedRows) => {\r\n        visibleDetailRows.value = expandedRows;\r\n    },\r\n);\r\n\r\n/** Toggle to show/hide details slot */\r\nfunction toggleDetails(row: unknown): void {\r\n    const found = isVisibleDetailRow(row);\r\n\r\n    if (found) {\r\n        closeDetailRow(row);\r\n        emits(\"details-close\", row);\r\n    } else {\r\n        openDetailRow(row);\r\n        emits(\"details-open\", row);\r\n    }\r\n\r\n    // Syncs the detailed rows with the parent component\r\n    emits(\"update:openedDetailed\", visibleDetailRows.value);\r\n}\r\n\r\nfunction openDetailRow(row: unknown): void {\r\n    const index = handleDetailKey(row);\r\n    visibleDetailRows.value.push(index);\r\n}\r\n\r\nfunction closeDetailRow(row: unknown): void {\r\n    const index = handleDetailKey(row);\r\n    const i = visibleDetailRows.value.indexOf(index);\r\n    if (i >= 0) visibleDetailRows.value.splice(i, 1);\r\n}\r\n\r\nfunction isVisibleDetailRow(row: unknown): boolean {\r\n    const index = handleDetailKey(row);\r\n    return visibleDetailRows.value.indexOf(index) >= 0;\r\n}\r\n\r\nfunction isActiveDetailRow(row: unknown): boolean {\r\n    return props.detailed && !props.customDetailRow && isVisibleDetailRow(row);\r\n}\r\n\r\nfunction isActiveCustomDetailRow(row: unknown): boolean {\r\n    return props.detailed && props.customDetailRow && isVisibleDetailRow(row);\r\n}\r\n\r\n/**\r\n * When the detailKey is defined we use the object[detailKey] as index.\r\n * If not, use the object reference by default.\r\n */\r\nfunction handleDetailKey(row: unknown): string {\r\n    const key = props.detailKey;\r\n    return !key?.length || !row ? row : row[key];\r\n}\r\n\r\n// --- Drag&Drop Feature ---\r\n\r\nconst isDraggingRow = ref(false);\r\nconst isDraggingColumn = ref(false);\r\n\r\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\r\n\r\nconst canDragColumn = computed(\r\n    () => props.draggableColumn && !isDraggingRow.value,\r\n);\r\n\r\n/** Emits drag start event*/\r\nfunction handleDragStart(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragstart\", row, index, event);\r\n}\r\n\r\n/** Emits drag leave event */\r\nfunction handleDragEnd(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragend\", row, index, event);\r\n}\r\n\r\n/** Emits drop event */\r\nfunction handleDrop(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"drop\", row, index, event);\r\n}\r\n\r\n/** Emits drag over event */\r\nfunction handleDragOver(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragover\", row, index, event);\r\n}\r\n\r\n/** Emits drag leave event */\r\nfunction handleDragLeave(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragleave\", row, index, event);\r\n}\r\n\r\n/** Emits drag start event (column) */\r\nfunction handleColumnDragStart(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    isDraggingColumn.value = true;\r\n    emits(\"columndragstart\", column, index, event);\r\n}\r\n\r\n/** Emits drag leave event (column) */\r\nfunction handleColumnDragEnd(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    isDraggingColumn.value = false;\r\n    emits(\"columndragend\", column, index, event);\r\n}\r\n\r\n/** Emits drop event (column) */\r\nfunction handleColumnDrop(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndrop\", column, index, event);\r\n}\r\n\r\n/** Emits drag over event (column) */\r\nfunction handleColumnDragOver(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndragover\", column, index, event);\r\n}\r\n\r\n/** Emits drag leave event (column) */\r\nfunction handleColumnDragLeave(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndragleave\", column, index, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-table__root\"],\r\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\r\n);\r\n\r\nconst tableClasses = defineClasses(\r\n    [\"tableClass\", \"o-table\"],\r\n    [\r\n        \"borderedClass\",\r\n        \"o-table--bordered\",\r\n        null,\r\n        computed(() => props.bordered),\r\n    ],\r\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\r\n    [\r\n        \"narrowedClass\",\r\n        \"o-table--narrowed\",\r\n        null,\r\n        computed(() => props.narrowed),\r\n    ],\r\n    [\r\n        \"hoverableClass\",\r\n        \"o-table--hoverable\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                (props.hoverable || props.focusable) &&\r\n                !!visibleRows.value.length,\r\n        ),\r\n    ],\r\n    [\r\n        \"emptyClass\",\r\n        \"o-table--table__empty\",\r\n        null,\r\n        computed(() => !visibleRows.value.length),\r\n    ],\r\n);\r\n\r\nconst tableWrapperClasses = defineClasses(\r\n    [\"wrapperClass\", \"o-table__wrapper\"],\r\n    [\r\n        \"stickyHeaderClass\",\r\n        \"o-table__wrapper--sticky-header\",\r\n        null,\r\n        computed(() => props.stickyHeader),\r\n    ],\r\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\r\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\r\n);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\r\n\r\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\r\n\r\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\r\n\r\nconst thCheckboxClasses = defineClasses([\r\n    \"thCheckboxClass\",\r\n    \"o-table__th-checkbox\",\r\n]);\r\n\r\nconst thDetailedClasses = defineClasses([\r\n    \"thDetailedClass\",\r\n    \"o-table__th--detailed\",\r\n]);\r\n\r\nconst thSubheadingClasses = defineClasses([\"thSubheadingClass\", \"o-table__th\"]);\r\n\r\nconst tdCheckboxClasses = defineClasses(\r\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\r\n    [\r\n        \"thStickyClass\",\r\n        \"o-table__th--sticky\",\r\n        null,\r\n        computed(() => props.stickyCheckbox),\r\n    ],\r\n);\r\n\r\nconst detailedClasses = defineClasses([\"detailedClass\", \"o-table__detail\"]);\r\n\r\nconst tdDetailedChevronClasses = defineClasses([\r\n    \"tdDetailedChevronClass\",\r\n    \"o-table__td-chevron\",\r\n]);\r\n\r\nconst mobileSortClasses = defineClasses([\r\n    \"mobileSortClass\",\r\n    \"o-table__mobile-sort\",\r\n]);\r\n\r\nconst paginationWrapperClasses = defineClasses([\r\n    \"paginationWrapperClass\",\r\n    \"o-table__pagination\",\r\n]);\r\n\r\nconst paginationWrapperRootClasses = computed(() =>\r\n    getActiveClasses(paginationWrapperClasses.value),\r\n);\r\n\r\nconst thSortIconClasses = defineClasses([\r\n    \"thSortIconClass\",\r\n    \"o-table__th__sort-icon\",\r\n]);\r\n\r\nfunction thClasses(column: TableColumn): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"thCurrentSortClass\",\r\n            \"o-table__th-current-sort\",\r\n            null,\r\n            isColumnSorted(column),\r\n        ],\r\n        [\"thSortableClass\", \"o-table__th--sortable\", null, column.sortable],\r\n        [\r\n            \"thUnselectableClass\",\r\n            \"o-table__th--unselectable\",\r\n            null,\r\n            column.isHeaderUnselectable,\r\n        ],\r\n        [\r\n            \"thPositionClass\",\r\n            \"o-table__th--\",\r\n            column.position,\r\n            !!column.position,\r\n        ],\r\n        [\"thStickyClass\", \"o-table__th--sticky\", null, column.sticky],\r\n    );\r\n\r\n    return [...thBaseClasses.value, ...classes.value];\r\n}\r\n\r\nfunction rowClasses(row: unknown, index: number): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"trSelectedClass\",\r\n            \"o-table__tr--selected\",\r\n            null,\r\n            isRowSelected(row, props.selected),\r\n        ],\r\n        [\"trCheckedClass\", \"o-table__tr--checked\", null, isRowChecked(row)],\r\n    );\r\n\r\n    const rowClass = props.rowClass(row, index);\r\n\r\n    return [...classes.value, { [rowClass]: true }];\r\n}\r\n\r\nfunction tdClasses(row: unknown, column: TableColumnComponent): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"tdPositionClass\",\r\n            \"o-table__td--\",\r\n            column.position,\r\n            !!column.position,\r\n        ],\r\n\r\n        [\"tdStickyClass\", \"o-table__td--sticky\", null, column.sticky],\r\n    );\r\n\r\n    return [...tdBaseClasses.value, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"table\">\r\n        <div ref=\"slotRef\" style=\"display: none\">\r\n            <!--\r\n                @slot Place o-table-column here\r\n            -->\r\n            <slot>\r\n                <template v-if=\"columns?.length\">\r\n                    <o-table-column\r\n                        v-for=\"(column, idx) in columns\"\r\n                        :key=\"idx\"\r\n                        v-slot=\"{ row }\"\r\n                        v-bind=\"column\">\r\n                        {{ column.field ? row[column.field] : row }}\r\n                    </o-table-column>\r\n                </template>\r\n            </slot>\r\n        </div>\r\n\r\n        <o-table-mobile-sort\r\n            v-if=\"isMobileActive && hasSortablenewColumns\"\r\n            :current-sort-column=\"currentSortColumn\"\r\n            :columns=\"tableColumns\"\r\n            :placeholder=\"mobileSortPlaceholder\"\r\n            :icon-pack=\"iconPack\"\r\n            :sort-icon=\"sortIcon\"\r\n            :sort-icon-size=\"sortIconSize\"\r\n            :is-asc=\"isAsc\"\r\n            :mobile-sort-classes=\"mobileSortClasses\"\r\n            @sort=\"(column, event) => sort(column, null, event)\" />\r\n\r\n        <template\r\n            v-if=\"\r\n                paginated &&\r\n                (paginationPosition === 'top' || paginationPosition === 'both')\r\n            \">\r\n            <!--\r\n                @slot Override pagination label\r\n                @binding {number} current - current page\r\n                @binding {number} per-page - rows per page\r\n                @binding {number} total - total rows count\r\n                @binding {(page: number): void } change - on page change event\r\n            -->\r\n            <slot\r\n                name=\"pagination\"\r\n                :current=\"tableCurrentPage\"\r\n                :per-page=\"perPage\"\r\n                :total=\"dataTotal\"\r\n                :change=\"(page) => (tableCurrentPage = page)\">\r\n                <o-table-pagination\r\n                    v-bind=\"$attrs\"\r\n                    v-model:current=\"tableCurrentPage\"\r\n                    :paginated=\"paginated\"\r\n                    :per-page=\"perPage\"\r\n                    :total=\"dataTotal\"\r\n                    :rounded=\"paginationRounded\"\r\n                    :size=\"paginationSize\"\r\n                    :order=\"paginationOrder\"\r\n                    :simple=\"paginationSimple\"\r\n                    :icon-pack=\"iconPack\"\r\n                    :aria-next-label=\"ariaNextLabel\"\r\n                    :aria-previous-label=\"ariaPreviousLabel\"\r\n                    :aria-page-label=\"ariaPageLabel\"\r\n                    :aria-current-label=\"ariaCurrentLabel\"\r\n                    :root-class=\"paginationWrapperRootClasses\"\r\n                    @change=\"(page) => $emit('page-change', page)\">\r\n                    <!--\r\n                        @slot Additional slot if table is paginated\r\n                    -->\r\n                    <slot name=\"top-left\" />\r\n                </o-table-pagination>\r\n            </slot>\r\n        </template>\r\n\r\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\r\n            <table\r\n                :class=\"tableClasses\"\r\n                :tabindex=\"!focusable ? null : 0\"\r\n                @keydown.self.prevent.up=\"onArrowPressed(-1, $event)\"\r\n                @keydown.self.prevent.down=\"onArrowPressed(1, $event)\">\r\n                <caption v-if=\"$slots.caption\">\r\n                    <!--\r\n                        @slot Define a table caption here\r\n                    -->\r\n                    <slot name=\"caption\" />\r\n                </caption>\r\n                <thead v-if=\"tableColumns.length && showHeader\">\r\n                    <!--\r\n                        @slot Define preheader content here\r\n                    -->\r\n                    <slot name=\"preheader\" />\r\n                    <tr>\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th\r\n                            v-if=\"checkable && checkboxPosition === 'left'\"\r\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\r\n                            <!--\r\n                                @slot Override check all checkbox\r\n                                @binding {boolean} is-all-checked - if all rows are checked\r\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\r\n                                @binding {(): void} check-all - check all function\r\n                            -->\r\n                            <slot\r\n                                name=\"check-all\"\r\n                                :is-all-checked=\"isAllChecked\"\r\n                                :is-all-uncheckable=\"isAllUncheckable\"\r\n                                :check-all=\"checkAll\">\r\n                                <o-checkbox\r\n                                    v-if=\"headerCheckable\"\r\n                                    :model-value=\"isAllChecked\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"isAllUncheckable\"\r\n                                    @update:model-value=\"checkAll\" />\r\n                            </slot>\r\n                        </th>\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"column.identifier + ':' + index + 'header'\"\r\n                            v-bind=\"column.thAttrsData\"\r\n                            :class=\"thClasses(column)\"\r\n                            :style=\"isMobileActive ? {} : column.style\"\r\n                            :draggable=\"canDragColumn\"\r\n                            @click.stop=\"sort(column, null, $event)\"\r\n                            @dragstart=\"\r\n                                handleColumnDragStart(column, index, $event)\r\n                            \"\r\n                            @dragend=\"\r\n                                handleColumnDragEnd(column, index, $event)\r\n                            \"\r\n                            @drop=\"handleColumnDrop(column, index, $event)\"\r\n                            @dragover=\"\r\n                                handleColumnDragOver(column, index, $event)\r\n                            \"\r\n                            @dragleave=\"\r\n                                handleColumnDragLeave(column, index, $event)\r\n                            \">\r\n                            <template v-if=\"column.$slots?.header\">\r\n                                <o-slot-component\r\n                                    :component=\"column.$el\"\r\n                                    name=\"header\"\r\n                                    tag=\"span\"\r\n                                    :props=\"{ column, index }\" />\r\n                            </template>\r\n                            <template v-else>\r\n                                <span>\r\n                                    {{ column.label }}\r\n                                    <span\r\n                                        v-show=\"\r\n                                            column.sortable &&\r\n                                            isColumnSorted(column)\r\n                                        \"\r\n                                        :class=\"thSortIconClasses\">\r\n                                        <o-icon\r\n                                            :icon=\"sortIcon\"\r\n                                            :pack=\"iconPack\"\r\n                                            both\r\n                                            :size=\"sortIconSize\"\r\n                                            :rotation=\"!isAsc ? 180 : 0\" />\r\n                                    </span>\r\n                                </span>\r\n                            </template>\r\n                        </th>\r\n                        <th\r\n                            v-if=\"checkable && checkboxPosition === 'right'\"\r\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\r\n                            <template v-if=\"headerCheckable\">\r\n                                <!--\r\n                                    @slot Override check all checkbox\r\n                                    @binding {boolean} is-all-checked - if all rows are checked\r\n                                    @binding {boolean} is-all-uncheckable - if check all is uncheckable\r\n                                    @binding {(): void} check-all - check all function\r\n                                -->\r\n                                <slot\r\n                                    name=\"check-all\"\r\n                                    :is-all-checked=\"isAllChecked\"\r\n                                    :is-all-uncheckable=\"isAllUncheckable\"\r\n                                    :check-all=\"checkAll\">\r\n                                    <o-checkbox\r\n                                        :model-value=\"isAllChecked\"\r\n                                        autocomplete=\"off\"\r\n                                        :variant=\"checkboxVariant\"\r\n                                        :disabled=\"isAllUncheckable\"\r\n                                        @update:model-value=\"checkAll\" />\r\n                                </slot>\r\n                            </template>\r\n                        </th>\r\n                    </tr>\r\n                    <tr v-if=\"hasSearchablenewColumns\">\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"\r\n                                column.identifier + ':' + index + 'searchable'\r\n                            \"\r\n                            v-bind=\"column.thAttrsData\"\r\n                            :class=\"thClasses(column)\"\r\n                            :style=\"isMobileActive ? {} : column.style\">\r\n                            <template v-if=\"column.searchable\">\r\n                                <template v-if=\"column.$slots?.searchable\">\r\n                                    <o-slot-component\r\n                                        :component=\"column.$el\"\r\n                                        name=\"searchable\"\r\n                                        tag=\"span\"\r\n                                        :props=\"{ column, index, filters }\" />\r\n                                </template>\r\n                                <o-input\r\n                                    v-else\r\n                                    v-model=\"filters[column.field]\"\r\n                                    :type=\"column.numeric ? 'number' : 'text'\"\r\n                                    @[filtersEvent]=\"onFiltersEvent\" />\r\n                            </template>\r\n                        </th>\r\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\r\n                    </tr>\r\n                    <tr v-if=\"hasCustomSubheadings\">\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"\r\n                                column.identifier + ':' + index + 'subheading'\r\n                            \"\r\n                            :style=\"isMobileActive ? {} : column.style\"\r\n                            :class=\"[...thBaseClasses, ...thSubheadingClasses]\">\r\n                            <template v-if=\"column.$slots?.subheading\">\r\n                                <o-slot-component\r\n                                    :component=\"column.$el\"\r\n                                    name=\"subheading\"\r\n                                    tag=\"span\"\r\n                                    :props=\"{ column, index }\" />\r\n                            </template>\r\n                            <template v-else>\r\n                                {{ column.subheading }}\r\n                            </template>\r\n                        </th>\r\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <template\r\n                        v-for=\"(row, index) in visibleRows\"\r\n                        :key=\"getRowKey(row) + 'row'\">\r\n                        <tr\r\n                            :class=\"rowClasses(row, index)\"\r\n                            :draggable=\"canDragRow\"\r\n                            @click=\"selectRow(row, index, $event)\"\r\n                            @dblclick=\"$emit('dblclick', row, index, $event)\"\r\n                            @mouseenter=\"\r\n                                $emit('mouseenter', row, index, $event)\r\n                            \"\r\n                            @mouseleave=\"\r\n                                $emit('mouseleave', row, index, $event)\r\n                            \"\r\n                            @contextmenu=\"\r\n                                $emit('contextmenu', row, index, $event)\r\n                            \"\r\n                            @dragstart=\"handleDragStart(row, index, $event)\"\r\n                            @dragend=\"handleDragEnd(row, index, $event)\"\r\n                            @drop=\"handleDrop(row, index, $event)\"\r\n                            @dragover=\"handleDragOver(row, index, $event)\"\r\n                            @dragleave=\"handleDragLeave(row, index, $event)\">\r\n                            <!-- detailed toggle column -->\r\n                            <td\r\n                                v-if=\"showDetailRowIcon\"\r\n                                :class=\"[\r\n                                    ...tdBaseClasses,\r\n                                    ...tdDetailedChevronClasses,\r\n                                ]\">\r\n                                <o-icon\r\n                                    v-if=\"hasDetailedVisible(row)\"\r\n                                    :icon=\"detailIcon\"\r\n                                    :pack=\"iconPack\"\r\n                                    :rotation=\"isVisibleDetailRow(row) ? 90 : 0\"\r\n                                    role=\"button\"\r\n                                    clickable\r\n                                    both\r\n                                    @click.stop=\"toggleDetails(row)\" />\r\n                            </td>\r\n\r\n                            <!-- checkable column left -->\r\n                            <td\r\n                                v-if=\"checkable && checkboxPosition === 'left'\"\r\n                                :class=\"[\r\n                                    ...thBaseClasses,\r\n                                    ...tdCheckboxClasses,\r\n                                ]\">\r\n                                <o-checkbox\r\n                                    :model-value=\"isRowChecked(row)\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"!isRowCheckable(row)\"\r\n                                    @update:model-value=\"\r\n                                        checkRow(row, index)\r\n                                    \" />\r\n                            </td>\r\n\r\n                            <!-- row data columns -->\r\n                            <o-slot-component\r\n                                v-for=\"(column, colindex) in visibleColumns\"\r\n                                :key=\"\r\n                                    column.identifier + index + ':' + colindex\r\n                                \"\r\n                                v-bind=\"column.tdAttrsData[index]\"\r\n                                :component=\"column.$el\"\r\n                                name=\"default\"\r\n                                tag=\"td\"\r\n                                :class=\"tdClasses(row, column)\"\r\n                                :style=\"isMobileActive ? {} : column.style\"\r\n                                :data-label=\"column.label\"\r\n                                :props=\"{\r\n                                    row,\r\n                                    column,\r\n                                    index,\r\n                                    colindex,\r\n                                    toggleDetails,\r\n                                }\"\r\n                                @click=\"\r\n                                    $emit(\r\n                                        'cell-click',\r\n                                        row,\r\n                                        column,\r\n                                        index,\r\n                                        colindex,\r\n                                        $event,\r\n                                    )\r\n                                \" />\r\n\r\n                            <!-- checkable column right -->\r\n                            <td\r\n                                v-if=\"checkable && checkboxPosition === 'right'\"\r\n                                :class=\"[\r\n                                    ...thBaseClasses,\r\n                                    ...tdCheckboxClasses,\r\n                                ]\">\r\n                                <o-checkbox\r\n                                    :model-value=\"isRowChecked(row)\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"!isRowCheckable(row)\"\r\n                                    @update:model-value=\"\r\n                                        checkRow(row, index)\r\n                                    \" />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <transition :name=\"detailTransition\">\r\n                            <tr\r\n                                v-if=\"isActiveDetailRow(row)\"\r\n                                :key=\"getRowKey(row) + 'detail'\"\r\n                                :class=\"detailedClasses\">\r\n                                <td :colspan=\"columnCount\">\r\n                                    <!--\r\n                                        @slot Place row detail content here\r\n                                        @binding {unknown} row - row conent\r\n                                        @binding {number} index - row index\r\n                                    -->\r\n                                    <slot\r\n                                        name=\"detail\"\r\n                                        :row=\"row\"\r\n                                        :index=\"index\" />\r\n                                </td>\r\n                            </tr>\r\n                        </transition>\r\n                        <!--\r\n                            @slot Place row detail content here\r\n                            @binding {unknown} row - row conent\r\n                            @binding {number} index - row index\r\n                        -->\r\n                        <slot\r\n                            v-if=\"isActiveCustomDetailRow(row)\"\r\n                            name=\"detail\"\r\n                            :row=\"row\"\r\n                            :index=\"index\" />\r\n                    </template>\r\n\r\n                    <tr v-if=\"!visibleRows.length\">\r\n                        <td :colspan=\"columnCount\">\r\n                            <!--\r\n                                @slot Define content if table is empty\r\n                            -->\r\n                            <slot name=\"empty\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n                <tfoot v-if=\"$slots.footer\">\r\n                    <tr :class=\"footerClasses\">\r\n                        <!--\r\n                            @slot Define a custom footer\r\n                            @binding {number} column-count - counts of visible columns\r\n                            @binding {number} row-count - counts of visible rows\r\n                        -->\r\n                        <slot\r\n                            v-if=\"hasCustomFooterSlot()\"\r\n                            name=\"footer\"\r\n                            :column-count=\"columnCount\"\r\n                            :row-count=\"visibleRows?.length\" />\r\n                        <th v-else :colspan=\"columnCount\">\r\n                            <!--\r\n                                @slot Define a custom footer\r\n                                @binding {number} column-count - counts of visible columns\r\n                                @binding {number} row-count - counts of visible rows\r\n                            -->\r\n                            <slot\r\n                                name=\"footer\"\r\n                                :column-count=\"columnCount\"\r\n                                :row-count=\"visibleRows?.length\" />\r\n                        </th>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <!--\r\n                @slot Override loading component\r\n                @binding {boolean} loading - is loading enabled\r\n            -->\r\n            <slot name=\"loading\" :loading=\"loading\">\r\n                <o-loading :full-page=\"false\" :active=\"loading\" />\r\n            </slot>\r\n        </div>\r\n\r\n        <template\r\n            v-if=\"\r\n                (checkable && $slots['bottom-left']) ||\r\n                (paginated &&\r\n                    (paginationPosition === 'bottom' ||\r\n                        paginationPosition === 'both'))\r\n            \">\r\n            <!--\r\n                @slot Override pagination label\r\n                @binding {number} current - current page\r\n                @binding {number} per-page - rows per page\r\n                @binding {number} total - total rows count\r\n                @binding {(page: number): void } change - on page change event\r\n            -->\r\n            <slot\r\n                name=\"pagination\"\r\n                :current=\"tableCurrentPage\"\r\n                :per-page=\"perPage\"\r\n                :total=\"dataTotal\"\r\n                :change=\"(page) => (tableCurrentPage = page)\">\r\n                <o-table-pagination\r\n                    v-bind=\"$attrs\"\r\n                    v-model:current=\"tableCurrentPage\"\r\n                    :paginated=\"paginated\"\r\n                    :per-page=\"perPage\"\r\n                    :total=\"dataTotal\"\r\n                    :rounded=\"paginationRounded\"\r\n                    :size=\"paginationSize\"\r\n                    :order=\"paginationOrder\"\r\n                    :simple=\"paginationSimple\"\r\n                    :icon-pack=\"iconPack\"\r\n                    :aria-next-label=\"ariaNextLabel\"\r\n                    :aria-previous-label=\"ariaPreviousLabel\"\r\n                    :aria-page-label=\"ariaPageLabel\"\r\n                    :aria-current-label=\"ariaCurrentLabel\"\r\n                    :root-class=\"paginationWrapperRootClasses\"\r\n                    @change=\"(page) => $emit('page-change', page)\">\r\n                    <!--\r\n                        @slot Additional slot if table is paginated\r\n                    -->\r\n                    <slot name=\"bottom-left\" />\r\n                </o-table-pagination>\r\n            </slot>\r\n        </template>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Table from \"./Table.vue\";\r\nimport TableColumn from \"./TableColumn.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export table specific types */\r\nexport type { Column } from \"./types\";\r\n\r\n/** export table plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Table);\r\n        registerComponent(app, TableColumn);\r\n    },\r\n} as Plugin;\r\n\r\n/** export table components */\r\nexport { Table as OTable, TableColumn as OTableColumn };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OSlotComponent from \"../utils/SlotComponent\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { mod, isDefined } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useProviderParent,\r\n} from \"@/composables\";\r\n\r\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Responsive horizontal navigation tabs, switch between contents with ease\r\n * @displayName Tabs\r\n * @requires ./TabItem.vue\r\n * @style _tabs.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTabs\",\r\n    configField: \"tabs\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: 0 },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.variant\"),\r\n    },\r\n    /**\r\n     * Tab size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.size\"),\r\n    },\r\n    /** Show tab in vertical layout */\r\n    vertical: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.vertical\", false),\r\n    },\r\n    /**\r\n     * Position of the tabs\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Tab type\r\n     * @values boxed, toggle\r\n     */\r\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\r\n    /** Tabs will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Tab will have an animation */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.animated\", true),\r\n    },\r\n    /**\r\n     * Transition animation name\r\n     * @values [next, prev], [right, left, down, up]\r\n     */\r\n    animation: {\r\n        type: Array as PropType<Array<string>>,\r\n        default: () =>\r\n            getOption(\"tabs.animation\", [\r\n                \"slide-next\",\r\n                \"slide-prev\",\r\n                \"slide-down\",\r\n                \"slide-up\",\r\n            ]),\r\n        validator: (value: Array<string>) =>\r\n            value.length === 2 || value.length === 4,\r\n    },\r\n    /** Apply animation on the initial render */\r\n    animateInitially: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.animateInitially\", false),\r\n    },\r\n    /** Show tab items multiline when there is no space */\r\n    multiline: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when when is vertical and its position changes */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when vertical */\r\n    verticalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when multiline */\r\n    multilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Tabs component nav tabs */\r\n    navTabsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Size of the navigation */\r\n    navSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Tabs component nav position */\r\n    navPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Type of the navigation */\r\n    navTypeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab content when transitioning */\r\n    transitioningClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item wrapper */\r\n    itemWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on tab change event\r\n     * @param value {string | number} new tab value\r\n     * @param value {string | number} old tab value\r\n     */\r\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<TabsComponent>(() => ({\r\n    activeValue: vmodel.value,\r\n    type: props.type,\r\n    vertical: props.vertical,\r\n    animated: props.animated,\r\n    animation: props.animation,\r\n    animateInitially: props.animateInitially,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nconst items = computed<TabItem[]>(() =>\r\n    sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n    })),\r\n);\r\n\r\nconst vmodel = defineModel<string | number>();\r\n\r\n/**  When v-model is changed set the new active tab. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (vmodel.value !== value) performAction(value);\r\n    },\r\n);\r\n\r\nconst activeItem = computed(() =>\r\n    isDefined(vmodel.value)\r\n        ? items.value.find((item) => item.value === vmodel.value) ||\r\n          items.value[0]\r\n        : items.value[0],\r\n);\r\n\r\nconst activeIndex = computed(() => activeItem.value.index);\r\n\r\nfunction isActive(item: TabItem): boolean {\r\n    return item.value === activeItem.value.value;\r\n}\r\n\r\nconst isTransitioning = computed(() =>\r\n    items.value.some((item) => item.isTransitioning),\r\n);\r\n\r\n/** Item click listener, emit input event and change active child. */\r\nfunction itemClick(item: TabItem): void {\r\n    if (vmodel.value !== item.value) performAction(item.value);\r\n}\r\n\r\n/** Go to the next item or wrap around */\r\nfunction next(): void {\r\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\r\n    clickFirstViableChild(newIndex, true);\r\n}\r\n\r\n/** Go to the previous item or wrap around */\r\nfunction prev(): void {\r\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\r\n    clickFirstViableChild(newIndex, false);\r\n}\r\n\r\n/** Go to the first viable item */\r\nfunction homePressed(): void {\r\n    if (items.value.length < 1) return;\r\n    clickFirstViableChild(0, true);\r\n}\r\n\r\n/** Go to the last viable item */\r\nfunction endPressed(): void {\r\n    if (items.value.length < 1) return;\r\n    clickFirstViableChild(items.value.length - 1, false);\r\n}\r\n\r\n/**\r\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\r\n * by the boolean parameter forward. In other words, first try to select the child at index\r\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\r\n * specified direction until either returning to startIndex or finding a viable child item.\r\n */\r\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\r\n    const direction = forward ? 1 : -1;\r\n    let newIndex = startingIndex;\r\n    for (\r\n        ;\r\n        newIndex !== activeIndex.value;\r\n        newIndex = mod(newIndex + direction, items.value.length)\r\n    ) {\r\n        // Break if the item at this index is viable (not disabled and is visible)\r\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\r\n            break;\r\n    }\r\n    itemClick(items.value[newIndex]);\r\n}\r\n\r\n/** Activate next child and deactivate prev child */\r\nfunction performAction(newId: number | string): void {\r\n    const oldId = vmodel.value;\r\n    const oldItem = activeItem.value;\r\n    const newItem =\r\n        items.value.find((item) => item.value === newId) || items.value[0];\r\n\r\n    if (oldItem && newItem) {\r\n        oldItem.deactivate(newItem.index);\r\n        newItem.activate(oldItem.index);\r\n    }\r\n\r\n    nextTick(() => {\r\n        vmodel.value = newId;\r\n        emits(\"change\", newId, oldId);\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tabs\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-tabs--\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && props.vertical),\r\n    ],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-tabs--fullwidth\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\r\n    [\r\n        \"multilineClass\",\r\n        \"o-tabs--multiline\",\r\n        null,\r\n        computed(() => props.multiline),\r\n    ],\r\n);\r\n\r\nconst itemWrapperClasses = defineClasses([\r\n    \"itemWrapperClass\",\r\n    \"o-tabs__nav-item-wrapper\",\r\n]);\r\n\r\nconst navClasses = defineClasses(\r\n    [\"navTabsClass\", \"o-tabs__nav\"],\r\n    [\r\n        \"navSizeClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"navPositionClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && !props.vertical),\r\n    ],\r\n    [\r\n        \"navTypeClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.type),\r\n        computed(() => !!props.type),\r\n    ],\r\n);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-tabs__content\"],\r\n    [\r\n        \"transitioningClass\",\r\n        \"o-tabs__content--transitioning\",\r\n        null,\r\n        isTransitioning,\r\n    ],\r\n);\r\n\r\nfunction itemHeaderClasses(\r\n    childItem: (typeof items.value)[number],\r\n): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\r\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\r\n        [\r\n            \"itemHeaderActiveClass\",\r\n            \"o-tabs__nav-item-{*}--active\",\r\n            props.type,\r\n            isActive(childItem),\r\n        ],\r\n        [\r\n            \"itemHeaderDisabledClass\",\r\n            \"o-tabs__nav-item-{*}--disabled\",\r\n            props.type,\r\n            childItem.disabled,\r\n        ],\r\n    );\r\n    const headerClass = { [childItem.headerClass || \"\"]: true };\r\n\r\n    return [headerClass, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\r\n        <nav\r\n            :class=\"navClasses\"\r\n            role=\"tablist\"\r\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\r\n            <!--\r\n                @slot Additional slot before tabs\r\n            -->\r\n            <slot name=\"start\" />\r\n            <div\r\n                v-for=\"childItem in items\"\r\n                v-show=\"childItem.visible\"\r\n                :key=\"childItem.value\"\r\n                :class=\"itemWrapperClasses\"\r\n                role=\"tab\"\r\n                :aria-controls=\"`${childItem.value}-content`\"\r\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\r\n                <o-slot-component\r\n                    v-if=\"childItem.$slots.header\"\r\n                    :component=\"childItem\"\r\n                    :tag=\"childItem.tag\"\r\n                    name=\"header\"\r\n                    :class=\"itemHeaderClasses(childItem)\"\r\n                    @click=\"itemClick(childItem)\"\r\n                    @keydown.enter=\"itemClick(childItem)\"\r\n                    @keydown.left.prevent=\"prev\"\r\n                    @keydown.right.prevent=\"next\"\r\n                    @keydown.up.prevent=\"prev\"\r\n                    @keydown.down.prevent=\"next\"\r\n                    @keydown.home.prevent=\"homePressed\"\r\n                    @keydown.end.prevent=\"endPressed\" />\r\n\r\n                <component\r\n                    :is=\"childItem.tag\"\r\n                    v-else\r\n                    role=\"button\"\r\n                    :tabindex=\"0\"\r\n                    :class=\"itemHeaderClasses(childItem)\"\r\n                    @click=\"itemClick(childItem)\"\r\n                    @keydown.enter=\"itemClick(childItem)\"\r\n                    @keydown.left.prevent=\"prev\"\r\n                    @keydown.right.prevent=\"next\"\r\n                    @keydown.up.prevent=\"prev\"\r\n                    @keydown.down.prevent=\"next\"\r\n                    @keydown.home.prevent=\"homePressed\"\r\n                    @keydown.end.prevent=\"endPressed\">\r\n                    <o-icon\r\n                        v-if=\"childItem.icon\"\r\n                        :root-class=\"\r\n                            getActiveClasses(childItem.headerIconClasses)\r\n                        \"\r\n                        :icon=\"childItem.icon\"\r\n                        :pack=\"childItem.iconPack\"\r\n                        :size=\"size\" />\r\n                    <span :class=\"childItem.headerTextClasses\">\r\n                        {{ childItem.label }}\r\n                    </span>\r\n                </component>\r\n            </div>\r\n            <!--\r\n                @slot Additional slot after tabs\r\n            -->\r\n            <slot name=\"end\" />\r\n        </nav>\r\n\r\n        <section :class=\"contentClasses\">\r\n            <!--\r\n                @slot Place tab items here\r\n            -->\r\n            <slot />\r\n        </section>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isEqual, uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { TabsComponent, TabItemComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Tab Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTabItem\",\r\n    configField: \"tabs\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Item value (it will be used as v-model of wrapper component) */\r\n    value: { type: [String, Number], default: () => uuid() },\r\n    /** Item label */\r\n    label: { type: String, default: undefined },\r\n    /** Item will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Icon on the left */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.icon\"),\r\n    },\r\n    /** Icon pack */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.iconPack\"),\r\n    },\r\n    /** Show/hide item */\r\n    visible: { type: Boolean, default: true },\r\n    /** Tabs item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\r\n    },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\r\n    },\r\n    /** Sets a class to the item header */\r\n    headerClass: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the tab item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header when active */\r\n    itemHeaderActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header when disabled */\r\n    itemHeaderDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header type */\r\n    itemHeaderTypeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header icon */\r\n    itemHeaderIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header text */\r\n    itemHeaderTextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** on tab item activate event */\r\n    (e: \"activate\"): void;\r\n    /** on tab item deactivate event */\r\n    (e: \"deactivate\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\n\r\nconst providedData = computed<TabItemComponent>(() => ({\r\n    ...props,\r\n    $slots: slots,\r\n    headerIconClasses: headerIconClasses.value,\r\n    headerTextClasses: headerTextClasses.value,\r\n    isTransitioning: isTransitioning.value,\r\n    activate,\r\n    deactivate,\r\n}));\r\n\r\n// Inject functionalities and data from the parent component\r\nconst { parent, item } = useProviderChild<TabsComponent>({\r\n    data: providedData,\r\n});\r\n\r\nconst transitionName = ref();\r\n\r\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\r\n\r\nconst isTransitioning = ref(false);\r\n\r\nconst nextAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\nconst prevAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\n/** Activate element, alter animation name based on the index. */\r\nfunction activate(oldIndex: number): void {\r\n    transitionName.value =\r\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"activate\");\r\n}\r\n\r\n/** Deactivate element, alter animation name based on the index. */\r\nfunction deactivate(newIndex: number): void {\r\n    transitionName.value =\r\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"deactivate\");\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\r\n\r\nconst headerIconClasses = defineClasses([\r\n    \"itemHeaderIconClass\",\r\n    \"o-tabs__nav-item-icon\",\r\n]);\r\n\r\nconst headerTextClasses = defineClasses([\r\n    \"itemHeaderTextClass\",\r\n    \"o-tabs__nav-item-text\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <Transition\r\n        :css=\"parent.animated\"\r\n        :name=\"transitionName\"\r\n        :appear=\"parent.animateInitially\"\r\n        @after-enter=\"afterEnter\"\r\n        @before-leave=\"beforeLeave\">\r\n        <div\r\n            v-show=\"isActive && visible\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"elementClasses\"\r\n            :data-id=\"`tabs-${item.identifier}`\"\r\n            data-oruga=\"tabs-item\"\r\n            :tabindex=\"isActive ? 0 : -1\"\r\n            :role=\"ariaRole\"\r\n            aria-roledescription=\"item\">\r\n            <!-- \r\n                @slot Tab item content\r\n            -->\r\n            <slot />\r\n        </div>\r\n    </Transition>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Tabs from \"./Tabs.vue\";\r\nimport TabItem from \"./TabItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export tabs specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export tabs plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Tabs);\r\n        registerComponent(app, TabItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export tabs components */\r\nexport { Tabs as OTabs, TabItem as OTabItem };\r\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    useAttrs,\r\n    watch,\r\n    watchEffect,\r\n    type ComponentInstance,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { getValueByPath } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A simple tag input field that can have autocomplete functionality\r\n * @displayName Taginput\r\n * @style _taginput.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTaginput\",\r\n    configField: \"taginput\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Array as PropType<T[]>, default: () => [] },\r\n    /** Items data */\r\n    data: { type: Array as PropType<T[]>, default: () => [] },\r\n    /** Property of the object (if data is array of objects) to use as display text */\r\n    field: { type: String, default: \"value\" },\r\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\r\n    groupField: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\r\n    groupOptions: { type: String, default: undefined },\r\n    /**\r\n     * Vertical size of the input control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.size\"),\r\n    },\r\n    /**\r\n     * Color of the each item\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.variant\"),\r\n    },\r\n    /** Limits the number of items, plus item counter */\r\n    maxitems: { type: Number, default: undefined },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: Number, default: undefined },\r\n    /** Show counter when maxlength or maxtags props are passed */\r\n    counter: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.counter\", true),\r\n    },\r\n    /** Opens a dropdown with choices when the input field is focused */\r\n    openOnFocus: { type: Boolean, default: false },\r\n    /** Keep open dropdown list after select */\r\n    keepOpen: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepOpen\", false),\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Same as native input disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /**\r\n     * Array of keys\r\n     * (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\r\n     * which will add a item when typing\r\n     */\r\n    confirmKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.confirmKeys\", [\",\", \"Tab\", \"Enter\"]),\r\n    },\r\n    /** Array of chars used to split when pasting a new string */\r\n    separators: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.separators\", [\",\"]),\r\n    },\r\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\r\n    keepFirst: { type: Boolean, default: false },\r\n    /** When autocomplete, it allow to add new items */\r\n    allowNew: { type: Boolean, default: false },\r\n    /** Allows adding the same item multiple time */\r\n    allowDuplicates: { type: Boolean, default: false },\r\n    /** Add autocomplete feature (if true, any Autocomplete props may be used too) */\r\n    allowAutocomplete: { type: Boolean, default: false },\r\n    /** Allow removing last item when pressing given keys, if input is empty */\r\n    removeOnKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.removeOnKeys\", [\"Backspace\"]),\r\n    },\r\n    /** Function to validate the value of the item before adding */\r\n    beforeAdding: {\r\n        type: Function as PropType<(value: any) => boolean>,\r\n        default: () => true,\r\n    },\r\n    /** Function to create a new item to push into v-model (items) */\r\n    createItem: {\r\n        type: Function as PropType<(value: any) => T>,\r\n        default: (item: any) => item,\r\n    },\r\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.checkScroll\", false),\r\n    },\r\n    /** Add close/delete button to the item */\r\n    closable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.closable\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.iconPack\"),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.icon\"),\r\n    },\r\n    /** Icon name of close icon on selected item */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.closeIcon\", \"close\"),\r\n    },\r\n    /** Accessibility label for the close button */\r\n    ariaCloseLabel: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.ariaCloseLabel\"),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"taginput.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input container */\r\n    containerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input container size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the entered item variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button of entered item */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the entered item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the counter element */\r\n    counterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the underlying autocomplete component\r\n     * @ignore\r\n     */\r\n    autocompleteClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"taginput.autocompleteClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {(string | number | object)[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: T[]): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {String} input value\r\n     */\r\n    (e: \"input\", value: string): void;\r\n    /**\r\n     * new item got added\r\n     * @param value {string | number | object} added item\r\n     */\r\n    (e: \"add\", value: T): void;\r\n    /**\r\n     * item got removed\r\n     * @param value {string | number | object} removed item\r\n     */\r\n    (e: \"remove\", value: T): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst autocompleteRef = ref<ComponentInstance<typeof OAutocomplete<T>>>();\r\n\r\nconst items = defineModel<T[]>({ default: [] });\r\n\r\n// use form input functionalities\r\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\r\n    autocompleteRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst newItem = ref<string>(\"\");\r\nconst isComposing = ref(false);\r\n\r\nconst valueLength = computed(() => newItem.value.trim().length);\r\nconst itemsLength = computed(() => items.value.length);\r\n\r\n/** When modelValue is changed set internal value. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        items.value = Array.isArray(value) ? value.slice(0) : value || [];\r\n    },\r\n);\r\n\r\n/** Show the input field if a maxitems hasn't been set or reached. */\r\nconst hasInput = computed(\r\n    () => props.maxitems == null || itemsLength.value < props.maxitems,\r\n);\r\n\r\nwatchEffect(() => {\r\n    // blur if input is empty\r\n    if (!hasInput.value) onBlur();\r\n});\r\n\r\n/**\r\n * If input has pasteSeparators prop,\r\n * returning new RegExp used to split pasted string.\r\n */\r\nconst separatorsAsRegExp = computed(() =>\r\n    props.separators.length\r\n        ? new RegExp(\r\n              props.separators\r\n                  .map((s) =>\r\n                      s ? s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : null,\r\n                  )\r\n                  .join(\"|\"),\r\n              \"g\",\r\n          )\r\n        : null,\r\n);\r\n\r\nfunction getNormalizedItemText(item: T): string {\r\n    if (typeof item === \"object\") item = getValueByPath(item, props.field);\r\n    return `${item}`;\r\n}\r\n\r\nfunction addItem(item?: T | string): void {\r\n    item = item || newItem.value.trim();\r\n\r\n    if (item ) {\r\n        if (typeof item === \"string\") {\r\n            const reg = separatorsAsRegExp.value;\r\n            if (reg && item.match(reg)) {\r\n                item.split(reg)\r\n                    .map((t) => t.trim())\r\n                    .filter((t) => t.length !== 0)\r\n                    .map(addItem);\r\n                return;\r\n            }\r\n        }\r\n        // Add the item input if it is not blank\r\n        // or previously added (if not allowDuplicates).\r\n        const itemToAdd = props.createItem(item);\r\n        const add = !props.allowDuplicates\r\n            ? items.value.indexOf(itemToAdd) === -1\r\n            : true;\r\n        if (add && props.beforeAdding(item)) {\r\n            items.value.push(itemToAdd);\r\n            emits(\"add\", itemToAdd);\r\n        }\r\n    }\r\n\r\n    // after autocomplete events\r\n    requestAnimationFrame(() => {\r\n        newItem.value = \"\";\r\n        emits(\"input\", newItem.value);\r\n    });\r\n}\r\n\r\nfunction removeItem(index: number, event?: Event): void {\r\n    const item = items.value.splice(index, 1)[0];\r\n    emits(\"remove\", item);\r\n    if (event) event.stopPropagation();\r\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\nfunction onSelect(option: T): void {\r\n    if (!option) return;\r\n    addItem(option);\r\n    nextTick(() => (newItem.value = \"\"));\r\n}\r\n\r\nfunction onKeydown(event: KeyboardEvent): void {\r\n    if (\r\n        props.removeOnKeys.indexOf(event.key) !== -1 &&\r\n        !newItem.value?.length &&\r\n        itemsLength.value > 0\r\n    ) {\r\n        // remove last item\r\n        removeItem(itemsLength.value - 1);\r\n    }\r\n    // Stop if is to accept select only\r\n    if (props.allowAutocomplete && !props.allowNew) return;\r\n\r\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\r\n        // Allow Tab to advance to next field regardless\r\n        if (event.key !== \"Tab\") event.preventDefault();\r\n        if (event.key === \"Enter\" && isComposing.value) return;\r\n        addItem();\r\n    }\r\n}\r\n\r\nfunction onInput(value: string | number): void {\r\n    emits(\"input\", String(value).trim());\r\n}\r\n\r\nfunction handleOnBlur(event: Event): void {\r\n    // Add item on-blur if not select only\r\n    if (!props.allowAutocomplete) addItem();\r\n    onBlur(event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\n\r\nconst autocompleteRootClasses = defineClasses([\r\n    \"autocompleteClasses.rootClass\",\r\n    \"o-taginput__autocomplete\",\r\n]);\r\n\r\nconst autocompleteInputClasses = defineClasses([\r\n    \"autocompleteClasses.inputClasses.inputClass\",\r\n    \"o-taginput__input\",\r\n]);\r\n\r\nconst autocompleteBind = computed(() => ({\r\n    ...attrs,\r\n    \"root-class\": getActiveClasses(autocompleteRootClasses.value),\r\n    \"input-classes\": {\r\n        \"input-class\": getActiveClasses(autocompleteInputClasses.value),\r\n    },\r\n    ...props.autocompleteClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-taginput\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-taginput--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n);\r\n\r\nconst containerClasses = defineClasses(\r\n    [\"containerClass\", \"o-taginput__container\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-taginput__container--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-taginput__item\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-taginput__item--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\r\n\r\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\r\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\r\n            <!--\r\n                @slot Override selected items\r\n                @binding {unknown[]} items - selected items\r\n            -->\r\n            <slot name=\"selected\" :items=\"items\">\r\n                <span\r\n                    v-for=\"(item, index) in items\"\r\n                    :key=\"getNormalizedItemText(item) + index\"\r\n                    :class=\"itemClasses\">\r\n                    <span>{{ getNormalizedItemText(item) }}</span>\r\n                    <o-icon\r\n                        v-if=\"closable\"\r\n                        :class=\"closeClasses\"\r\n                        clickable\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"closeIcon\"\r\n                        :aria-label=\"ariaCloseLabel\"\r\n                        both\r\n                        @click=\"removeItem(index, $event)\" />\r\n                </span>\r\n            </slot>\r\n\r\n            <o-autocomplete\r\n                v-show=\"hasInput\"\r\n                ref=\"autocompleteRef\"\r\n                v-model=\"newItem\"\r\n                v-bind=\"autocompleteBind\"\r\n                :data=\"data\"\r\n                :field=\"field\"\r\n                :icon=\"icon\"\r\n                :icon-pack=\"iconPack\"\r\n                :maxlength=\"maxlength\"\r\n                :size=\"size\"\r\n                :disabled=\"disabled\"\r\n                :autocomplete=\"autocomplete\"\r\n                :open-on-focus=\"openOnFocus\"\r\n                :keep-first=\"keepFirst\"\r\n                :keep-open=\"keepOpen\"\r\n                :group-field=\"groupField\"\r\n                :group-options=\"groupOptions\"\r\n                :has-counter=\"false\"\r\n                :use-html5-validation=\"useHtml5Validation\"\r\n                :check-scroll=\"checkScroll\"\r\n                :teleport=\"teleport\"\r\n                :confirm-keys=\"confirmKeys\"\r\n                :placeholder=\"placeholder\"\r\n                :validation-message=\"validationMessage\"\r\n                :expanded=\"expanded\"\r\n                @input=\"onInput\"\r\n                @focus=\"onFocus\"\r\n                @blur=\"handleOnBlur\"\r\n                @invalid=\"onInvalid\"\r\n                @keydown=\"onKeydown\"\r\n                @compositionstart=\"isComposing = true\"\r\n                @compositionend=\"isComposing = false\"\r\n                @select=\"onSelect\"\r\n                @scroll-start=\"$emit('scroll-start')\"\r\n                @scroll-end=\"$emit('scroll-end')\"\r\n                @icon-click=\"$emit('icon-click', $event)\"\r\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n                <template v-if=\"$slots.header\" #header>\r\n                    <!--\r\n                        @slot Define an additional header\r\n                    -->\r\n                    <slot name=\"header\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.default\" #default=\"props\">\r\n                    <!--\r\n                        @slot Override the select option\r\n                        @binding {object} option - option object\r\n                        @binding {number} index - option index\r\n                        @binding {unknown} value - option value\r\n                    -->\r\n                    <slot\r\n                        :option=\"props.option\"\r\n                        :index=\"props.index\"\r\n                        :value=\"props.value\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.empty\" #empty>\r\n                    <!--\r\n                        @slot Define content for empty state \r\n                    -->\r\n                    <slot name=\"empty\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.footer\" #footer>\r\n                    <!--\r\n                        @slot Define an additional footer\r\n                    -->\r\n                    <slot name=\"footer\" />\r\n                </template>\r\n            </o-autocomplete>\r\n        </div>\r\n\r\n        <small\r\n            v-if=\"counter && (maxitems || maxlength)\"\r\n            :class=\"counterClasses\">\r\n            <template v-if=\"maxlength && valueLength > 0\">\r\n                <!--\r\n                    @slot Override the counter\r\n                    @binding {number} items - items count\r\n                    @binding {number} total - total count\r\n                -->\r\n                <slot name=\"counter\" :items=\"valueLength\" :total=\"maxlength\">\r\n                    {{ valueLength }} / {{ maxlength }}\r\n                </slot>\r\n            </template>\r\n\r\n            <template v-else-if=\"maxitems\">\r\n                <!--\r\n                    @slot Override the counter\r\n                    @binding {number} items - items count\r\n                    @binding {number} total - total count\r\n                -->\r\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\r\n                    {{ itemsLength }} / {{ maxitems }}\r\n                </slot>\r\n            </template>\r\n        </small>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Taginput from \"./Taginput.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export taginput plugin */\r\nexport default {\r\n    install(Vue: App) {\r\n        registerComponent(Vue, Taginput);\r\n    },\r\n} as Plugin;\r\n\r\n/** export taginput components */\r\nexport { Taginput as OTaginput };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Timepicker from \"./Timepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export timepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Timepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export timepicker components */\r\nexport { Timepicker as OTimepicker };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Tooltip from \"./Tooltip.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export tooltip plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Tooltip);\r\n    },\r\n} as Plugin;\r\n\r\n/** export tooltip components */\r\nexport { Tooltip as OTooltip };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { File } from \"@/utils/ssr\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Upload one or more files\r\n * @displayName Upload\r\n * @style _upload.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OUpload\",\r\n    configField: \"upload\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Object, Array] as PropType<\r\n            object | typeof File | object[] | (typeof File)[]\r\n        >,\r\n        default: undefined,\r\n    },\r\n    /** Same as native, also push new item to v-model instead of replacing */\r\n    multiple: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"upload.variant\"),\r\n    },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native accept */\r\n    accept: { type: String, default: undefined },\r\n    /** Accepts drag & drop and change its style */\r\n    dragDrop: { type: Boolean, default: false },\r\n    /** Upload will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Replace last chosen files every time (like native file input element) */\r\n    native: { type: Boolean, default: true },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when draggable */\r\n    draggableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when hovered */\r\n    hoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref<HTMLInputElement>();\r\n\r\nconst vmodel = defineModel<object | object[] | File | File[]>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\r\n    useInputHandler(inputRef, emits, props);\r\n\r\nconst dragDropFocus = ref(false);\r\n\r\n/**\r\n * When v-model is changed:\r\n * 1. Reset interna input file value\r\n * 2. If it's invalid, validate again.\r\n */\r\nwatch(vmodel, (value) => {\r\n    if (!value || (Array.isArray(value) && value.length === 0))\r\n        inputRef.value.value = null;\r\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\r\n});\r\n\r\n/**\r\n * Listen change event on input type 'file',\r\n * emit 'input' event and validate\r\n */\r\nfunction onFileChange(event: Event | DragEvent): void {\r\n    if (props.disabled) return;\r\n    if (props.dragDrop) updateDragDropFocus(false);\r\n    const value =\r\n        (event.target as HTMLInputElement).files ||\r\n        (event as DragEvent).dataTransfer.files;\r\n    // no file selected\r\n    if (value.length === 0) {\r\n        if (!vmodel.value) return;\r\n        if (props.native) vmodel.value = null;\r\n    }\r\n\r\n    // multiple upload\r\n    if (props.multiple) {\r\n        // always new values if native or undefined local\r\n        const values =\r\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\r\n                ? []\r\n                : [...vmodel.value];\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const file = value[i];\r\n            // add file when type is valid\r\n            if (checkType(file)) values.push(file);\r\n        }\r\n        vmodel.value = values;\r\n    }\r\n    // single uplaod\r\n    else {\r\n        // only one element in case drag drop mode and isn't multiple\r\n        if (props.dragDrop && value.length !== 1) return;\r\n        else {\r\n            const file = value[0];\r\n            // add file when type is valid\r\n            if (checkType(file)) vmodel.value = file;\r\n            // else clear input\r\n            else if (vmodel.value) {\r\n                vmodel.value = null;\r\n                clearInput();\r\n            } else {\r\n                // Force input back to empty state and recheck validity\r\n                clearInput();\r\n                checkHtml5Validity();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!props.dragDrop) checkHtml5Validity();\r\n}\r\n\r\n/** Reset file input value */\r\nfunction clearInput(): void {\r\n    inputRef.value.value = null;\r\n}\r\n\r\n/** Listen drag-drop to update internal variable */\r\nfunction updateDragDropFocus(focus: boolean): void {\r\n    if (!props.disabled) dragDropFocus.value = focus;\r\n}\r\n\r\n/** Check mime type of file s*/\r\nfunction checkType(file: File): boolean {\r\n    if (!props.accept) return true;\r\n    const types = props.accept.split(\",\");\r\n    if (types.length === 0) return true;\r\n    for (let i = 0; i < types.length; i++) {\r\n        const type = types[i].trim();\r\n        if (type) {\r\n            if (type.substring(0, 1) === \".\") {\r\n                const extension = file.name.toLowerCase().slice(-type.length);\r\n                if (extension === type.toLowerCase()) return true;\r\n            } else {\r\n                // check mime type\r\n                if (file.type.match(type)) return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onClick(event: Event): void {\r\n    if (props.disabled) return;\r\n\r\n    // click input if not drag and drop is used\r\n    if (!props.dragDrop) {\r\n        event.preventDefault();\r\n        inputRef.value.click();\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-upl\"],\r\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\r\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst draggableClasses = defineClasses(\r\n    [\"draggableClass\", \"o-upl__draggable\"],\r\n    [\r\n        \"hoveredClass\",\r\n        \"o-upl__draggable--hovered\",\r\n        null,\r\n        computed(() => !props.variant && dragDropFocus.value),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-upl__draggable--hovered-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.variant && dragDropFocus.value),\r\n    ],\r\n);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label :id=\"ariaLabelledby\" :class=\"rootClasses\" data-oruga=\"upload\">\r\n        <template v-if=\"!dragDrop\">\r\n            <!--\r\n                @slot Default content\r\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\r\n            -->\r\n            <slot :onclick=\"onClick\" />\r\n        </template>\r\n\r\n        <div\r\n            v-else\r\n            :class=\"draggableClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @mouseenter=\"updateDragDropFocus(true)\"\r\n            @mouseleave=\"updateDragDropFocus(false)\"\r\n            @dragover.prevent=\"updateDragDropFocus(true)\"\r\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\r\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\r\n            @drop.prevent=\"onFileChange\">\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </div>\r\n\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            type=\"file\"\r\n            data-oruga-input=\"file\"\r\n            :multiple=\"multiple\"\r\n            :accept=\"accept\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @change=\"onFileChange\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\" />\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Upload from \"./Upload.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export upload plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Upload);\r\n    },\r\n} as Plugin;\r\n\r\n/** export upload components */\r\nexport { Upload as OUpload };\r\n","import type { App, Plugin } from \"vue\";\r\nimport type { OrugaOptions } from \"./types\";\r\n\r\nimport * as plugins from \"./components/plugins\";\r\n\r\nimport { ConfigProgrammatic, OrugaConfig } from \"./utils/config\";\r\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\r\n\r\n// export all types\r\nexport * from \"./types\";\r\nexport * from \"./components/types\";\r\n\r\n// export all vue components\r\nexport * from \"./components\";\r\n// export all components as vue plugin\r\nexport * from \"./components/plugins\";\r\n\r\n// export programmatic config\r\nexport {\r\n    OrugaConfig,\r\n    /** @deprecated use `OrugaConfig` instead - will be removed with 0.9 */\r\n    OrugaConfig as ConfigPlugin, // todo: remove export later - beaking change\r\n    ConfigProgrammatic,\r\n};\r\n\r\n// export programmatic composable\r\nexport { useOruga } from \"./utils/programmatic\";\r\n\r\n// main oruga vue plugin\r\nconst plugin: Plugin = {\r\n    install(app: App, options: OrugaOptions = {}) {\r\n        // initialise config with options\r\n        app.use(OrugaConfig, options);\r\n\r\n        // add all components\r\n        for (const componentKey in plugins) {\r\n            registerPlugin(app, plugins[componentKey]);\r\n        }\r\n\r\n        // add programmatic config component\r\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\r\n    },\r\n};\r\n\r\n// export default oruga vue plugin\r\nexport { plugin as Oruga };\r\nexport default plugin;\r\n"],"names":["uuid","signPoly","value","sign","mod","n","bound","val","min","max","isObject","obj","isDefined","d","blankIfUndefined","toCssDimension","width","indexOf","array","fn","index","arr","isEqual","valueA","valueB","keys1","keys2","key","val1","val2","areObjects","clone","merge","target","source","deep","mergeDeep","targetValue","sourceValue","getValueByPath","path","defaultValue","setValueByPath","p","field","removeElement","el","escapeRegExpChars","removeDiacriticsFromString","isMobileAgent","oruga","ref","addProgrammatic","property","component","useOruga","VueInstance","setVueInstance","Vue","registerPlugin","app","plugin","registerComponent","registerComponentProgrammatic","globalOptions","setOptions","options","getOptions","toRaw","getOption","setOption","ConfigProgrammatic","OrugaConfig","mdiIcons","faIcons","faIconPrefix","getIcons","icons","customIconPacks","getIcons$1","unrefElement","elRef","plain","toValue","getActiveClasses","classes","bind","defineClasses","classDefinitions","vm","getCurrentInstance","scope","effectScope","defintion","className","defaultClass","suffix","apply","getClassBind","computedClass","computeClass","applied","isRef","watch","oldValue","classBind","getCurrentScope","onScopeDispose","props","configField","_a","config","globalOverride","localOverride","overrideClass","globalTransformClasses","localTransformClasses","globalClass","currentClass","getProps","suffixProcessor","appliedClasses","input","cls","usePropBinding","name","emit","event","proxy","isUpdating","nextTick","computed","useVModelBinding","useEventListener","listener","cleanup","register","optionsClone","stop","onMounted","onBeforeUnmount","isClient","isSSR","useMatchMedia","mobileBreakpoint","isMobile","mediaQuery","defaultWidth","onMatchMedia","_sfc_main$K","defineComponent","parentField","injectField","slots","useSlots","first","slot","children","h","element","message","Comment","Text","resolveComponent","__props","fieldVariant","v","fieldMessage","isFocused","isFilled","hasLabel","hasMessage","hasInnerField","hasAddons","renderedNode","rootRef","setFocus","setFilled","setVariant","setMessage","provideData","provideField","rootClasses","messageClasses","labelClasses","labelHorizontalClasses","bodyClasses","bodyHorizontalClasses","innerFieldClasses","$field","data","provide","inject","statusVariant","statusMessage","statusVariantIcon","validatableFormElementTypes","asValidatableFormElement","t","useInputHandler","inputRef","emits","inputs","doClick","onBlur","checkHtml5Validity","onFocus","isValid","setFieldValidity","variant","setInvalid","onInvalid","validatable","isFirstInvalid","formElements","i","fieldElement","invalidHandler","canScrollToField","useDebounce","func","wait","immediate","timeout","args","later","callNow","useProviderParent","childItems","sequence","sortedItems","a","b","registerItem","identifier","nextSequence","item","ids","sortedIds","unregisterItem","useProviderChild","parent","needParent","onUnmounted","useProgrammaticComponent","elementRef","isActive","cancelOptions","getElement","container","onKeyPress","cancel","method","close","useClickOutside","handler","ignore","shouldIgnore","getScrollingParent","isScrollingParent","nextParent","overflow","overflowY","scrollHeight","clientHeight","rootStyle","style","iconConfig","iconPrefix","customSizeByPack","computedIcon","getEquivalentIconOf","computedSize","computedVariant","newVariant","_b","__emit","textareaRef","vmodel","_useModel","valueLength","resize","height","computedStyles","onInput","hasIconRight","computedIconRight","passwordVisibleIcon","computedIconRightVariant","iconClick","rightIconClick","togglePasswordVisibility","isPasswordVisible","inputType","inputClasses","iconLeftClasses","iconRightClasses","counterClasses","__expose","opposites","teleportTo","teleportDisabled","contentRef","setContent","updatePositioning","addHandler","initialPosition","scrollingParent","resizeObserver","removeHandler","position","getAutoPosition","content","trigger","rect","top","left","bestPosition","viewRect","contentRect","triggerRect","triggerAnchors","anchors","contentAnchors","contentRectAtAnchor","pos","triggerAnchor","contentAnchor","defaultOpposite","crossPosition","crossOpposite","positions","maxOverlap","overlap","intersectionArea","right","bottom","findFocusable","programmatic","onKeyDown","focusable","focusableProg","firstFocusable","lastFocusable","unbind","directive","vTrapFocus","autoPosition","isMobileModal","isMobileNative","menuStyle","hoverable","triggerRef","eventCleanups","timer","onClickedOutside","onClick","toggle","onContextMenu","open","isHovered","onHover","onHoverLeave","onClose","checkDropdownScroll","dropdown","selectItem","triggerClasses","positionWrapperClasses","menuMobileOverlayClasses","menuClasses","itemValue","isClickable","selected","SpecialOption","SpecialOption2","isSpecialOption","option","dropdownRef","footerRef","headerRef","itemRefs","setItemRef","groupIndex","itemIndex","selectedOption","hoveredOption","headerHovered","footerHovered","hoveredId","menuId","currentValue","getValue","setSelected","isEmpty","selectFirstOption","setHovered","hoveredValue","computedData","setHoveredIdToIndex","group","items","empty","closeableOptions","onDropdownClose","closeDropdown","nonEmptyElements","selectHeaderOrFooterByClick","origin","navigateItem","direction","dropdownMenu","visMin","visMax","onKeydown","handleFocus","handleBlur","debouncedInput","emitInput","watchEffect","computedIconRightClickable","trashhold","headerHeight","footerHeight","attrs","useAttrs","inputBind","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","itemOptionClasses","optionClasses","index$s","Autocomplete","computedTag","computedNativeType","computedDisabled","iconClasses","wrapperClasses","index$r","Button","restartTimer","pauseTimer","startTimer","itemWidth","scrollIndex","switchTo","activeIndex","windowWidth","refresh_","settings","onRefresh","onResized","dragEnd","breakpoint","readonly","translation","delta","total","indicatorCount","indicatorIndex","hasArrows","hasPrev","onPrev","hasNext","onNext","onlyMove","onModeChange","isPaused","onMouseEnter","checkPause","onMouseLeave","status","isTouch","dragX","hold","isDragging","onDragStart","dragMove","dragEndX","signCheck","results","itemsClasses","arrowIconClasses","arrowIconPrevClasses","arrowIconNextClasses","indicatorItemClasses","indicatorsClasses","indicatorClasses","itemStyle","index$q","Carousel","CarouselItem","isIndeterminate","isChecked","index$p","Checkbox","isOpen","contentClasses","index$o","Collapse","selectRef","placeholderVisible","selectOptions","rightIcon","rightIconVariant","selectClasses","picker","nativeInputRef","togglePicker","onActiveChange","ariaRole","triggers","active","onInputClick","dropdownBind","getMonthNames","locale","format","dates","dtf","getWeekdayNames","firstDayOfWeek","j","matchWithGroups","pattern","str","matches","groupMatches","acc","curr","weekBuilder","startingDate","month","year","thisMonth","thisWeek","dayOfWeek","end","daysAgo","daysForward","firstWeekOffset","dow","doy","fwd","daysInYear","weeksInYear","weekOffset","weekOffsetNext","useDatepickerMixins","isDateSelectable","date","validity","enabledDate","disabledDate","isTypeMonth","localeOptions","dtfMonth","sampleTime","formatRegex","part","dateGroups","s","datepicker","hasEvents","dayRefs","setDayRef","refKey","day","clickWeekNumber","week","getDayOfYear","getWeekNumber","mom","resWeek","resYear","eventsDateMatch","weekDay","preventDefault","selectDate","changeFocus","inc","nextDay","setRangeHoverEndDate","dateMatch","dateOne","dateTwo","multiple","dateWithin","cellClasses","tableCellClasses","cellEventsClass","eventClasses","tableRowClasses","tableEventsClasses","focusedDateModel","selectedBeginDate","selectedEndDate","hoveredEndDate","visibleDayNames","currentDayName","eventsInThisMonth","weeksInThisMonth","validateFocusedDay","startingDay","newWeek","eventsInThisWeek","stripped","timed","weekDate","hoveredDateRange","currentDate","monthDays","onSelectedDate","handleSelectRangeDate","handleSelectMultipleDates","multipleSelectedDates","selectedDate","onRangeHoverEndDate","onChangeFocus","tableClasses","tableHeadClasses","tableHeadCellClasses","tableBodyClasses","monthRefs","setMonthRef","eventsInThisYear","monthDates","months","focused","dateMultipleSelected","monthClasses","monthBodyClasses","monthTableClasses","monthCellClasses","defaultDateFormatter","defaultDateParser","pickerRef","formattedValue","isArray","focusedDateData","_initialDate","computedMonthNames","listOfMonths","minMonth","maxMonth","computedDayNames","listOfYears","latestYear","earliestYear","showPrev","dateToCheck","prev","showNext","next","formatNative","onChange","onChangeNativePicker","headerClasses","headerButtonsClasses","prevButtonClasses","nextButtonClasses","listsClasses","footerClasses","dropdownClass","boxClasses","boxClassBind","index$n","Datepicker","AM","PM","HOUR_FORMAT_24","HOUR_FORMAT_12","useTimepickerMixins","isHourFormat24","computedHourFormat","amString","dayPeriod","pmString","meridiens","hourLiteral","parts","literal","idx","minuteLiteral","secondLiteral","defaultTimeFormatter","time","defaultTimeParser","timeGroups","am","dateString12","timeSplit","hours","minutes","seconds","hoursSelected","minutesSelected","secondsSelected","meridienSelected","nativeStep","formatNumber","prependZero","pad","numberOfHours","label","isHourDisabled","hour","disabled","minHours","noMinutesAvailable","minute","isMinuteDisabledForHour","maxHours","minMinutes","maxMinutes","isMinuteDisabled","isSecondDisabled","second","minSeconds","maxSeconds","isMeridienDisabled","meridienString","offset","updateDateSelected","onMeridienChange","onHoursChange","onMinutesChange","onSecondsChange","selectSelectClasses","selectPlaceholderClasses","selectBind","separatorClasses","datepickerRef","timepickerRef","updateVModel","minDate","maxDate","minTime","maxTime","datepickerSize","timepickerSize","timepickerDisabled","enableSeconds","defaultDatetimeParser","defaultParser","dayPeriods","datetimeGroups","defaultDatetimeFormatter","datepickerWrapperClasses","timepickerWrapperClasses","index$m","Datetimepicker","index$l","Dropdown","DropdownItem","index$k","Field","index$j","Icon","index$i","Input","displayInFullPage","overlayClasses","InstanceRegistry","__publicField","entry","callback","e","instances","LoadingProgrammatic","params","componentParams","propsData","p1","p2","defaultSlot","vnode","createVNode","Loading","render","LoadingProgrammatic$1","index$h","resetMenu","excludedItems","listClasses","providedData","reset","providedItem","itemParent","isExpanded","triggerReset","child","submenuClasses","index$g","Menu","MenuItem","_teleport","savedScrollTop","isAnimating","handleScroll","showX","customStyle","scrollto","scrollClass","afterEnter","beforeLeave","closeClasses","scrollClasses","noScrollClasses","ModalProgrammatic","Modal","ModalProgrammatic$1","index$f","notificationRef","parentTop","parentBottom","setAutoClose","onBeforeMount","noticeClasses","positionBottomClasses","positionTopClasses","topClasses","bottomClasses","noticeCustomContainerClasses","c","showNotice","correctParent","shouldQueue","handleClose","NotificationProgrammatic","defaultParams","notificationParams","NotificationNotice","NotificationProgrammatic$1","index$e","Notification","linkClasses","current","pageCount","last","firstItem","perPage","hasFirst","hasFirstEllipsis","hasLast","hasLastEllipsis","pagesInRange","pages","getPage","num","ariaLabel","changePage","getAriaPageLabel","pageNumber","isCurrent","page","prevBtnClasses","nextBtnClasses","infoClasses","ellipsisClasses","linkCurrentClasses","listItemClasses","index$d","Pagination","index$c","Radio","index$b","Select","index$a","Skeleton","sidebarContent","transitionName","vertical","hideOnMobile","removeOutsideListener","clickedOutside","SidebarProgrammatic","Sidebar","SidebarProgrammatic$1","index$9","arrowClasses","slider","dragging","startX","startPosition","newPosition","tooltip","tooltipAlways","step","indicator","precision","precisions","decimal","computedTooltipVariant","currentPosition","wrapperStyle","onButtonDown","onDragging","onDragEnd","onLeftKeyDown","setPosition","onRightKeyDown","onHomeKeyDown","onEndKeyDown","diff","percent","stepLength","hidden","tickStyle","tickLabelClasses","emitValue","isRange","minValue","maxValue","valueStart","sliderRef","thumbStartRef","thumbEndRef","valueEnd","isThumbReversed","isTrackClickDisabled","setValues","onInternalValueUpdate","tickValues","result","barSize","barStart","barStyle","newValue","smallValue","largeValue","sliderSize","onSliderClick","sliderOffsetLeft","diffFirst","diffSecond","trackClasses","fillClasses","thumbClasses","thumbWrapperClasses","index$8","Slider","SliderTick","column","performAction","activeItem","isTransitioning","prevItem","nextItem","isItemClickable","itemClick","newId","oldId","oldItem","newItem","stepDividerClasses","stepMarkerClasses","stepContentClasses","stepNavigationClasses","stepLinkLabelClasses","stepLinkClasses","childItem","activate","deactivate","nextAnimation","prevAnimation","oldIndex","newIndex","elementClasses","index$7","Steps","StepItem","switchClasses","switchCheckClasses","index$6","Switch","OSlotComponent","mobileSort","showPlaceholder","sortableColumns","isCurrentSort","sort","isHeaderUnselectable","currentPage","pageChanged","newPage","isMobileActive","slotRef","provider","tableColumns","tableData","row","tableRows","dataTotal","tableCurrentPage","isRowFiltered","currentSortColumn","newTotal","tableWrapperStyle","visibleRows","start","visibleColumns","col","columnCount","count","hasSearchablenewColumns","isScrollable","hasCustomSubheadings","hasCustomFooterSlot","footer","tag","onArrowPressed","selectRow","isRowSelected","selectedRow","getRowKey","filters","handleFiltersChange","onFiltersEvent","doSortSingleColumn","isAsc","checkSort","hasSortablenewColumns","isColumnSorted","initSort","sortField","sortDirection","sortColumn","updateDirection","sortBy","sorted","newA","newB","newCheckedRows","lastCheckedRowIndex","rows","isAllChecked","validVisibleData","currentVisibleRow","isAllUncheckable","isRowChecked","removeCheckedRow","checkAll","allChecked","currentRow","checkRow","visibleDetailRows","showDetailRowIcon","expandedRows","toggleDetails","isVisibleDetailRow","closeDetailRow","openDetailRow","handleDetailKey","isActiveDetailRow","isActiveCustomDetailRow","isDraggingRow","isDraggingColumn","canDragRow","canDragColumn","handleDragStart","handleDragEnd","handleDrop","handleDragOver","handleDragLeave","handleColumnDragStart","handleColumnDragEnd","handleColumnDrop","handleColumnDragOver","handleColumnDragLeave","tableWrapperClasses","thBaseClasses","tdBaseClasses","thCheckboxClasses","thDetailedClasses","thSubheadingClasses","tdCheckboxClasses","detailedClasses","tdDetailedChevronClasses","mobileSortClasses","paginationWrapperClasses","paginationWrapperRootClasses","thSortIconClasses","thClasses","rowClasses","rowClass","tdClasses","index$5","Table","TableColumn","clickFirstViableChild","homePressed","endPressed","startingIndex","forward","itemWrapperClasses","navClasses","headerIconClasses","headerTextClasses","index$4","Tabs","TabItem","autocompleteRef","isComposing","itemsLength","hasInput","separatorsAsRegExp","getNormalizedItemText","addItem","reg","itemToAdd","removeItem","onSelect","handleOnBlur","autocompleteRootClasses","autocompleteInputClasses","autocompleteBind","containerClasses","index$3","Taginput","index$2","Timepicker","index$1","Tooltip","dragDropFocus","onFileChange","updateDragDropFocus","values","file","checkType","clearInput","focus","types","type","draggableClasses","Upload","componentKey","plugins"],"mappings":"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"}