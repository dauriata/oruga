{"version":3,"file":"oruga.js","sources":["../src/utils/helpers.ts","../src/utils/programmatic.ts","../src/utils/plugins.ts","../src/utils/config.ts","../src/utils/icons.ts","../src/composables/unrefElement.ts","../src/composables/defineClasses.ts","../src/composables/usePropValue.ts","../src/composables/useEventListener.ts","../src/utils/ssr.ts","../src/composables/useMatchMedia.ts","../src/components/field/FieldBody.vue","../src/components/field/Field.vue","../src/components/field/useFieldShare.ts","../src/composables/useInputHandler.ts","../src/composables/useDebounce.ts","../src/composables/useParentProvider.ts","../src/composables/useProgrammatic.ts","../src/composables/useClickOutside.ts","../src/composables/useScrollingParent.ts","../src/components/icon/Icon.vue","../src/components/input/Input.vue","../src/components/utils/PositionWrapper.vue","../src/directives/trapFocus.ts","../src/components/dropdown/Dropdown.vue","../src/components/dropdown/DropdownItem.vue","../src/components/autocomplete/Autocomplete.vue","../src/components/autocomplete/index.ts","../src/components/button/Button.vue","../src/components/button/index.ts","../src/components/carousel/Carousel.vue","../src/components/carousel/CarouselItem.vue","../src/components/carousel/index.ts","../src/components/checkbox/Checkbox.vue","../src/components/checkbox/index.ts","../src/components/collapse/Collapse.vue","../src/components/collapse/index.ts","../src/components/select/Select.vue","../src/components/utils/PickerWrapper.vue","../src/components/datepicker/utils.ts","../src/components/datepicker/useDatepickerMixins.ts","../src/components/datepicker/DatepickerTableRow.vue","../src/components/datepicker/DatepickerTable.vue","../src/components/datepicker/DatepickerMonth.vue","../src/components/datepicker/Datepicker.vue","../src/components/datepicker/index.ts","../src/components/timepicker/useTimepickerMixins.ts","../src/components/timepicker/Timepicker.vue","../src/components/datetimepicker/Datetimepicker.vue","../src/components/datetimepicker/index.ts","../src/components/dropdown/index.ts","../src/components/field/index.ts","../src/components/icon/index.ts","../src/components/input/index.ts","../src/components/loading/Loading.vue","../src/utils/InstanceRegistry.ts","../src/components/loading/LoadingProgrammatic.ts","../src/components/loading/index.ts","../src/components/menu/Menu.vue","../src/components/menu/MenuItem.vue","../src/components/menu/index.ts","../src/components/modal/Modal.vue","../src/components/modal/ModalProgrammatic.ts","../src/components/modal/index.ts","../src/components/notification/Notification.vue","../src/components/notification/NotificationNotice.vue","../src/components/notification/NotificationProgrammatic.ts","../src/components/notification/index.ts","../src/components/pagination/PaginationButton.vue","../src/components/pagination/Pagination.vue","../src/components/pagination/index.ts","../src/components/radio/Radio.vue","../src/components/radio/index.ts","../src/components/select/index.ts","../src/components/skeleton/Skeleton.vue","../src/components/skeleton/index.ts","../src/components/sidebar/Sidebar.vue","../src/components/sidebar/SidebarProgrammatic.ts","../src/components/sidebar/index.ts","../src/components/tooltip/Tooltip.vue","../src/components/slider/SliderThumb.vue","../src/components/slider/SliderTick.vue","../src/components/slider/Slider.vue","../src/components/slider/index.ts","../src/components/steps/Steps.vue","../src/components/steps/StepItem.vue","../src/components/steps/index.ts","../src/components/switch/Switch.vue","../src/components/switch/index.ts","../src/components/utils/SlotComponent.ts","../src/components/table/TableMobileSort.vue","../src/components/table/TableColumn.vue","../src/components/table/TablePagination.vue","../src/components/table/Table.vue","../src/components/table/index.ts","../src/components/tabs/Tabs.vue","../src/components/tabs/TabItem.vue","../src/components/tabs/index.ts","../src/components/taginput/Taginput.vue","../src/components/taginput/index.ts","../src/components/timepicker/index.ts","../src/components/tooltip/index.ts","../src/components/upload/Upload.vue","../src/components/upload/index.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Generates a random string\r\n */\r\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\r\n\r\n/**\r\n * +/- function to native math sign\r\n */\r\nfunction signPoly(value: number): number {\r\n    if (value < 0) return -1;\r\n    return value > 0 ? 1 : 0;\r\n}\r\nexport const sign = Math.sign || signPoly;\r\n\r\n/**\r\n * Native modulo bug with negative numbers\r\n * @param n\r\n * @param mod\r\n * @returns {number}\r\n */\r\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\r\n\r\n/**\r\n * Asserts a value is beetween min and max\r\n * @param val\r\n * @param min\r\n * @param max\r\n * @returns {number}\r\n */\r\nexport function bound(val: number, min: number, max: number): number {\r\n    return Math.max(min, Math.min(max, val));\r\n}\r\n\r\nexport const isObject = <T>(obj: T): boolean =>\r\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\r\n\r\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\r\n\r\nexport const blankIfUndefined = (value: string): string =>\r\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\r\n\r\nexport const defaultIfUndefined = <T>(\r\n    value: T | undefined,\r\n    defaultValue: T,\r\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\r\n\r\nexport const toCssDimension = (width: string | number): string | number =>\r\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\r\n\r\n/**\r\n * Extension of indexOf method by equality function if specified\r\n */\r\nexport function indexOf<T>(\r\n    array: T[],\r\n    obj: T,\r\n    fn: (value: T, array: T[]) => boolean,\r\n): number {\r\n    if (!array) return -1;\r\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\r\n    return array.findIndex((value, index, arr) => fn(value, arr));\r\n}\r\n\r\n/**\r\n * Deeply check if two values are equal\r\n */\r\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\r\n    // Check if only one value is empty.\r\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\r\n\r\n    // If both objects are identical, return true.\r\n    if (valueA === valueB) return true;\r\n\r\n    // Check if both values are objecs.\r\n    if (isObject(valueA) && isObject(valueB)) {\r\n        // Get the keys of both objects.\r\n        const keys1 = Object.keys(valueA);\r\n        const keys2 = Object.keys(valueB);\r\n\r\n        // Check if the number of keys is the same.\r\n        if (keys1.length !== keys2.length) return false;\r\n\r\n        // Iterate through the keys and compare their values recursively.\r\n        for (const key of keys1) {\r\n            const val1 = valueA[key];\r\n            const val2 = valueB[key];\r\n            const areObjects = isObject(val1) && isObject(val2);\r\n            if (\r\n                (areObjects && !isEqual(val1, val2)) ||\r\n                (!areObjects && val1 !== val2)\r\n            )\r\n                return false;\r\n        }\r\n        // If all checks pass, the objects are deep equal.\r\n        return true;\r\n    }\r\n\r\n    // Check if both values are arrays.\r\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\r\n        // Check if the number of keys is the same.\r\n        if (valueA.length !== valueB.length) return false;\r\n        // Check if each value of the array is the same.\r\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\r\n        // If all checks pass, the arrays are deep equal.\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Clone an obj with Object.assign\r\n */\r\nexport function clone<T extends object>(obj: T): T {\r\n    return Object.assign({}, obj);\r\n}\r\n\r\n/**\r\n * Merge function to replace Object.assign with deep merging possibility\r\n */\r\nexport function merge(target: any, source: any, deep = false): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n    if (!deep) return Object.assign(target, source);\r\n    else return mergeDeep(target, source);\r\n}\r\n\r\n/**\r\n * Performs a deep merge of `source` into `target`.\r\n * Mutates `target` only but not its objects and arrays.\r\n *\r\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\r\n */\r\nexport function mergeDeep(target: any, source: any): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n\r\n    Object.getOwnPropertyNames(source).forEach((key) => {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n\r\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n            target[key] = targetValue.concat(sourceValue);\r\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n            target[key] = mergeDeep(\r\n                Object.assign({}, targetValue),\r\n                sourceValue,\r\n            );\r\n        } else {\r\n            target[key] = sourceValue;\r\n        }\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Get a value of an object property/path even if it's nested\r\n */\r\nexport function getValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    defaultValue?: T,\r\n): T {\r\n    const value = path\r\n        .split(\".\")\r\n        .reduce(\r\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\r\n            obj,\r\n        ) as T;\r\n    return typeof value !== \"undefined\" ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Set a value of an object property/path even if it's nested\r\n */\r\nexport function setValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    value: T,\r\n): void {\r\n    const p = path.split(\".\");\r\n    if (p.length === 1) {\r\n        obj[path] = value;\r\n        return;\r\n    }\r\n    const field = p[0];\r\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\r\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\r\n}\r\n\r\nexport function removeElement(el: Element): void {\r\n    if (typeof el.remove !== \"undefined\") {\r\n        el.remove();\r\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n\r\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\r\n    const root = document.createElement(\"div\");\r\n    root.style.position = \"absolute\";\r\n    root.style.left = \"0px\";\r\n    root.style.top = \"0px\";\r\n    const wrapper = document.createElement(\"div\");\r\n    root.appendChild(wrapper);\r\n    wrapper.appendChild(el);\r\n    document.body.appendChild(root);\r\n    return root;\r\n}\r\n\r\n/**\r\n * Escape regex characters\r\n * http://stackoverflow.com/a/6969486\r\n */\r\nexport function escapeRegExpChars(value: string): string {\r\n    if (!value) return value;\r\n    // eslint-disable-next-line no-useless-escape\r\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\n/**\r\n * Remove accents/diacritics in a string in JavaScript\r\n * https://stackoverflow.com/a/37511463\r\n */\r\nexport function removeDiacriticsFromString(value: string): string {\r\n    if (!value) return value;\r\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * Mobile detection\r\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\r\n */\r\nexport const isMobileAgent = {\r\n    Android: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Android/i),\r\n    BlackBerry: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/BlackBerry/i),\r\n    iOS: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\r\n    Opera: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Opera Mini/i),\r\n    Windows: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/IEMobile/i),\r\n    any: (): boolean =>\r\n        isMobileAgent.Android() ||\r\n        isMobileAgent.BlackBerry() ||\r\n        isMobileAgent.iOS() ||\r\n        isMobileAgent.Opera() ||\r\n        isMobileAgent.Windows(),\r\n};\r\n","import { ref } from \"vue\";\r\nimport type { OrugaProgrammatic } from \"@/types\";\r\n\r\n/** Oruga object for programmatic components */\r\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\r\n\r\n/** Add components to the oruga object */\r\nexport function addProgrammatic(property: string, component: object): void {\r\n    oruga.value[property] = component;\r\n}\r\n\r\n/** Composable for internal and external usage of programmatic components*/\r\nexport function useOruga(): OrugaProgrammatic {\r\n    return oruga.value;\r\n}\r\n","import type { App, Component, Plugin } from \"vue\";\r\nimport { useOruga, addProgrammatic } from \"./programmatic\";\r\n\r\nexport let VueInstance: App;\r\n\r\n/** set the global vue instance */\r\nexport const setVueInstance = (Vue: App): void => {\r\n    VueInstance = Vue;\r\n};\r\n\r\n/** register a plugin to the vue app instance */\r\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\r\n    app.use(plugin);\r\n};\r\n\r\n/** register a component to the vue app instance */\r\nexport const registerComponent = (app: App, component: Component): void => {\r\n    app.component(component.name, component);\r\n};\r\n\r\n/** register a global programmatic component to the oruga object */\r\nexport const registerComponentProgrammatic = (\r\n    app: App,\r\n    property: string,\r\n    component: Component,\r\n): void => {\r\n    // set global vue instance\r\n    setVueInstance(app);\r\n    // use composable for unified access to programmatic oruga object\r\n    const oruga = useOruga();\r\n    // add component (manipulates the programmatic oruga object)\r\n    addProgrammatic(property, component);\r\n\r\n    // add provide and $oruga (only needed once)\r\n    if (!(app._context.provides && app._context.provides.oruga))\r\n        app.provide(\"oruga\", oruga);\r\n    if (!app.config.globalProperties.$oruga)\r\n        app.config.globalProperties.$oruga = oruga;\r\n};\r\n","import { ref, toRaw, type App } from \"vue\";\r\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\r\nimport { setVueInstance } from \"./plugins\";\r\nimport type { OrugaOptions } from \"@/types\";\r\n\r\ndeclare module \"../index\" {\r\n    interface OrugaProgrammatic {\r\n        config: typeof ConfigProgrammatic;\r\n    }\r\n}\r\n\r\nconst globalOptions = ref<OrugaOptions>({\r\n    iconPack: \"mdi\",\r\n    useHtml5Validation: true,\r\n    statusIcon: true,\r\n    transformClasses: undefined,\r\n});\r\n\r\nexport const setOptions = (options: OrugaOptions): void => {\r\n    globalOptions.value = options;\r\n};\r\n\r\nexport const getOptions = (): OrugaOptions => {\r\n    return clone(toRaw(globalOptions.value));\r\n};\r\n\r\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\r\n    return getValueByPath(globalOptions.value, path, defaultValue);\r\n};\r\n\r\nexport const setOption = <T>(path: string, defaultValue: T): void => {\r\n    setValueByPath(globalOptions.value, path, defaultValue);\r\n};\r\n\r\nexport const ConfigProgrammatic = {\r\n    getOption,\r\n    getOptions,\r\n    setOption,\r\n    setOptions(options: OrugaOptions): void {\r\n        setOptions(merge(getOptions(), options, true));\r\n    },\r\n};\r\n\r\nexport const OrugaConfig = {\r\n    install(app: App, options?: OrugaOptions): void {\r\n        // set global vue instance\r\n        setVueInstance(app);\r\n        // set options\r\n        setOptions(merge(getOptions(), options, true));\r\n    },\r\n};\r\n","import { getOption } from \"./config\";\r\nimport { merge } from \"./helpers\";\r\n\r\nexport type IconConfig = {\r\n    sizes?: { default: string; [key: string]: string };\r\n    iconPrefix?: string;\r\n    internalIcons?: Record<string, string>;\r\n};\r\n\r\nconst mdiIcons = {\r\n    sizes: {\r\n        default: \"mdi-24px\",\r\n        small: null,\r\n        medium: \"mdi-36px\",\r\n        large: \"mdi-48px\",\r\n    },\r\n    iconPrefix: \"mdi-\",\r\n};\r\n\r\nconst faIcons = () => {\r\n    const iconComponent = getOption(\"iconComponent\");\r\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\r\n    return {\r\n        sizes: {\r\n            default: null,\r\n            small: null,\r\n            medium: \"lg\",\r\n            large: \"2xl\",\r\n        },\r\n        iconPrefix: faIconPrefix,\r\n        internalIcons: {\r\n            check: \"check\",\r\n            information: \"info-circle\",\r\n            alert: \"exclamation-triangle\",\r\n            \"alert-circle\": \"exclamation-circle\",\r\n            \"arrow-up\": \"arrow-up\",\r\n            \"chevron-right\": \"angle-right\",\r\n            \"chevron-left\": \"angle-left\",\r\n            \"chevron-down\": \"angle-down\",\r\n            \"chevron-up\": \"angle-up\",\r\n            eye: \"eye\",\r\n            \"eye-off\": \"eye-slash\",\r\n            \"caret-down\": \"caret-down\",\r\n            \"caret-up\": \"caret-up\",\r\n            \"close-circle\": \"times-circle\",\r\n            close: \"times\",\r\n            loading: \"circle-notch\",\r\n        },\r\n    };\r\n};\r\n\r\nconst getIcons = (): Record<string, IconConfig> => {\r\n    let icons: Record<string, IconConfig> = {\r\n        mdi: mdiIcons,\r\n        fa: faIcons(),\r\n        fas: faIcons(),\r\n        far: faIcons(),\r\n        fad: faIcons(),\r\n        fab: faIcons(),\r\n        fal: faIcons(),\r\n    };\r\n\r\n    const customIconPacks =\r\n        getOption<Record<string, IconConfig>>(\"customIconPacks\");\r\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\r\n\r\n    return icons;\r\n};\r\n\r\nexport default getIcons;\r\n","import {\r\n    toValue,\r\n    type ComponentPublicInstance,\r\n    type MaybeRefOrGetter,\r\n    type MaybeRef,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nexport type MaybeElement =\r\n    | Element\r\n    | Document\r\n    | Window\r\n    | HTMLElement\r\n    | SVGElement\r\n    | Component\r\n    | ComponentPublicInstance\r\n    | undefined\r\n    | null;\r\n\r\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\r\n    T extends ComponentPublicInstance\r\n        ? Exclude<MaybeElement, ComponentPublicInstance>\r\n        : T extends Component\r\n          ? HTMLElement\r\n          : T | undefined;\r\n\r\n/**\r\n * Get the dom element of a ref of element or Vue component instance\r\n *\r\n * @param elRef\r\n */\r\nexport function unrefElement<T extends MaybeElement>(\r\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\r\n): UnRefElementReturn<T> {\r\n    const plain = toValue(elRef);\r\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\r\n}\r\n","import {\r\n    ref,\r\n    watch,\r\n    isRef,\r\n    toValue,\r\n    getCurrentInstance,\r\n    effectScope,\r\n    onScopeDispose,\r\n    getCurrentScope,\r\n    type MaybeRefOrGetter,\r\n    type Ref,\r\n    type ComponentInternalInstance,\r\n} from \"vue\";\r\n\r\nimport { getOptions } from \"@/utils/config\";\r\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\r\n\r\nimport type {\r\n    ClassBind,\r\n    ClassDefinition,\r\n    ComponentProps,\r\n    TransformFunction,\r\n} from \"@/types\";\r\n\r\n// named tuple as prop definition\r\ntype ComputedClass = readonly [\r\n    className: string,\r\n    defaultClass: string,\r\n    suffix?: MaybeRefOrGetter<string>,\r\n    apply?: MaybeRefOrGetter<boolean>,\r\n];\r\n\r\n/** Helperfunction to get all active classes from a class binding list */\r\nexport const getActiveClasses = (classes: ClassBind[]): string[] => {\r\n    if (!classes) return [];\r\n    return classes.flatMap((bind) =>\r\n        Object.keys(bind).filter((key) => key && bind[key]),\r\n    );\r\n};\r\n\r\n/**\r\n * Calculate dynamic classes based on class definitions\r\n */\r\nexport function defineClasses(\r\n    ...classDefinitions: ComputedClass[]\r\n): Ref<ClassBind[]> {\r\n    // getting a hold of the internal instance of the component in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"defineClasses must be called within a component setup function.\",\r\n        );\r\n\r\n    // create an effect scope object to capture reactive effects\r\n    const scope = effectScope();\r\n\r\n    // reactive classes container\r\n    const classes = ref<ClassBind[]>([]);\r\n\r\n    classes.value = classDefinitions.map((defintion, index) => {\r\n        const className = defintion[0];\r\n        const defaultClass = defintion[1];\r\n        const suffix = defintion[2];\r\n        const apply = defintion[3];\r\n\r\n        function getClassBind(): ClassBind {\r\n            // compute class based on definition parameter\r\n            const computedClass = computeClass(\r\n                vm,\r\n                className,\r\n                defaultClass,\r\n                toValue(suffix),\r\n            );\r\n\r\n            // if apply is not defined or true\r\n            const applied = !isDefined(apply) || toValue(apply);\r\n\r\n            // return class bind property\r\n            return { [computedClass]: applied };\r\n        }\r\n\r\n        // if suffix is defined, watch suffix changed and recalculate class\r\n        if (isDefined(suffix) && isRef(suffix)) {\r\n            scope.run(() => {\r\n                watch(\r\n                    () => toValue(suffix),\r\n                    (value, oldValue) => {\r\n                        // only recompute when value has really changed\r\n                        if (value === oldValue) return;\r\n                        // recompute the class bind property\r\n                        const classBind = getClassBind();\r\n                        // update class binding property by class index\r\n                        classes.value[index] = classBind;\r\n                    },\r\n                );\r\n            });\r\n        }\r\n\r\n        // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\r\n        if (isDefined(apply) && isRef(apply)) {\r\n            scope.run(() => {\r\n                watch(\r\n                    () => toValue(apply),\r\n                    (applied, oldValue) => {\r\n                        // only change apply when value has really changed\r\n                        if (applied === oldValue) return;\r\n\r\n                        // get class binding property by class index\r\n                        const classBind = classes.value[index];\r\n\r\n                        // update the apply class binding state\r\n                        Object.keys(classBind).forEach(\r\n                            (key) => (classBind[key] = applied),\r\n                        );\r\n\r\n                        // update the class binding property by class index\r\n                        classes.value[index] = classBind;\r\n                    },\r\n                );\r\n            });\r\n        }\r\n\r\n        // return computed class based on parameter\r\n        return getClassBind();\r\n    });\r\n\r\n    // check if there is a current active effect scope\r\n    if (getCurrentScope())\r\n        // Registers a dispose callback on the current active effect scope.\r\n        // The callback will be invoked when the associated effect scope is stopped.\r\n        onScopeDispose(() => {\r\n            // stop all effects when appropriate\r\n            if (scope) scope.stop();\r\n        });\r\n\r\n    // return reactive classes\r\n    return classes;\r\n}\r\n\r\n/**\r\n * Compute a class by a field name\r\n */\r\nfunction computeClass(\r\n    vm: ComponentInternalInstance,\r\n    field: string,\r\n    defaultValue?: string,\r\n    suffix = \"\",\r\n): string {\r\n    // get component props\r\n    const props = vm.props;\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    if (!configField)\r\n        throw new Error(\"component must define the 'configField' option.\");\r\n\r\n    // get component instance override property\r\n    const config = props.override === true ? {} : getOptions();\r\n\r\n    // get global config override property\r\n    const globalOverride =\r\n        props.override || getValueByPath(config, \"override\", false);\r\n    // get component config override property\r\n    const localOverride = getValueByPath(\r\n        config,\r\n        `${configField}.override`,\r\n        globalOverride,\r\n    );\r\n    // get field specific config override property\r\n    const overrideClass = getValueByPath(\r\n        config,\r\n        `${configField}.${field}.override`,\r\n        localOverride,\r\n    );\r\n\r\n    // get global tranform class\r\n    const globalTransformClasses = getValueByPath<TransformFunction>(\r\n        config,\r\n        \"transformClasses\",\r\n        undefined,\r\n    );\r\n    // get field specific tranform class\r\n    const localTransformClasses = getValueByPath<TransformFunction>(\r\n        config,\r\n        `${configField}.transformClasses`,\r\n        undefined,\r\n    );\r\n\r\n    // get config class definition\r\n    let globalClass =\r\n        getValueByPath<ClassDefinition>(\r\n            config,\r\n            `${configField}.${field}.class`,\r\n            \"\",\r\n        ) ||\r\n        getValueByPath<ClassDefinition>(config, `${configField}.${field}`, \"\");\r\n    // get instance class override\r\n    let currentClass = getValueByPath<ClassDefinition>(props, field, \"\");\r\n\r\n    // procsess instance class\r\n    if (Array.isArray(currentClass)) {\r\n        currentClass = currentClass.join(\" \");\r\n    }\r\n    if (typeof currentClass === \"function\") {\r\n        const props = getProps(vm);\r\n        currentClass = currentClass(suffix, props);\r\n    } else {\r\n        currentClass = suffixProcessor(currentClass as string, suffix);\r\n    }\r\n\r\n    // process confic class\r\n    if (Array.isArray(globalClass)) {\r\n        globalClass = globalClass.join(\" \");\r\n    }\r\n    if (typeof globalClass === \"function\") {\r\n        const props = getProps(vm);\r\n        globalClass = globalClass(suffix, props);\r\n    } else {\r\n        globalClass = suffixProcessor(globalClass as string, suffix);\r\n    }\r\n\r\n    // process default value\r\n    if (defaultValue.includes(\"{*}\")) {\r\n        defaultValue = defaultValue.replace(\r\n            /\\{\\*\\}/g,\r\n            blankIfUndefined(suffix),\r\n        );\r\n    } else {\r\n        defaultValue = defaultValue + blankIfUndefined(suffix);\r\n    }\r\n\r\n    // if override is false add default value\r\n    // add global config classes\r\n    // add instance classes\r\n    let appliedClasses = (\r\n        `${!overrideClass ? defaultValue : \"\"} ` +\r\n        `${blankIfUndefined(globalClass)} ` +\r\n        `${blankIfUndefined(currentClass)}`\r\n    )\r\n        .trim()\r\n        .replace(/\\s\\s+/g, \" \");\r\n\r\n    // apply component local transformclass if available\r\n    if (localTransformClasses) {\r\n        appliedClasses = localTransformClasses(appliedClasses);\r\n    }\r\n    // else apply global transformclass if available\r\n    else if (globalTransformClasses) {\r\n        appliedClasses = globalTransformClasses(appliedClasses);\r\n    }\r\n\r\n    return appliedClasses;\r\n}\r\n\r\nfunction suffixProcessor(input: string, suffix: string): string {\r\n    return blankIfUndefined(input)\r\n        .split(\" \")\r\n        .filter((cls) => cls.length > 0)\r\n        .map((cls) => cls + blankIfUndefined(suffix))\r\n        .join(\" \");\r\n}\r\n\r\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\r\n    let props = vm.proxy.$props;\r\n\r\n    // get all props which ends with \"Props\", these are compressed parent props\r\n    // append these parent props as root level prop\r\n    Object.keys(props)\r\n        .filter((key) => key.endsWith(\"Props\"))\r\n        .forEach((key) => (props = { ...props, ...props[key] }));\r\n\r\n    // TODO: revert object escape\r\n    return { props };\r\n};\r\n","import {\r\n    computed,\r\n    ref,\r\n    watch,\r\n    nextTick,\r\n    type ExtractPropTypes,\r\n    type WritableComputedRef,\r\n    type Ref,\r\n    type UnwrapRef,\r\n    type ComponentObjectPropsOptions,\r\n} from \"vue\";\r\n\r\n/**\r\n * Adaption of {@link https://vueuse.org/core/useVModel/} options.\r\n */\r\nexport interface PropBindingOptions<Passive extends boolean = false> {\r\n    /**\r\n     * When passive is set to `true`, it will use `watch` to sync with props and ref.\r\n     * Instead of relying on the `v-model` or `.sync` to work.\r\n     *\r\n     * @default false\r\n     */\r\n    passive?: Passive;\r\n    /**\r\n     * When eventName is set, it's value will be used to overwrite the emit event name.\r\n     *\r\n     * @default undefined\r\n     */\r\n    eventName?: string;\r\n    /**\r\n     * Attempting to check for changes of properties in a deeply nested object or array.\r\n     * Apply only when `passive` option is set to `true`\r\n     *\r\n     * @default false\r\n     */\r\n    deep?: boolean;\r\n}\r\n\r\nexport function usePropBinding<T>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<false>,\r\n): WritableComputedRef<T>;\r\n\r\nexport function usePropBinding<T>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<true>,\r\n): Ref<UnwrapRef<T>>;\r\n\r\n/**\r\n * Use two-way model binding in script setup syntax.\r\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\r\n * @param name Property name\r\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\r\n * @param emit EmitFn\r\n * @param options Extened usage options\r\n * @returns Ref<T>\r\n */\r\nexport function usePropBinding<T, Passive extends boolean>(\r\n    name: string,\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\r\n    emit: (event: any, value: T) => void,\r\n    options?: PropBindingOptions<Passive>,\r\n): Ref<UnwrapRef<T>> | WritableComputedRef<T> {\r\n    const event = options?.eventName || `update:${name!.toString()}`;\r\n\r\n    if (options?.passive) {\r\n        const proxy = ref<T>(props[name!]);\r\n        let isUpdating = false;\r\n\r\n        watch(\r\n            () => props[name!],\r\n            (value) => {\r\n                if (!isUpdating) {\r\n                    isUpdating = true;\r\n                    proxy.value = value;\r\n                    nextTick(() => (isUpdating = false));\r\n                }\r\n            },\r\n        );\r\n\r\n        watch(\r\n            proxy,\r\n            (value) => {\r\n                if ((!isUpdating && value !== props[name!]) || options.deep)\r\n                    emit(event, value as T);\r\n            },\r\n            { deep: options.deep },\r\n        );\r\n\r\n        return proxy;\r\n    } else {\r\n        return computed<T>({\r\n            get() {\r\n                return props[name!] as T;\r\n            },\r\n            set(value) {\r\n                emit(event, value);\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport function useVModelBinding<T>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: PropBindingOptions<false>,\r\n): WritableComputedRef<T>;\r\n\r\nexport function useVModelBinding<T>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: PropBindingOptions<true>,\r\n): Ref<UnwrapRef<T>>;\r\n\r\n/**\r\n * Use two-way binded modelValue property in script setup syntax.\r\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\r\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\r\n * @param emit EmitFn\r\n * @param options Extened usage options\r\n * @returns Ref<T>\r\n */\r\nexport function useVModelBinding<T, Options extends PropBindingOptions>(\r\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\r\n    emit: {\r\n        /** on input focus event */\r\n        (e: \"update:modelValue\", value: T): void;\r\n    },\r\n    options?: Options,\r\n): WritableComputedRef<T> | Ref<UnwrapRef<T>> {\r\n    return usePropBinding(\"modelValue\", props, emit, options);\r\n}\r\n","import {\r\n    onBeforeUnmount,\r\n    onMounted,\r\n    type MaybeRefOrGetter,\r\n    type Component,\r\n} from \"vue\";\r\nimport { isObject } from \"@/utils/helpers\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\ntype EventTarget = Element | Document | Window | Component;\r\ntype EventListenerOptions = AddEventListenerOptions & {\r\n    /** Register event listener immediate or on mounted hook. */\r\n    immediate?: boolean;\r\n};\r\n\r\n/**\r\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\r\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\r\n *\r\n * @param event event name\r\n * @param listener event listener function\r\n * @param el default docuemnt\r\n * @return stop function\r\n */\r\nexport function useEventListener(\r\n    event: string,\r\n    listener: (evt?: any) => any,\r\n    el: MaybeRefOrGetter<EventTarget> = document,\r\n    options?: EventListenerOptions,\r\n): () => void {\r\n    let cleanup: () => void;\r\n\r\n    const register = (): void => {\r\n        if (!el) return;\r\n\r\n        const target = unrefElement(el);\r\n        // create a clone of options, to avoid it being changed reactively on removal\r\n        const optionsClone = isObject(options) ? { ...options } : options;\r\n        target.addEventListener(event, listener, optionsClone);\r\n        cleanup = (): void =>\r\n            target.removeEventListener(event, listener, optionsClone);\r\n    };\r\n\r\n    const stop = (): void => {\r\n        if (typeof cleanup === \"function\") cleanup();\r\n    };\r\n\r\n    if (options?.immediate) register();\r\n    else {\r\n        onMounted(() => register());\r\n        onBeforeUnmount(() => stop());\r\n    }\r\n\r\n    return stop;\r\n}\r\n","// Polyfills for SSR\r\n\r\nexport const isClient = typeof window !== \"undefined\";\r\nexport const isSSR = typeof window === \"undefined\";\r\n\r\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\r\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\r\nexport const File = isSSR ? Object : window.File;\r\n","import { getCurrentInstance, ref } from \"vue\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { isClient } from \"@/utils/ssr\";\r\n\r\n/**\r\n * Checks if the match media is mobile.\r\n * @param mobileBreakpoint px breakpoint\r\n */\r\nexport function useMatchMedia(mobileBreakpoint?: string) {\r\n    const isMobile = ref(false);\r\n    const mediaQuery = ref();\r\n\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useMatchMedia must be called within a component setup function.\",\r\n        );\r\n    // get component props\r\n    const props = vm.props;\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    if (!configField)\r\n        throw new Error(\"component must define the 'configField' option.\");\r\n\r\n    // get mobileBreakpoint width value\r\n    let width = props.mobileBreakpoint;\r\n    if (!width) {\r\n        const defaultWidth = getOption(\r\n            `mobileBreakpoint`,\r\n            mobileBreakpoint || \"1023px\",\r\n        );\r\n\r\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\r\n    }\r\n\r\n    // define match media query ref\r\n    mediaQuery.value = isClient\r\n        ? window.matchMedia(`(max-width: ${width})`)\r\n        : undefined;\r\n\r\n    if (mediaQuery.value) {\r\n        isMobile.value = mediaQuery.value.matches;\r\n        useEventListener(\"change\", onMatchMedia, mediaQuery.value);\r\n    } else {\r\n        isMobile.value = false;\r\n    }\r\n\r\n    function onMatchMedia(event: any): void {\r\n        isMobile.value = event.matches;\r\n    }\r\n\r\n    return { isMobile };\r\n}\r\n","<script lang=\"ts\">\r\nimport {\r\n    defineComponent,\r\n    h,\r\n    resolveComponent,\r\n    Comment,\r\n    Text,\r\n    useSlots,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport { injectField } from \"./useFieldShare\";\r\n\r\nimport type { ClassBind } from \"@/types\";\r\n\r\nexport default defineComponent({\r\n    name: \"OFieldBody\",\r\n    configField: \"field\",\r\n    props: {\r\n        classes: {\r\n            type: Array as PropType<ClassBind[]>,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props) {\r\n        // inject parent field component if used inside one\r\n        const { parentField } = injectField();\r\n\r\n        const slots = useSlots();\r\n\r\n        return () => {\r\n            let first = true;\r\n            const slot = slots.default();\r\n            const children =\r\n                slot.length === 1 && Array.isArray(slot[0].children)\r\n                    ? slot[0].children\r\n                    : slot;\r\n            return h(\r\n                \"div\",\r\n                { class: props.classes },\r\n                children.map((element: any) => {\r\n                    let message;\r\n                    if (element.type === Comment || element.type === Text) {\r\n                        return element;\r\n                    }\r\n                    if (first) {\r\n                        message = parentField.value.fieldMessage;\r\n                        first = false;\r\n                    }\r\n                    return h(\r\n                        resolveComponent(\"OField\"),\r\n                        {\r\n                            variant: parentField.value.fieldVariant,\r\n                            message,\r\n                        },\r\n                        () => [element],\r\n                    );\r\n                }),\r\n            );\r\n        };\r\n    },\r\n});\r\n</script>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, watch, type PropType } from \"vue\";\r\n\r\nimport OFieldBody from \"./FieldBody.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useMatchMedia } from \"@/composables\";\r\n\r\nimport { injectField, provideField } from \"../field/useFieldShare\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Fields are used to add functionality to controls and to attach/group components and elements together\r\n * @displayName Field\r\n * @style _field.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OField\",\r\n    configField: \"field\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /**\r\n     * Color of the field and help message, also adds a matching icon.\r\n     * Used by Input, Select and Autocomplete.\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: { type: String, default: undefined },\r\n    /** Field label */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Vertical size of input\r\n     * @values small, medium, large\r\n     */\r\n    labelSize: {\r\n        type: String,\r\n        default: () => getOption(\"field.labelsize\"),\r\n    },\r\n    /** Same as native for set on the label */\r\n    labelFor: { type: String, default: undefined },\r\n    /** Help message text */\r\n    message: { type: String, default: undefined },\r\n    /**\r\n     * Direct child components/elements of Field will be grouped horizontally\r\n     * (see which ones at the top of the page).\r\n     */\r\n    grouped: { type: Boolean, default: false },\r\n    /** Allow controls to fill up multiple lines, making it responsive */\r\n    groupMultiline: { type: Boolean, default: false },\r\n    /** Group label and control on the same line for horizontal forms */\r\n    horizontal: { type: Boolean, default: false },\r\n    /** Field automatically attach controls together */\r\n    addons: { type: Boolean, default: true },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"field.mobileBreakpoint\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to align label and control in horizontal forms */\r\n    horizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when fields are grouped together */\r\n    groupedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when fields fill up multiple lines */\r\n    groupMultilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label size */\r\n    labelSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field label when horizontal */\r\n    labelHorizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for field body */\r\n    bodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** \"Class for field body when horizontal */\r\n    bodyHorizontalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for components automatically attached together when inside a field */\r\n    addonsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the field message */\r\n    messageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the message field variant */\r\n    variantMessageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the label field variant */\r\n    variantLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of file component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the focused field */\r\n    focusedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the filled field */\r\n    filledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\n/** Set internal variant when prop change. */\r\nconst fieldVariant = ref(props.variant);\r\nwatch(\r\n    () => props.variant,\r\n    (v) => (fieldVariant.value = v),\r\n);\r\n\r\n/** Set internal message when prop change. */\r\nconst fieldMessage = ref(props.message);\r\nwatch(\r\n    () => props.message,\r\n    (v) => (fieldMessage.value = v),\r\n);\r\n\r\n/** this can be set from outside to update the focus state. */\r\nconst isFocused = ref(false);\r\n/** this can be set from outside to update the filled state. */\r\nconst isFilled = ref(false);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField } = injectField();\r\n\r\n/** Set parent message if we use Field in Field. */\r\nwatch(\r\n    () => fieldMessage.value,\r\n    (value) => {\r\n        if (parentField?.value?.hasInnerField) {\r\n            if (!parentField.value.fieldVariant)\r\n                parentField.value.setVariant(fieldVariant.value);\r\n            if (!parentField.value.fieldMessage)\r\n                parentField.value.setMessage(value);\r\n        }\r\n    },\r\n);\r\n\r\nconst slots = useSlots();\r\n\r\nconst hasLabel = computed(() => props.label || !!slots.label);\r\n\r\nconst hasMessage = computed(\r\n    () =>\r\n        !!(!parentField?.value?.hasInnerField && fieldMessage.value) ||\r\n        !!slots.message,\r\n);\r\n\r\nconst hasInnerField = computed(\r\n    () => props.grouped || props.groupMultiline || hasAddons(),\r\n);\r\n\r\nfunction hasAddons(): boolean {\r\n    if (!props.addons || props.horizontal) return false;\r\n\r\n    let renderedNode = 0;\r\n    // [Vue warn]: Slot \"default\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\r\n    const slot = slots.default();\r\n    if (slot) {\r\n        const children =\r\n            slot.length === 1 && Array.isArray(slot[0].children)\r\n                ? slot[0].children\r\n                : slot;\r\n        renderedNode = children.filter((n) => !!n).length;\r\n    }\r\n    return renderedNode > 1 && props.addons && !props.horizontal;\r\n}\r\n\r\n// --- Field Dependency Injection Feature ---\r\n\r\nconst rootRef = ref();\r\n\r\nfunction setFocus(value: boolean): void {\r\n    isFocused.value = value;\r\n}\r\nfunction setFilled(value: boolean): void {\r\n    isFilled.value = value;\r\n}\r\nfunction setVariant(value: string): void {\r\n    fieldVariant.value = value;\r\n}\r\nfunction setMessage(value: string): void {\r\n    fieldMessage.value = value;\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed(() => ({\r\n    $el: rootRef.value,\r\n    props,\r\n    hasInnerField: hasInnerField.value,\r\n    hasMessage: hasMessage.value,\r\n    fieldVariant: fieldVariant.value,\r\n    fieldMessage: fieldMessage.value,\r\n    setFocus,\r\n    setFilled,\r\n    setVariant,\r\n    setMessage,\r\n}));\r\n\r\n// Provide field component data via dependency injection.\r\nprovideField(provideData);\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-field\"],\r\n    [\r\n        \"horizontalClass\",\r\n        \"o-field--horizontal\",\r\n        null,\r\n        computed(() => !!props.horizontal),\r\n    ],\r\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\r\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\r\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\r\n);\r\n\r\nconst messageClasses = defineClasses(\r\n    [\"messageClass\", \"o-field__message\"],\r\n    [\r\n        \"variantMessageClass\",\r\n        \"o-field__message-\",\r\n        fieldVariant,\r\n        computed(() => !!fieldVariant.value),\r\n    ],\r\n);\r\n\r\nconst labelClasses = defineClasses(\r\n    [\"labelClass\", \"o-field__label\"],\r\n    [\r\n        \"labelSizeClass\",\r\n        \"o-field__label-\",\r\n        computed(() => props.labelSize),\r\n        computed(() => !!props.labelSize),\r\n    ],\r\n    [\r\n        \"variantLabelClass\",\r\n        \"o-field__label-\",\r\n        fieldVariant,\r\n        computed(() => !!fieldVariant.value),\r\n    ],\r\n);\r\n\r\nconst labelHorizontalClasses = defineClasses([\r\n    \"labelHorizontalClass\",\r\n    \"o-field__horizontal-label\",\r\n]);\r\n\r\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\r\n\r\nconst bodyHorizontalClasses = defineClasses([\r\n    \"bodyHorizontalClass\",\r\n    \"o-field__horizontal-body\",\r\n]);\r\n\r\nconst innerFieldClasses = defineClasses(\r\n    [\"rootClass\", \"o-field\"],\r\n    [\r\n        \"groupMultilineClass\",\r\n        \"o-field--grouped-multiline\",\r\n        null,\r\n        computed(() => props.groupMultiline),\r\n    ],\r\n\r\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\r\n    [\r\n        \"addonsClass\",\r\n        \"o-field--addons\",\r\n        null,\r\n        computed(() => !props.grouped && hasAddons()),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" data-oruga=\"field\" :class=\"rootClasses\">\r\n        <div v-if=\"horizontal\" :class=\"labelHorizontalClasses\">\r\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label\r\n                -->\r\n                <slot name=\"label\">{{ label }}</slot>\r\n            </label>\r\n        </div>\r\n        <template v-else>\r\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label\r\n                -->\r\n                <slot name=\"label\">{{ label }}</slot>\r\n            </label>\r\n        </template>\r\n\r\n        <o-field-body v-if=\"horizontal\" :classes=\"bodyHorizontalClasses\">\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </o-field-body>\r\n\r\n        <div v-else-if=\"hasInnerField\" :class=\"bodyClasses\">\r\n            <div :class=\"innerFieldClasses\">\r\n                <!--\r\n                   @slot Default content\r\n                -->\r\n                <slot />\r\n            </div>\r\n        </div>\r\n\r\n        <template v-else>\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </template>\r\n\r\n        <p v-if=\"hasMessage && !horizontal\" :class=\"messageClasses\">\r\n            <!--\r\n                @slot Override the message\r\n            -->\r\n            <slot name=\"message\"> {{ fieldMessage }} </slot>\r\n        </p>\r\n    </div>\r\n</template>\r\n","import { computed, inject, provide, type ComputedRef } from \"vue\";\r\n\r\nimport Field from \"./Field.vue\";\r\nimport { getOption } from \"@/utils/config\";\r\n\r\nexport type FieldProps = InstanceType<typeof Field>[\"$props\"];\r\n\r\ntype FieldData = {\r\n    $el: Element;\r\n    props: FieldProps;\r\n    hasInnerField: boolean;\r\n    hasMessage: boolean;\r\n    fieldVariant: string;\r\n    fieldMessage: string;\r\n    setFocus: (value: boolean) => void;\r\n    setFilled: (value: boolean) => void;\r\n    setVariant: (value: string) => void;\r\n    setMessage: (value: string) => void;\r\n};\r\n\r\n/** provide/inject key */\r\nconst $field = Symbol();\r\n\r\n/** provide/inject type */\r\ntype ProvidedField = ComputedRef<FieldData>;\r\n\r\n/**\r\n * Provide field component data via dependency injection.\r\n * Provided data is a computed ref to enjure reactivity.\r\n */\r\nexport function provideField(data: ProvidedField): void {\r\n    provide<ProvidedField>($field, data);\r\n}\r\n\r\n/** Inject parent field component if used inside one. **/\r\nexport function injectField() {\r\n    const parentField = inject<ProvidedField>($field, undefined);\r\n\r\n    /**\r\n     * Get the type prop from parent if it's a Field.\r\n     */\r\n    const statusVariant = computed(() => {\r\n        if (!parentField?.value) return undefined;\r\n        else if (!parentField.value.fieldVariant) return undefined;\r\n        else {\r\n            if (typeof parentField.value.fieldVariant === \"string\") {\r\n                return parentField.value.fieldVariant;\r\n            } else if (Array.isArray(parentField.value.fieldVariant)) {\r\n                for (const key in parentField.value.fieldVariant as any) {\r\n                    if (parentField.value.fieldVariant[key]) {\r\n                        return key;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    /**\r\n     * Get the message prop from parent if it's a Field.\r\n     */\r\n    const statusMessage = computed(() =>\r\n        !parentField.value\r\n            ? parentField.value.fieldMessage || parentField.value.hasMessage\r\n            : \"\",\r\n    );\r\n\r\n    /**\r\n     * Icon name based on the variant.\r\n     */\r\n    const statusVariantIcon = computed<string>(() => {\r\n        const statusVariantIcon = getOption(\"statusVariantIcon\", {\r\n            success: \"check\",\r\n            danger: \"alert-circle\",\r\n            info: \"information\",\r\n            warning: \"alert\",\r\n        });\r\n        return statusVariantIcon[statusVariant.value] || \"\";\r\n    });\r\n\r\n    return {\r\n        parentField,\r\n        statusVariant,\r\n        statusVariantIcon,\r\n        statusMessage,\r\n    };\r\n}\r\n","import {\r\n    nextTick,\r\n    ref,\r\n    computed,\r\n    type ExtractPropTypes,\r\n    type MaybeRefOrGetter,\r\n    type Component,\r\n} from \"vue\";\r\nimport { injectField } from \"@/components/field/useFieldShare\";\r\nimport { unrefElement } from \"./unrefElement\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isSSR } from \"@/utils/ssr\";\r\n\r\n// This should cover all types of HTML elements that have properties related to\r\n// HTML constraint validation, e.g. .form and .validity.\r\nconst validatableFormElementTypes = isSSR\r\n    ? []\r\n    : [\r\n          HTMLButtonElement,\r\n          HTMLFieldSetElement,\r\n          HTMLInputElement,\r\n          HTMLObjectElement,\r\n          HTMLOutputElement,\r\n          HTMLSelectElement,\r\n          HTMLTextAreaElement,\r\n      ];\r\n\r\nexport type ValidatableFormElement = InstanceType<\r\n    (typeof validatableFormElementTypes)[number]\r\n>;\r\n\r\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\r\n    return validatableFormElementTypes.some((t) => el instanceof t)\r\n        ? (el as ValidatableFormElement)\r\n        : null;\r\n}\r\n\r\n/**\r\n * Form input handler functionalities\r\n */\r\nexport function useInputHandler(\r\n    /** input ref element - can be a html element or a vue component*/\r\n    inputRef: MaybeRefOrGetter<ValidatableFormElement | Component>,\r\n    /** emitted input events */\r\n    emits: {\r\n        /** on input focus event */\r\n        (e: \"focus\", value: Event): void;\r\n        /** on input blur event */\r\n        (e: \"blur\", value: Event): void;\r\n        /** on input invalid event */\r\n        (e: \"invalid\", value: Event): void;\r\n    },\r\n    /** validation configuration props */\r\n    props: Readonly<\r\n        ExtractPropTypes<{\r\n            useHtml5Validation?: boolean;\r\n            validationMessage?: string;\r\n        }>\r\n    >,\r\n) {\r\n    // inject parent field component if used inside one\r\n    const { parentField } = injectField();\r\n\r\n    const element = computed<ValidatableFormElement>(() => {\r\n        const el = unrefElement<Component | HTMLElement>(inputRef);\r\n        if (!el) {\r\n            console.warn(\"useInputHandler: inputRef contains no element\");\r\n            return undefined;\r\n        }\r\n        if (el.getAttribute(\"data-oruga-input\"))\r\n            // if element is the input element\r\n            return el as ValidatableFormElement;\r\n\r\n        const inputs = el.querySelector(\"[data-oruga-input]\");\r\n\r\n        if (!inputs) {\r\n            console.warn(\r\n                \"useInputHandler: Underlaying Oruga input component not found\",\r\n            );\r\n            return undefined;\r\n        }\r\n        // return underlaying the input element\r\n        return inputs as ValidatableFormElement;\r\n    });\r\n\r\n    // --- Input Focus Feature ---\r\n\r\n    const isFocused = ref(false);\r\n\r\n    /** Focus the underlaying input element. */\r\n    function setFocus(): void {\r\n        nextTick(() => {\r\n            if (element.value) element.value.focus();\r\n        });\r\n    }\r\n\r\n    /** Click the underlaying input element. */\r\n    function doClick(): void {\r\n        nextTick(() => {\r\n            if (element.value) element.value.click();\r\n        });\r\n    }\r\n\r\n    function onBlur(event?: Event): void {\r\n        isFocused.value = false;\r\n        if (parentField?.value) parentField.value.setFocus(false);\r\n        emits(\"blur\", event);\r\n        checkHtml5Validity();\r\n    }\r\n\r\n    function onFocus(event?: Event): void {\r\n        isFocused.value = true;\r\n        if (parentField?.value) parentField.value.setFocus(true);\r\n        emits(\"focus\", event);\r\n    }\r\n\r\n    // --- Validation Feature ---\r\n\r\n    const isValid = ref(true);\r\n\r\n    function setFieldValidity(variant, message): void {\r\n        nextTick(() => {\r\n            if (parentField?.value) {\r\n                // Set type only if not defined\r\n                if (!parentField.value.props.variant) {\r\n                    parentField.value.setVariant(variant);\r\n                }\r\n                // Set message only if not defined\r\n                if (!parentField.value.props.message) {\r\n                    parentField.value.setMessage(message);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check HTML5 validation, set isValid property.\r\n     * If validation fail, send 'danger' type,\r\n     * and error message to parent if it's a Field.\r\n     */\r\n    function checkHtml5Validity(): boolean {\r\n        if (!props.useHtml5Validation) return;\r\n\r\n        if (!element.value) return;\r\n        if (element.value.validity.valid) {\r\n            setFieldValidity(null, null);\r\n            isValid.value = true;\r\n        } else {\r\n            setInvalid();\r\n            isValid.value = false;\r\n        }\r\n\r\n        return isValid.value;\r\n    }\r\n\r\n    function setInvalid(): void {\r\n        const variant = \"danger\";\r\n        const message =\r\n            props.validationMessage || element.value.validationMessage;\r\n        setFieldValidity(variant, message);\r\n    }\r\n\r\n    function onInvalid(event: Event): void {\r\n        checkHtml5Validity();\r\n        const validatable = asValidatableFormElement(event.target);\r\n        if (validatable && parentField?.value && props.useHtml5Validation) {\r\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\r\n            // We still want to focus the form's first invalid input, though.\r\n            event.preventDefault();\r\n            let isFirstInvalid = false;\r\n            if (validatable.form != null) {\r\n                const formElements = validatable.form.elements;\r\n                for (let i = 0; i < formElements.length; ++i) {\r\n                    const element = asValidatableFormElement(\r\n                        formElements.item(i),\r\n                    );\r\n                    if (element?.willValidate && !element.validity.valid) {\r\n                        isFirstInvalid = validatable === element;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isFirstInvalid) {\r\n                const fieldElement = parentField.value.$el;\r\n                const invalidHandler = getOption(\"invalidHandler\");\r\n                if (invalidHandler instanceof Function) {\r\n                    invalidHandler(validatable, fieldElement);\r\n                } else {\r\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\r\n                    // which should mean that the message will be visible onscreen.\r\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\r\n                    // If we can't use it, we'll just fall back to focusing the field.\r\n                    const canScrollToField = fieldElement\r\n                        ? fieldElement.scrollIntoView != undefined\r\n                        : false;\r\n                    validatable.focus({ preventScroll: canScrollToField });\r\n                    if (canScrollToField) {\r\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        emits(\"invalid\", event);\r\n    }\r\n\r\n    return {\r\n        isFocused,\r\n        isValid,\r\n        setFocus,\r\n        doClick,\r\n        onFocus,\r\n        onBlur,\r\n        checkHtml5Validity,\r\n        onInvalid,\r\n    };\r\n}\r\n","/**\r\n * Debounce a function\r\n * @param func function to debounce\r\n * @param wait debounce time to wait\r\n * @param immediate call immediate\r\n * @returns function to call\r\n */\r\nexport function useDebounce<A extends Array<unknown>>(\r\n    func: (...args: A) => void,\r\n    wait: number,\r\n    immediate?: boolean,\r\n): (...args: A) => void {\r\n    let timeout: NodeJS.Timeout;\r\n    return (...args: A) => {\r\n        const later = () => {\r\n            timeout = null;\r\n            if (!immediate) func.apply(this, args);\r\n        };\r\n        const callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(this, args);\r\n    };\r\n}\r\n","import {\r\n    computed,\r\n    getCurrentInstance,\r\n    inject,\r\n    nextTick,\r\n    onUnmounted,\r\n    provide,\r\n    ref,\r\n    type Component,\r\n    type ComputedRef,\r\n    type Ref,\r\n} from \"vue\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\nexport type ProviderItem<T = unknown> = {\r\n    index: number;\r\n    data: ComputedRef<T>;\r\n    identifier: string;\r\n};\r\n\r\ntype PovidedData<P, I = unknown> = {\r\n    registerItem: (data: ComputedRef<I>) => ProviderItem<I>;\r\n    unregisterItem: (item: ProviderItem<I>) => void;\r\n    data?: ComputedRef<P>;\r\n};\r\n\r\ntype ProviderParentOptions<T = unknown> = {\r\n    /**\r\n     * Override the provide/inject key.\r\n     * Default is the component configField attribute\r\n     */\r\n    key?: string;\r\n    /**\r\n     * Additional data provided for the child to the item\r\n     */\r\n    data?: ComputedRef<T>;\r\n};\r\n\r\n/**\r\n * Provide functionalities and data to child components\r\n * @param rootRef Root element of the provider component\r\n * @param data Additional data to provide\r\n * @param options additional options\r\n */\r\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\r\n    rootRef?: Ref<HTMLElement | Component>,\r\n    options?: ProviderParentOptions<ParentData>,\r\n): {\r\n    childItems: Ref<ProviderItem<ItemData>[]>;\r\n    sortedItems: Ref<ProviderItem<ItemData>[]>;\r\n} {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProviderChild must be called within a component setup function.\",\r\n        );\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    const key = options?.key ? options.key : configField;\r\n\r\n    const childItems = ref<ProviderItem<ItemData>[]>([]) as Ref<\r\n        ProviderItem<ItemData>[]\r\n    >;\r\n    const sequence = ref(1);\r\n\r\n    /**\r\n     * When items are added/removed sort them according to their position\r\n     */\r\n    const sortedItems = computed(() =>\r\n        childItems.value.slice().sort((a, b) => a.index - b.index),\r\n    );\r\n\r\n    function registerItem(\r\n        data?: ComputedRef<ItemData>,\r\n    ): ProviderItem<ItemData> {\r\n        const index = childItems.value.length;\r\n        const identifier = nextSequence();\r\n        const item = { index, data, identifier };\r\n        childItems.value.push(item);\r\n        if (rootRef?.value) {\r\n            nextTick(() => {\r\n                const ids = childItems.value\r\n                    .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\r\n                    .join(\",\");\r\n                const parent = unrefElement(rootRef);\r\n                const children = parent.querySelectorAll(ids);\r\n                const sortedIds = Array.from(children).map((el: any) =>\r\n                    el.getAttribute(\"data-id\").replace(`${key}-`, \"\"),\r\n                );\r\n\r\n                childItems.value.forEach(\r\n                    (item) =>\r\n                        (item.index = sortedIds.indexOf(`${item.identifier}`)),\r\n                );\r\n            });\r\n        }\r\n        return item;\r\n    }\r\n\r\n    function unregisterItem(item: ProviderItem): void {\r\n        childItems.value = childItems.value.filter((i) => i !== item);\r\n    }\r\n\r\n    function nextSequence(): string {\r\n        return String(sequence.value++);\r\n    }\r\n\r\n    /** Provide functionality for child components via dependency injection. */\r\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\r\n        registerItem,\r\n        unregisterItem,\r\n        data: options?.data,\r\n    });\r\n\r\n    return {\r\n        childItems,\r\n        sortedItems,\r\n    };\r\n}\r\n\r\ntype ProviderChildOptions<T = unknown> = {\r\n    /**\r\n     * Override the provide/inject key.\r\n     * Default is the component configField attribute\r\n     */\r\n    key?: string;\r\n    /**\r\n     * Does the child need the be below the parent?\r\n     * @default true\r\n     */\r\n    needParent?: boolean;\r\n    /**\r\n     * Additional data appended to the item\r\n     */\r\n    data?: ComputedRef<T>;\r\n    /**\r\n     * Register child on parent\r\n     * @default true\r\n     */\r\n    register?: boolean;\r\n};\r\n\r\n/**\r\n * Inject functionalities and data from parent components\r\n * @param options additional options\r\n */\r\nexport function useProviderChild<ParentData, ItemData = unknown>(\r\n    options: ProviderChildOptions<ItemData> = { needParent: true },\r\n): { parent: ComputedRef<ParentData>; item: Ref<ProviderItem<ItemData>> } {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProviderChild must be called within a component setup function.\",\r\n        );\r\n\r\n    const configField = vm.proxy?.$options.configField;\r\n    const key = options?.key ? options.key : configField;\r\n\r\n    /** Inject parent component functionality if used inside one **/\r\n    const parent = inject<PovidedData<ParentData, ItemData>>(\r\n        \"$o-\" + key,\r\n        undefined,\r\n    );\r\n\r\n    const needParent =\r\n        typeof options.needParent === \"undefined\" || options.needParent;\r\n\r\n    const register =\r\n        typeof options.register === \"undefined\" || options.register;\r\n\r\n    if (needParent && !parent) {\r\n        throw new Error(\r\n            `You should wrap ${vm.proxy.$options.name} in a ${key} component`,\r\n        );\r\n    }\r\n\r\n    const item = ref<ProviderItem<ItemData>>();\r\n\r\n    if (parent && register) item.value = parent.registerItem(options.data);\r\n\r\n    onUnmounted(() => {\r\n        if (parent && item.value) parent.unregisterItem(item.value);\r\n    });\r\n\r\n    return { parent: parent?.data, item: item };\r\n}\r\n","import { computed, getCurrentInstance, onMounted, type Ref } from \"vue\";\r\nimport type { ProgrammaticInstance } from \"..\";\r\nimport { isClient, HTMLElement } from \"@/utils/ssr\";\r\nimport { usePropBinding } from \"./usePropValue\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { removeElement } from \"@/utils/helpers\";\r\n\r\ntype ProgrammaticProps = {\r\n    active: boolean;\r\n    /** Define if the component is cancelable at all or by specific events. */\r\n    cancelable?: boolean | string[];\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: (...args: any[]) => void;\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: (...args: any[]) => void;\r\n    /** DOM element where the programmatic component will be mounted on. */\r\n    container?: string | HTMLElement;\r\n    /** This defines the programmatic usage. */\r\n    programmatic?: ProgrammaticInstance;\r\n};\r\n\r\nexport interface ProgrammaticOptions {\r\n    /** Method options that allow the component to be cancelled. */\r\n    cancelOptions?: string[];\r\n    /** Destroy the component on hide. Default is `true`. */\r\n    destroyOnHide?: boolean;\r\n}\r\n\r\n/**\r\n * This provides functionalities for programmatic usage.\r\n * The component get appended to the container.\r\n * This defines a cancel and close handler, as well as escape handler.\r\n * The component will be distroyed on close.\r\n * @param elementRef HTMLElement which should injected\r\n * @param props ProgrammaticProps\r\n * @param emits [\"update:active\", \"close\"]\r\n * @param options\r\n */\r\nexport function useProgrammaticComponent(\r\n    elementRef: Ref<HTMLElement> | (() => HTMLElement),\r\n    props: ProgrammaticProps,\r\n    emits: {\r\n        (e: \"update:active\", value: boolean): void;\r\n        (e: \"close\", ...args: any[]): void;\r\n    },\r\n    options: ProgrammaticOptions = { cancelOptions: [\"escape\", \"outside\"] },\r\n) {\r\n    // getting a hold of the internal instance in setup()\r\n    const vm = getCurrentInstance();\r\n    if (!vm)\r\n        throw new Error(\r\n            \"useProgrammaticComponent must be called within a component setup function.\",\r\n        );\r\n\r\n    const isActive = usePropBinding(\"active\", props, emits);\r\n\r\n    const cancelOptions = computed(() =>\r\n        typeof props.cancelable === \"boolean\"\r\n            ? props.cancelable\r\n                ? options.cancelOptions\r\n                : []\r\n            : props.cancelable,\r\n    );\r\n\r\n    function getElement(): HTMLElement {\r\n        return typeof elementRef === \"function\"\r\n            ? elementRef()\r\n            : elementRef.value;\r\n    }\r\n\r\n    const container = computed(\r\n        (): HTMLElement =>\r\n            typeof props.container === \"string\"\r\n                ? document.querySelector<HTMLElement>(props.container)\r\n                : (props.container as HTMLElement) || document.body,\r\n    );\r\n\r\n    onMounted(() => {\r\n        if (props.programmatic) {\r\n            if (props.programmatic.instances) {\r\n                props.programmatic.instances.add(vm);\r\n            }\r\n            // Insert the component in the container or the body tag\r\n            // only if it's programmatic\r\n            const el = getElement();\r\n            container.value.appendChild(el);\r\n\r\n            isActive.value = true;\r\n        }\r\n    });\r\n\r\n    if (isClient) useEventListener(\"keyup\", onKeyPress, container.value);\r\n\r\n    /** Keypress event that is bound to the document. */\r\n    function onKeyPress(event: KeyboardEvent): void {\r\n        if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n            cancel(\"escape\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the component if cancelable.\r\n     * @param method Cancel method\r\n     */\r\n    function cancel(method: string): void {\r\n        if (!props.cancelable || !isActive.value) return;\r\n        // check if method is in options\r\n        if (cancelOptions.value.indexOf(method) < 0) return;\r\n        props.onCancel.apply(null);\r\n        close({ action: \"cancel\", method });\r\n    }\r\n\r\n    /**\r\n     * Emit events, and destroy the component if it's programmatic.\r\n     * Can get called outside of a setup scope.\r\n     */\r\n    function close(...args: any[]): void {\r\n        vm.emit(\"close\");\r\n        props.onClose.apply(null, args);\r\n\r\n        if (props.programmatic) {\r\n            if (props.programmatic.instances)\r\n                props.programmatic.instances.remove(vm);\r\n\r\n            if (props.programmatic.resolve)\r\n                props.programmatic.resolve.apply(null, args);\r\n\r\n            // Timeout for the animation complete before destroying\r\n            setTimeout(() => {\r\n                // set active state of current instance\r\n                vm.props.active = false;\r\n                vm.emit(\"update:active\", false);\r\n                if (\r\n                    typeof options.destroyOnHide === \"undefined\" ||\r\n                    options.destroyOnHide\r\n                )\r\n                    if (isClient)\r\n                        window.requestAnimationFrame(() => {\r\n                            // remove the component from the container or the body tag\r\n                            const el = getElement();\r\n                            if (el) removeElement(el);\r\n                        });\r\n                    else {\r\n                        const el = getElement();\r\n                        if (el) removeElement(el);\r\n                    }\r\n            });\r\n        } else {\r\n            // set active state of current instance\r\n            vm.props.active = false;\r\n            vm.emit(\"update:active\", false);\r\n        }\r\n    }\r\n\r\n    return { close, cancel, isActive, container };\r\n}\r\n","import { type MaybeRefOrGetter } from \"vue\";\r\nimport { useEventListener } from \"./useEventListener\";\r\nimport { unrefElement } from \"./unrefElement\";\r\n\r\n/**\r\n * Listen for clicks outside of an element.\r\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\r\n *\r\n * @param target Target element\r\n * @param handler Event handler\r\n * @param ignore Element to ignore\r\n * @return stop function\r\n */\r\nexport function useClickOutside(\r\n    target: MaybeRefOrGetter,\r\n    handler: (evt: PointerEvent) => void,\r\n    ignore: (MaybeRefOrGetter | string)[] = [],\r\n): () => void {\r\n    if (!window) return;\r\n\r\n    /**\r\n     * White-listed items that not emit event when clicked.\r\n     * All children from ignore prop.\r\n     */\r\n    const shouldIgnore = (event: PointerEvent): boolean => {\r\n        return ignore.some((target) => {\r\n            if (typeof target === \"string\") {\r\n                return Array.from(\r\n                    window.document.querySelectorAll(target),\r\n                ).some(\r\n                    (el) =>\r\n                        el === event.target ||\r\n                        event.composedPath().includes(el),\r\n                );\r\n            } else {\r\n                const el = unrefElement(target);\r\n                return (\r\n                    el &&\r\n                    (event.target === el || event.composedPath().includes(el))\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    const listener = (event: PointerEvent): void => {\r\n        const el = unrefElement(target);\r\n        if (!el || el === event.target || event.composedPath().includes(el))\r\n            return;\r\n        if (shouldIgnore(event)) return;\r\n        handler(event);\r\n    };\r\n\r\n    const stop = useEventListener(\"click\", listener, window, {\r\n        immediate: true,\r\n        passive: true,\r\n    });\r\n\r\n    return stop;\r\n}\r\n","import { isDefined } from \"@/utils/helpers\";\r\n\r\n/**\r\n * Given an element, returns the element who scrolls it.\r\n */\r\nexport function getScrollingParent(target: HTMLElement): HTMLElement {\r\n    if (target.style.position === \"fixed\" || !target)\r\n        return document.documentElement;\r\n\r\n    let isScrollingParent = false;\r\n    let nextParent = target.parentElement;\r\n\r\n    while (!isScrollingParent && isDefined(nextParent)) {\r\n        if (nextParent === document.documentElement) break;\r\n\r\n        const { overflow, overflowY } = getComputedStyle(nextParent);\r\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\r\n\r\n        isScrollingParent =\r\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\r\n            scrollHeight > clientHeight;\r\n\r\n        /* ...found it, this one is returned */\r\n        if (isScrollingParent) break;\r\n\r\n        /* ...if not check the next one */\r\n        nextParent = nextParent.parentElement;\r\n    }\r\n\r\n    return nextParent;\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport getIcons from \"@/utils/icons\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Icons take an important role of any application\r\n * @displayName Icon\r\n * @style _icon.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OIcon\",\r\n    configField: \"icon\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Icon component name */\r\n    component: {\r\n        type: String,\r\n        default: () => getOption(\"iconComponent\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    pack: {\r\n        type: String,\r\n        default: () => getOption(\"iconPack\", \"mdi\"),\r\n    },\r\n    /**\r\n     * \tColor of the icon\r\n     *  @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"icon.variant\"),\r\n    },\r\n    /** Icon name */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"icon.size\"),\r\n    },\r\n    /**\r\n     * Overrides icon font size\r\n     * @values Depends on library: null (smallest), fa-sm, fa-lg, fa-xl, mdi-18px, mdi-24px, mdi-36px, mdi-48px\r\n     */\r\n    customSize: { type: String, default: undefined },\r\n    /**\r\n     * Add class to icon font.\r\n     * See icon library documentation for custom classes.\r\n     */\r\n    customClass: { type: String, default: undefined },\r\n    /** When true makes icon clickable */\r\n    clickable: { type: Boolean, default: false },\r\n    /** Enable spin effect on icon */\r\n    spin: { type: Boolean, default: false },\r\n    /** Rotation 0-360 */\r\n    rotation: { type: [Number, String], default: undefined },\r\n    /**\r\n     * This is used internally\r\n     * @ignore\r\n     */\r\n    both: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon when clickable */\r\n    clickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the element when spin */\r\n    spinClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst rootStyle = computed(() => {\r\n    const style = {};\r\n    if (props.rotation) {\r\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\r\n    }\r\n    return style;\r\n});\r\n\r\nconst iconConfig = computed(() => getIcons()[props.pack]);\r\n\r\nconst iconPrefix = computed(() =>\r\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\r\n);\r\n\r\nconst customSizeByPack = computed(() => {\r\n    if (iconConfig.value?.sizes) {\r\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\r\n            return iconConfig.value.sizes[props.size];\r\n        } else if (iconConfig.value.sizes.default) {\r\n            return iconConfig.value.sizes.default;\r\n        }\r\n    }\r\n    return null;\r\n});\r\n\r\n/**\r\n * Internal icon name based on the pack.\r\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\r\n * internal icons are always MDI.\r\n */\r\nconst computedIcon = computed(\r\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\r\n);\r\n\r\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\r\n\r\nconst computedVariant = computed(() => {\r\n    if (!props.variant) return;\r\n    let newVariant = \"\";\r\n    if (typeof props.variant === \"string\") {\r\n        newVariant = props.variant;\r\n    } else {\r\n        newVariant = Object.keys(props.variant).filter(\r\n            (key) => props.variant[key],\r\n        )[0];\r\n    }\r\n    return newVariant;\r\n});\r\n\r\n/** Equivalent icon name of the MDI. */\r\nfunction getEquivalentIconOf(value): string {\r\n    // Only transform the class if the both prop is set to true\r\n    if (!props.both) return value;\r\n    if (\r\n        iconConfig.value?.internalIcons &&\r\n        iconConfig.value?.internalIcons[value]\r\n    )\r\n        return iconConfig.value.internalIcons[value];\r\n    return value;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-icon\"],\r\n    [\r\n        \"clickableClass\",\r\n        \"o-icon--clickable\",\r\n        null,\r\n        computed(() => props.clickable),\r\n    ],\r\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-icon--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-icon--\",\r\n        computedVariant,\r\n        computed(() => !!computedVariant.value),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <span :class=\"rootClasses\" data-oruga=\"icon\" :style=\"rootStyle\">\r\n        <!-- custom icon component -->\r\n        <component\r\n            :is=\"component\"\r\n            v-if=\"component\"\r\n            :icon=\"[pack, computedIcon]\"\r\n            :size=\"computedSize\"\r\n            :class=\"[customClass]\" />\r\n\r\n        <!-- native css icon -->\r\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\r\n    </span>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    nextTick,\r\n    watch,\r\n    onMounted,\r\n    type StyleValue,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport { injectField } from \"../field/useFieldShare\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Get user Input. Use with Field to access all functionalities\r\n * @displayName Input\r\n * @style _input.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OInput\",\r\n    configField: \"input\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: \"\" },\r\n    /**\r\n     * Input type, like native\r\n     * @values Any native input type, and textarea\r\n     */\r\n    type: { type: String, default: \"text\" },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"input.size\"),\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"input.variant\"),\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Adds the reveal password functionality */\r\n    passwordReveal: { type: Boolean, default: false },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    /** Show character counter when maxlength prop is passed */\r\n    counter: {\r\n        type: Boolean,\r\n        default: () => getOption(\"input.counter\", false),\r\n    },\r\n    /** Automatically adjust height in textarea */\r\n    autosize: { type: Boolean, default: false },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"input.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"input.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"input.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Add a button/icon to clear the inputed text */\r\n    clearable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"input.clearable\", false),\r\n    },\r\n    /** Icon name to be added on the clear button */\r\n    clearIcon: {\r\n        type: String,\r\n        default: () => getOption(\"input.clearIcon\", \"close-circle\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"input.autocomplete\", \"off\"),\r\n    },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when type textarea */\r\n    textareaClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon space inside the input */\r\n    iconLeftSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon space inside the input */\r\n    iconRightSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to display when a right icon is used */\r\n    hasIconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the counter element */\r\n    counterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string | number} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\n// --- Validation Feature ---\r\n\r\nconst inputRef = ref<HTMLInputElement>();\r\nconst textareaRef = ref<HTMLInputElement>();\r\n\r\nconst elementRef = computed<HTMLInputElement>(() =>\r\n    props.type === \"textarea\" ? textareaRef.value : inputRef.value,\r\n);\r\n\r\n// use form input functionalities\r\nconst {\r\n    checkHtml5Validity,\r\n    onBlur,\r\n    onFocus,\r\n    onInvalid,\r\n    setFocus,\r\n    isValid,\r\n    isFocused,\r\n} = useInputHandler(elementRef, emits, props);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\r\n\r\nconst vmodel = defineModel<string | number>({ default: \"\" });\r\n\r\n/** Get value length */\r\nconst valueLength = computed(() =>\r\n    typeof vmodel.value === \"string\"\r\n        ? vmodel.value.length\r\n        : typeof vmodel.value === \"number\"\r\n          ? vmodel.value.toString().length\r\n          : 0,\r\n);\r\n\r\nonMounted(() => {\r\n    /**\r\n     * When v-model is changed:\r\n     *  1. Set parent field filled state.\r\n     *  2. Resize textarea input\r\n     *  3. Check html5 valdiation\r\n     */\r\n    watch(\r\n        () => vmodel.value,\r\n        (value) => {\r\n            if (parentField?.value) parentField.value.setFilled(!!value);\r\n            if (props.autosize) resize();\r\n            if (!isValid.value) nextTick(() => checkHtml5Validity());\r\n        },\r\n        { immediate: true },\r\n    );\r\n});\r\n\r\nconst height = ref(\"auto\");\r\n\r\nfunction resize(): void {\r\n    height.value = \"auto\";\r\n    nextTick(() => {\r\n        if (!textareaRef.value) return;\r\n        const scrollHeight = textareaRef.value.scrollHeight;\r\n        height.value = scrollHeight + \"px\";\r\n    });\r\n}\r\n\r\n/** Computed inline styles for autoresize */\r\nconst computedStyles = computed(\r\n    (): StyleValue =>\r\n        props.autosize\r\n            ? {\r\n                  resize: \"none\",\r\n                  height: height.value,\r\n                  overflow: \"hidden\",\r\n              }\r\n            : {},\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", (event.target as HTMLInputElement).value, event);\r\n}\r\n\r\n// --- Icon Feature ---\r\n\r\nconst hasIconRight = computed(() => {\r\n    return !!(\r\n        props.passwordReveal ||\r\n        (props.statusIcon && statusVariantIcon.value) ||\r\n        (props.clearable && vmodel.value && props.clearIcon) ||\r\n        props.iconRight\r\n    );\r\n});\r\n\r\nconst computedIconRight = computed(() => {\r\n    if (props.passwordReveal) {\r\n        return passwordVisibleIcon.value;\r\n    } else if (props.clearable && vmodel.value && props.clearIcon) {\r\n        return props.clearIcon;\r\n    } else if (props.iconRight) {\r\n        return props.iconRight;\r\n    }\r\n    return statusVariantIcon.value;\r\n});\r\n\r\nconst computedIconRightVariant = computed(() =>\r\n    props.passwordReveal || props.iconRight\r\n        ? props.iconRightVariant || props.variant || null\r\n        : statusVariant.value,\r\n);\r\n\r\nfunction iconClick(event: Event): void {\r\n    emits(\"icon-click\", event);\r\n    nextTick(() => setFocus());\r\n}\r\n\r\nfunction rightIconClick(event: Event): void {\r\n    if (props.passwordReveal) togglePasswordVisibility();\r\n    else if (props.clearable) vmodel.value = \"\";\r\n    if (props.iconRightClickable) {\r\n        emits(\"icon-right-click\", event);\r\n        nextTick(() => setFocus());\r\n    }\r\n}\r\n\r\n// --- Password Visability Feature ---\r\n\r\nconst isPasswordVisible = ref(false);\r\n\r\nconst inputType = computed(() => {\r\n    if (props.passwordReveal) {\r\n        return isPasswordVisible.value ? \"text\" : \"password\";\r\n    } else {\r\n        return props.type;\r\n    }\r\n});\r\n\r\n/** Current password-reveal icon name. */\r\nconst passwordVisibleIcon = computed(() =>\r\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\r\n);\r\n\r\n/**\r\n * Toggle the visibility of a password-reveal input\r\n * by changing the type and focus the input right away.\r\n */\r\nfunction togglePasswordVisibility(): void {\r\n    isPasswordVisible.value = !isPasswordVisible.value;\r\n    nextTick(() => setFocus());\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-input__wrapper\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-input__wrapper--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\r\n        \"hasIconRightClass\",\r\n        \"o-input__wrapper--has-icon-right\",\r\n        null,\r\n        hasIconRight,\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-input\"],\r\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-input--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-input--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-input--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"textareaClass\",\r\n        \"o-input__textarea\",\r\n        null,\r\n        computed(() => props.type === \"textarea\"),\r\n    ],\r\n    [\r\n        \"iconLeftSpaceClass\",\r\n        \"o-input--iconspace-left\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n    [\"iconRightSpaceClass\", \"o-input--iconspace-right\", null, hasIconRight],\r\n);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\r\n    \"iconRightClass\",\r\n    \"o-input__icon-right\",\r\n]);\r\n\r\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div data-oruga=\"input\" :class=\"rootClasses\">\r\n        <input\r\n            v-if=\"type !== 'textarea'\"\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            :data-oruga-input=\"inputType\"\r\n            :type=\"inputType\"\r\n            :class=\"inputClasses\"\r\n            :maxlength=\"maxlength\"\r\n            :autocomplete=\"autocomplete\"\r\n            :placeholder=\"placeholder\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <textarea\r\n            v-else\r\n            v-bind=\"$attrs\"\r\n            ref=\"textareaRef\"\r\n            v-model=\"vmodel\"\r\n            data-oruga-input=\"textarea\"\r\n            :class=\"inputClasses\"\r\n            :maxlength=\"maxlength\"\r\n            :style=\"computedStyles\"\r\n            :placeholder=\"placeholder\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <o-icon\r\n            v-if=\"icon\"\r\n            :class=\"iconLeftClasses\"\r\n            :clickable=\"iconClickable\"\r\n            :icon=\"icon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            @click=\"iconClick\" />\r\n\r\n        <o-icon\r\n            v-if=\"hasIconRight\"\r\n            :class=\"iconRightClasses\"\r\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\r\n            :icon=\"computedIconRight\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            :variant=\"computedIconRightVariant\"\r\n            both\r\n            @click=\"rightIconClick\" />\r\n\r\n        <small\r\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\r\n            :class=\"counterClasses\">\r\n            {{ valueLength }} / {{ maxlength }}\r\n        </small>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    watch,\r\n    computed,\r\n    nextTick,\r\n    onBeforeUnmount,\r\n    ref,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport { getScrollingParent, unrefElement } from \"@/composables\";\r\n\r\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nconst opposites: Record<Position, Position> = {\r\n    top: \"bottom\",\r\n    bottom: \"top\",\r\n    right: \"left\",\r\n    left: \"right\",\r\n};\r\n\r\ntype Point = { x: number; y: number };\r\n\r\ndefineOptions({ inheritAttrs: false });\r\n\r\nconst props = defineProps({\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        required: true,\r\n    },\r\n    trigger: {\r\n        type: Object as PropType<HTMLElement | Component>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Position of the component relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n        default: undefined,\r\n    },\r\n    /** Used for calculation position auto */\r\n    defaultPosition: {\r\n        type: String as PropType<Position>,\r\n        validator: (value: string) =>\r\n            [\"top\", \"bottom\", \"left\", \"right\"].indexOf(value) > -1,\r\n        default: \"top\",\r\n    },\r\n    /** disable the position calculation */\r\n    disabled: { type: Boolean, default: false },\r\n    /** update positioning on teleport */\r\n    disablePositioning: { type: Boolean, default: true },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"update:position\", value: string);\r\n}>();\r\n\r\nconst teleportTo = computed(() =>\r\n    typeof props.teleport === \"boolean\" ? \"body\" : props.teleport,\r\n);\r\n\r\nconst teleportDisabled = computed(() =>\r\n    typeof props.teleport === \"boolean\" || !props.teleport\r\n        ? !props.teleport\r\n        : false,\r\n);\r\n\r\nconst contentRef = ref<HTMLElement | Component>();\r\n\r\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\r\n    contentRef.value = el;\r\n\r\n    nextTick(() => {\r\n        // update positioning\r\n        updatePositioning();\r\n        // add handler\r\n        addHandler();\r\n    });\r\n    return el;\r\n}\r\n\r\n// --- Dynamic Positioning Handling Feature ---\r\n\r\nconst initialPosition = props.position;\r\n\r\nconst scrollingParent = ref(undefined);\r\nconst resizeObserver = ref(null);\r\n\r\nif (isClient && window.ResizeObserver) {\r\n    resizeObserver.value = new window.ResizeObserver(updatePositioning);\r\n}\r\n\r\n// on content or disable state change update event listener\r\nwatch(\r\n    () => props.disabled,\r\n    () => {\r\n        if (!props.disabled) addHandler();\r\n        else removeHandler();\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n// update positioning if props change\r\nwatch(\r\n    [\r\n        () => !!props.trigger,\r\n        () => props.disablePositioning,\r\n        () => props.disabled,\r\n    ],\r\n    () => {\r\n        nextTick(() => updatePositioning());\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n// remove any event listener on unmount\r\nonBeforeUnmount(() => removeHandler());\r\n\r\n/** add event listener */\r\nfunction addHandler(): void {\r\n    if (isClient && !scrollingParent.value && contentRef.value) {\r\n        // get parent container\r\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef));\r\n        // set event listener\r\n        if (\r\n            scrollingParent.value &&\r\n            scrollingParent.value !== document.documentElement\r\n        ) {\r\n            scrollingParent.value.addEventListener(\r\n                \"scroll\",\r\n                updatePositioning,\r\n                { passive: true },\r\n            );\r\n            if (window.ResizeObserver)\r\n                resizeObserver.value.observe(scrollingParent.value);\r\n        } else {\r\n            document.addEventListener(\"scroll\", updatePositioning, {\r\n                passive: true,\r\n            });\r\n            window.addEventListener(\"resize\", updatePositioning);\r\n        }\r\n    }\r\n}\r\n\r\n/** remove event listener */\r\nfunction removeHandler(): void {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) resizeObserver.value?.disconnect();\r\n        window.removeEventListener(\"resize\", updatePositioning);\r\n        document.removeEventListener(\"scroll\", updatePositioning);\r\n        scrollingParent.value = undefined;\r\n    }\r\n}\r\n\r\n/** Update the best position set teleport positioning */\r\nfunction updatePositioning(): void {\r\n    if (props.disabled) return;\r\n    let position = props.position;\r\n    // update position if auto position is enabled\r\n    if (initialPosition === \"auto\") {\r\n        // calculate best position\r\n        position = getAutoPosition();\r\n        if (position != props.position)\r\n            // two-way bind updated position\r\n            emits(\"update:position\", position);\r\n    }\r\n    // do not set content position if not teleport enabled\r\n    if (!props.teleport) return;\r\n\r\n    const content = unrefElement(contentRef);\r\n    const trigger = unrefElement(props.trigger);\r\n\r\n    // set content position\r\n    if (content && trigger) {\r\n        const rect = trigger.getBoundingClientRect();\r\n        let top = rect.top + window.scrollY;\r\n        let left = rect.left + window.scrollX;\r\n        // define vertical positioning\r\n        if (position.includes(\"bottom\")) {\r\n            top += trigger.clientHeight;\r\n        } else if (position.includes(\"top\")) {\r\n            top -= content.clientHeight;\r\n        }\r\n        // define horizontal positioning\r\n        if (position === \"left\") {\r\n            left -= content.clientWidth;\r\n        } else if (position === \"right\") {\r\n            left += trigger.clientWidth;\r\n        } else if (position.includes(\"-right\")) {\r\n            left += trigger.clientWidth - content.clientWidth;\r\n        }\r\n\r\n        // adjust exact vertical positioning\r\n        if (position === \"top\" || position === \"bottom\") {\r\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\r\n        }\r\n        // adjust exact horizontal positioning\r\n        if (position === \"left\" || position === \"right\") {\r\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\r\n        }\r\n\r\n        // set style properties\r\n        if (props.disablePositioning) {\r\n            content.style.position = \"relative\";\r\n            content.style.top = `${top}px`;\r\n            content.style.left = `${left}px`;\r\n        } else {\r\n            content.style.position = \"\";\r\n            content.style.top = \"\";\r\n            content.style.left = \"\";\r\n        }\r\n    }\r\n}\r\n\r\n/** calculate best position if auto */\r\nfunction getAutoPosition(): string {\r\n    let bestPosition = props.defaultPosition;\r\n    if (!props.trigger || !contentRef.value) return bestPosition;\r\n    if (!scrollingParent.value) return bestPosition;\r\n\r\n    // get viewport from container\r\n    const viewRect = new DOMRect(\r\n        scrollingParent.value.offsetLeft,\r\n        scrollingParent.value.offsetTop,\r\n        scrollingParent.value.clientWidth,\r\n        scrollingParent.value.clientHeight,\r\n    );\r\n\r\n    const contentRect = unrefElement(contentRef).getBoundingClientRect();\r\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\r\n\r\n    // detect auto position\r\n    const triggerAnchors = anchors(triggerRect);\r\n    const contentAnchors = anchors(contentRect);\r\n    const contentRectAtAnchor = (pos: Position) => {\r\n        const triggerAnchor = triggerAnchors[pos];\r\n        const contentAnchor = contentAnchors[opposites[pos]];\r\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\r\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\r\n        // That offset should be small, and it's tricky to get it from the CSS.\r\n        return new DOMRect(\r\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\r\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\r\n            contentRect.width,\r\n            contentRect.height,\r\n        );\r\n    };\r\n\r\n    const defaultOpposite = opposites[props.defaultPosition];\r\n    const crossPosition =\r\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\r\n            ? \"left\"\r\n            : \"top\";\r\n    const crossOpposite = opposites[crossPosition];\r\n    // In descending order of priority\r\n    const positions: Position[] = [\r\n        props.defaultPosition,\r\n        defaultOpposite,\r\n        crossPosition,\r\n        crossOpposite,\r\n    ];\r\n    let maxOverlap = 0;\r\n    for (const position of positions) {\r\n        const overlap = intersectionArea(\r\n            viewRect,\r\n            contentRectAtAnchor(position),\r\n        );\r\n        if (overlap > maxOverlap) {\r\n            maxOverlap = overlap;\r\n            bestPosition = position;\r\n        }\r\n    }\r\n    return bestPosition;\r\n}\r\n\r\n// --- Helper Functions ---\r\n\r\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\r\n    const left = Math.max(a.left, b.left);\r\n    const right = Math.min(a.right, b.right);\r\n    const top = Math.max(a.top, b.top);\r\n    const bottom = Math.min(a.bottom, b.bottom);\r\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\r\n}\r\n\r\n/**\r\n * @param rect the bounding rectangle of the trigger element\r\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\r\n */\r\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\r\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\r\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\r\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\r\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\r\n});\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"teleportTo\" :disabled=\"teleportDisabled\">\r\n        <template v-if=\"teleportDisabled\">\r\n            <slot :set-content />\r\n        </template>\r\n        <template v-else>\r\n            <div\r\n                v-bind=\"$attrs\"\r\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\r\n                <slot :set-content />\r\n            </div>\r\n        </template>\r\n    </Teleport>\r\n</template>\r\n","const findFocusable = (element: any, programmatic = false) => {\r\n    if (!element) return null;\r\n    if (programmatic) return element.querySelectorAll(`*[tabindex=\"-1\"]`);\r\n\r\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\r\n                                     area[href],\r\n                                     input:not([disabled]),\r\n                                     select:not([disabled]),\r\n                                     textarea:not([disabled]),\r\n                                     button:not([disabled]),\r\n                                     iframe,\r\n                                     object,\r\n                                     embed,\r\n                                     *[tabindex]:not([tabindex=\"-1\"]),\r\n                                     *[contenteditable]`);\r\n};\r\n\r\nlet onKeyDown: any;\r\n\r\nconst bind = (el: any, { value = true }) => {\r\n    if (value) {\r\n        let focusable = findFocusable(el);\r\n        let focusableProg = findFocusable(el, true);\r\n\r\n        if (focusable && focusable.length > 0) {\r\n            onKeyDown = (event: any) => {\r\n                // Need to get focusable each time since it can change between key events\r\n                // ex. changing month in a datepicker\r\n                focusable = findFocusable(el);\r\n                focusableProg = findFocusable(el, true);\r\n                const firstFocusable = focusable[0];\r\n                const lastFocusable = focusable[focusable.length - 1];\r\n\r\n                if (\r\n                    event.target === firstFocusable &&\r\n                    event.shiftKey &&\r\n                    event.key === \"Tab\"\r\n                ) {\r\n                    event.preventDefault();\r\n                    lastFocusable.focus();\r\n                } else if (\r\n                    (event.target === lastFocusable ||\r\n                        Array.from(focusableProg).indexOf(event.target) >= 0) &&\r\n                    !event.shiftKey &&\r\n                    event.key === \"Tab\"\r\n                ) {\r\n                    event.preventDefault();\r\n                    firstFocusable.focus();\r\n                }\r\n            };\r\n            el.addEventListener(\"keydown\", onKeyDown);\r\n        }\r\n    }\r\n};\r\n\r\nconst unbind = (el: any) => {\r\n    el.removeEventListener(\"keydown\", onKeyDown);\r\n};\r\n\r\nconst directive = {\r\n    beforeMount: bind,\r\n    beforeUnmount: unbind,\r\n};\r\n\r\nexport default directive;\r\n\r\nexport const vTrapFocus = directive; // export composition api directive\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    watch,\r\n    onUnmounted,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { vTrapFocus } from \"@/directives/trapFocus\";\r\nimport { toCssDimension, isMobileAgent } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    unrefElement,\r\n    defineClasses,\r\n    useProviderParent,\r\n    useMatchMedia,\r\n    useEventListener,\r\n    useClickOutside,\r\n} from \"@/composables\";\r\n\r\nimport type { DropdownComponent } from \"./types\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content\r\n * @displayName Dropdown\r\n * @requires ./DropdownItem.vue\r\n * @style _dropdown.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODropdown\",\r\n    configField: \"dropdown\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [String, Number, Boolean, Object, Array],\r\n        default: undefined,\r\n    },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Trigger label, unnecessary when trgger slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Dropdown is disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Dropdown content (items) are shown inline, trigger is removed */\r\n    inline: { type: Boolean, default: false },\r\n    /** Dropdown content will be scrollable */\r\n    scrollable: { type: Boolean, default: false },\r\n    /** Max height of dropdown content */\r\n    maxHeight: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"dropdown.maxHeight\", 200),\r\n    },\r\n    /**\r\n     * Position of the dropdown relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.position\", \"bottom-left\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Dropdown content (items) are shown into a modal on mobile */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.mobileModal\", true),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.animation\", \"fade\"),\r\n    },\r\n    /** Allows multiple selections */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Trap focus inside the dropdown. */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.trapFocus\", true),\r\n    },\r\n    /** Makes the component check if menu reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"dropdown.checkScroll\", false),\r\n    },\r\n    /** Dropdown will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** HTML element ID of the dropdown menu element */\r\n    menuId: { type: String, default: null },\r\n    /** Tabindex of the dropdown menu element */\r\n    menuTabindex: { type: Number, default: null },\r\n    /** Dropdown menu tag name */\r\n    menuTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"dropdown.menuTag\", \"div\"),\r\n    },\r\n    /** Dropdown trigger tag name */\r\n    triggerTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"dropdown.triggerTag\", \"div\"),\r\n    },\r\n    /**\r\n     * Dropdown will be triggered by any events\r\n     * @values click, hover, contextmenu, focus\r\n     */\r\n    triggers: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"dropdown.triggers\", [\"click\"]),\r\n        validator: (values: string[]) =>\r\n            values.filter(\r\n                (value) =>\r\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\r\n                    -1,\r\n            ).length === values.length,\r\n    },\r\n    /** Dropdown delay before it appears (number in ms) */\r\n    delay: { type: Number, default: undefined },\r\n    /**\r\n     * Dropdown close options (pressing escape, clicking the content or outside)\r\n     * @values true, false, escape, outside, content\r\n     */\r\n    closeable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"dropdown.closeable\", [\"escape\", \"outside\", \"content\"]),\r\n    },\r\n    /** Set the tabindex attribute on the dropdown trigger div (-1 to prevent selection via tab key) */\r\n    tabindex: { type: Number, default: 0 },\r\n    /**\r\n     * Role attribute to be passed to the list container for better accessibility.\r\n     * Use menu only in situations where your dropdown is related to a navigation menu.\r\n     * @values list, listbox, menu, dialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"dropdown.ariaRole\", \"list\"),\r\n        validator: (value: string) =>\r\n            [\"list\", \"listbox\", \"menu\", \"dialog\"].indexOf(value) > -1,\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"dropdown.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"dropdown.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the dropdown is teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the trigger element */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu when inline */\r\n    inlineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the overlay when on mobile */\r\n    menuMobileOverlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown menu */\r\n    menuClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu position */\r\n    menuPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown menu when active */\r\n    menuActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of dropdown when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element indicating position of dropdown */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element indicating whether the dropdown is open */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element when the dropdown is hoverable */\r\n    hoverableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {[String, Number, Boolean, Object, Array]} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: [string, number, boolean, object, Array<any>],\r\n    ): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on change event - fired after modelValue:update\r\n     * @param value {any} selected value\r\n     */\r\n    (e: \"change\", value: any): void;\r\n    /**\r\n     * on close event\r\n     * @param method {string} close method\r\n     */\r\n    (e: \"close\", method: string): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst vmodel = defineModel<any>();\r\n\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\nconst autoPosition = ref(props.position);\r\n\r\n/** update autoPosition on prop change */\r\nwatch(\r\n    () => props.position,\r\n    (v) => (autoPosition.value = v),\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\n// check if mobile modal should be shown\r\nconst isMobileModal = computed(\r\n    () => isMobile.value && props.mobileModal && !props.inline,\r\n);\r\n\r\n// check if client is mobile native\r\nconst isMobileNative = computed(() => props.mobileModal && isMobileAgent.any());\r\n\r\nconst menuStyle = computed(() => ({\r\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\r\n    overflow: props.scrollable ? \"auto\" : null,\r\n}));\r\n\r\nconst hoverable = computed(() => props.triggers.indexOf(\"hover\") >= 0);\r\n\r\n// --- Event Handler ---\r\n\r\nconst contentRef = ref<HTMLElement | Component>();\r\nconst triggerRef = ref<HTMLElement>();\r\n\r\nconst eventCleanups = [];\r\nlet timer: NodeJS.Timeout;\r\n\r\nwatch(\r\n    isActive,\r\n    (value) => {\r\n        // on active set event handler\r\n        if (value && isClient) {\r\n            setTimeout(() => {\r\n                if (cancelOptions.value.indexOf(\"outside\") >= 0) {\r\n                    // set outside handler\r\n                    eventCleanups.push(\r\n                        useClickOutside(contentRef, onClickedOutside, [\r\n                            triggerRef,\r\n                        ]),\r\n                    );\r\n                }\r\n\r\n                if (cancelOptions.value.indexOf(\"escape\") >= 0) {\r\n                    // set keyup handler\r\n                    eventCleanups.push(\r\n                        useEventListener(\"keyup\", onKeyPress, document, {\r\n                            immediate: true,\r\n                        }),\r\n                    );\r\n                }\r\n            });\r\n        } else if (!value) {\r\n            // on close cleanup event handler\r\n            eventCleanups.forEach((fn) => fn());\r\n            eventCleanups.length = 0;\r\n        }\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\nonUnmounted(() => {\r\n    // on close cleanup event handler\r\n    eventCleanups.forEach((fn) => fn());\r\n    eventCleanups.length = 0;\r\n});\r\n\r\nconst cancelOptions = computed(() =>\r\n    typeof props.closeable === \"boolean\"\r\n        ? props.closeable\r\n            ? [\"escape\", \"outside\", \"content\"]\r\n            : []\r\n        : props.closeable,\r\n);\r\n\r\n/** Close dropdown if clicked outside. */\r\nfunction onClickedOutside(): void {\r\n    if (!isActive.value || props.inline) return;\r\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\r\n    emits(\"close\", \"outside\");\r\n    isActive.value = false;\r\n}\r\n\r\n/** Keypress event that is bound to the document */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\r\n        emits(\"close\", \"escape\");\r\n        isActive.value = false;\r\n    }\r\n}\r\n\r\nfunction onClick(): void {\r\n    if (props.triggers.indexOf(\"click\") < 0) return;\r\n    toggle();\r\n}\r\n\r\nfunction onContextMenu(event: MouseEvent): void {\r\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\r\n    event.preventDefault();\r\n    open();\r\n}\r\n\r\nfunction onFocus(): void {\r\n    if (props.triggers.indexOf(\"focus\") < 0) return;\r\n    open();\r\n}\r\n\r\nconst isHovered = ref(false);\r\nfunction onHover(): void {\r\n    if (!isMobileNative.value && props.triggers.indexOf(\"hover\") >= 0) {\r\n        isHovered.value = true;\r\n        open();\r\n    }\r\n}\r\nfunction onHoverLeave(): void {\r\n    if (!isMobileNative.value && isHovered.value) {\r\n        isHovered.value = false;\r\n        onClose();\r\n    }\r\n}\r\n\r\n/** Toggle dropdown if it's not disabled. */\r\nfunction toggle(): void {\r\n    if (props.disabled) return;\r\n    if (isActive.value) isActive.value = !isActive.value;\r\n    // if not active, toggle after clickOutside event\r\n    // this fixes toggling programmatic\r\n    else nextTick(() => (isActive.value = !isActive.value));\r\n}\r\n\r\nfunction open(): void {\r\n    if (props.disabled) return;\r\n    if (props.delay) {\r\n        timer = setTimeout(() => {\r\n            isActive.value = true;\r\n            timer = null;\r\n        }, props.delay);\r\n    } else {\r\n        isActive.value = true;\r\n    }\r\n}\r\n\r\nfunction onClose(): void {\r\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n    emits(\"close\", \"content\");\r\n    isActive.value = !props.closeable;\r\n    if (timer && props.closeable) clearTimeout(timer);\r\n}\r\n\r\n// --- InfitiveScroll Feature ---\r\n\r\nif (isClient && props.checkScroll)\r\n    useEventListener(\"scroll\", checkDropdownScroll, contentRef);\r\n\r\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\r\nfunction checkDropdownScroll(): void {\r\n    const dropdown = unrefElement(contentRef.value);\r\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\r\n        if (\r\n            dropdown.scrollTop + dropdown.clientHeight >=\r\n            dropdown.scrollHeight\r\n        ) {\r\n            emits(\"scroll-end\");\r\n        } else if (dropdown.scrollTop <= 0) {\r\n            emits(\"scroll-start\");\r\n        }\r\n    }\r\n}\r\n\r\n// --- Dependency Injection Feature ---\r\n\r\n/**\r\n * Click listener from DropdownItem.\r\n *   1. Set new selected item.\r\n *   2. Emit input event to update the user v-model.\r\n *   3. Close the dropdown.\r\n */\r\nfunction selectItem(value: any): void {\r\n    if (props.multiple) {\r\n        if (vmodel.value && Array.isArray(vmodel.value)) {\r\n            if (vmodel.value.indexOf(value) === -1) {\r\n                // add a value\r\n                vmodel.value = [...vmodel.value, value];\r\n            } else {\r\n                // remove a value\r\n                vmodel.value = vmodel.value.filter((val) => val !== value);\r\n            }\r\n        } else {\r\n            // init new value array\r\n            vmodel.value = [value];\r\n        }\r\n        // emit change after vmodel has changed\r\n        nextTick(() => emits(\"change\", vmodel.value));\r\n    } else {\r\n        if (vmodel.value !== value) {\r\n            // update a single value\r\n            vmodel.value = value;\r\n            // emit change after vmodel has changed\r\n            nextTick(() => emits(\"change\", vmodel.value));\r\n        }\r\n    }\r\n    if (!props.multiple) {\r\n        if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n        emits(\"close\", \"content\");\r\n        isActive.value = false;\r\n        isHovered.value = false;\r\n    }\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<DropdownComponent>(() => ({\r\n    props,\r\n    selected: vmodel.value,\r\n    selectItem,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(contentRef, { data: provideData });\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-drop\"],\r\n    [\"disabledClass\", \"o-drop--disabled\", null, computed(() => props.disabled)],\r\n    [\"expandedClass\", \"o-drop--expanded\", null, computed(() => props.expanded)],\r\n    [\"inlineClass\", \"o-drop--inline\", null, computed(() => props.inline)],\r\n    [\r\n        \"mobileClass\",\r\n        \"o-drop--mobile\",\r\n        null,\r\n        computed(() => isMobileModal.value && !hoverable.value),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-drop--position-\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"activeClass\",\r\n        \"o-drop--active\",\r\n        null,\r\n        computed(() => isActive.value || props.inline),\r\n    ],\r\n    [\"hoverableClass\", \"o-drop--hoverable\", null, hoverable],\r\n);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-drop__trigger\"]);\r\n\r\nconst positionWrapperClasses = defineClasses([\r\n    \"teleportClass\",\r\n    \"o-drop--teleport\",\r\n    null,\r\n    computed(() => !!props.teleport),\r\n]);\r\n\r\nconst menuMobileOverlayClasses = defineClasses([\r\n    \"menuMobileOverlayClass\",\r\n    \"o-drop__overlay\",\r\n]);\r\n\r\nconst menuClasses = defineClasses(\r\n    [\"menuClass\", \"o-drop__menu\"],\r\n    [\r\n        \"menuPositionClass\",\r\n        \"o-drop__menu--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"menuActiveClass\",\r\n        \"o-drop__menu--active\",\r\n        null,\r\n        computed(() => isActive.value || props.inline),\r\n    ],\r\n);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ $trigger: triggerRef, $content: contentRef });\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        data-oruga=\"dropdown\"\r\n        :class=\"rootClasses\"\r\n        @mouseleave=\"onHoverLeave\"\r\n        @focusout=\"onHoverLeave\">\r\n        <component\r\n            :is=\"triggerTag\"\r\n            v-if=\"!inline\"\r\n            ref=\"triggerRef\"\r\n            :tabindex=\"disabled ? null : tabindex\"\r\n            :class=\"triggerClasses\"\r\n            :aria-haspopup=\"ariaRole === 'list' ? true : ariaRole\"\r\n            @click=\"onClick\"\r\n            @contextmenu=\"onContextMenu\"\r\n            @mouseenter=\"onHover\"\r\n            @focus.capture=\"onFocus\">\r\n            <!--\r\n                @slot Override the trigger element, default is label prop\r\n                @binding {boolean} active - dropdown active state\r\n            -->\r\n            <slot name=\"trigger\" :active=\"isActive\">\r\n                {{ label }}\r\n            </slot>\r\n        </component>\r\n\r\n        <PositionWrapper\r\n            v-slot=\"{ setContent }\"\r\n            v-model:position=\"autoPosition\"\r\n            :teleport=\"teleport\"\r\n            :class=\"[...rootClasses, ...positionWrapperClasses]\"\r\n            :trigger=\"triggerRef\"\r\n            :disabled=\"!isActive\"\r\n            default-position=\"bottom\"\r\n            :disable-positioning=\"!isMobileModal\">\r\n            <transition :name=\"animation\">\r\n                <div\r\n                    v-if=\"isMobileModal\"\r\n                    v-show=\"isActive\"\r\n                    :tabindex=\"-1\"\r\n                    :class=\"menuMobileOverlayClasses\"\r\n                    :aria-hidden=\"disabled || !isActive\" />\r\n            </transition>\r\n\r\n            <transition :name=\"animation\">\r\n                <component\r\n                    :is=\"menuTag\"\r\n                    v-show=\"(!disabled && (isActive || isHovered)) || inline\"\r\n                    :id=\"menuId\"\r\n                    :ref=\"(el) => (contentRef = setContent(el))\"\r\n                    v-trap-focus=\"trapFocus\"\r\n                    :tabindex=\"menuTabindex\"\r\n                    :class=\"menuClasses\"\r\n                    :style=\"menuStyle\"\r\n                    :role=\"ariaRole\"\r\n                    :aria-hidden=\"disabled || !isActive\"\r\n                    :aria-modal=\"!inline && trapFocus\">\r\n                    <!--\r\n                        @slot Place dropdown items here\r\n                        @binding {boolean} active - dropdown active state\r\n                        @binding {boolean} toggle - toggle active state function\r\n                    -->\r\n                    <slot :active=\"isActive\" :toggle=\"toggle\" />\r\n                </component>\r\n            </transition>\r\n        </PositionWrapper>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\" generic=\"T\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid, isEqual } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { DropdownComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Dropdown Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODropdownItem\",\r\n    configField: \"dropdown\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** The value that will be returned on events and v-model - default is a uuid */\r\n    value: {\r\n        type: [String, Number, Boolean, Object, Array] as PropType<T>,\r\n        default: undefined, // () => uuid(),\r\n    },\r\n    /** Item label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Item is disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Item is clickable and emit an event */\r\n    clickable: { type: Boolean, default: true },\r\n    /** Dropdown item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"dropdown.itemTag\", \"div\"),\r\n    },\r\n    /** Set the tabindex attribute on the dropdown item div (-1 to prevent selection via tab key) */\r\n    tabindex: { type: [Number, String], default: 0 },\r\n    /**\r\n     * Role attribute to be passed to the list item for better accessibility.\r\n     * Use menuitem only in situations where your dropdown is related to a navigation menu.\r\n     * @values listitem, menuitem, button\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"dropdown.itemAriaRole\", \"listitem\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the dropdown item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when active  */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when clickable */\r\n    itemClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the dropdown item when disabled */\r\n    itemDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * onclick event\r\n     * @param value {[String, Number, Boolean, Object, Array]} value prop data\r\n     * @param event {event} Native Event\r\n     */\r\n    (e: \"click\", value: T, event: Event): void;\r\n}>();\r\n\r\nconst itemValue = computed(() => (props.value || uuid()) as T);\r\n\r\n// Inject functionalities and data from the parent component\r\nconst { parent } = useProviderChild<DropdownComponent<T>>();\r\n\r\nconst isClickable = computed(\r\n    () => !parent.value.props.disabled && !props.disabled && props.clickable,\r\n);\r\n\r\nconst isActive = computed(() => {\r\n    if (parent.value.selected === null) return false;\r\n    if (parent.value.props.multiple && Array.isArray(parent.value.selected))\r\n        return parent.value.selected.some((selected) =>\r\n            isEqual(itemValue.value, selected),\r\n        );\r\n    return isEqual(itemValue.value, parent.value.selected);\r\n});\r\n\r\n/** Click listener, select the item. */\r\nfunction selectItem(event: Event): void {\r\n    if (!isClickable.value) return;\r\n    parent.value.selectItem(itemValue.value);\r\n    emits(\"click\", itemValue.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"itemClass\", \"o-drop__item\"],\r\n    [\r\n        \"itemDisabledClass\",\r\n        \"o-drop__item--disabled\",\r\n        null,\r\n        computed(() => parent.value.props.disabled || props.disabled),\r\n    ],\r\n    [\"itemActiveClass\", \"o-drop__item--active\", null, isActive],\r\n    [\"itemClickableClass\", \"o-drop__item--clickable\", null, isClickable],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"tag\"\r\n        :class=\"rootClasses\"\r\n        :role=\"ariaRole\"\r\n        :tabindex=\"tabindex\"\r\n        data-oruga=\"dropdown-item\"\r\n        @click=\"selectItem\">\r\n        <!--\r\n            @slot Override the label, default is label prop \r\n        -->\r\n        <slot>{{ label }}</slot>\r\n    </component>\r\n</template>\r\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    watch,\r\n    watchEffect,\r\n    useAttrs,\r\n    toRaw,\r\n    onMounted,\r\n    useSlots,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport OInput from \"../input/Input.vue\";\r\nimport ODropdown from \"../dropdown/Dropdown.vue\";\r\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { getValueByPath, uuid } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    unrefElement,\r\n    defineClasses,\r\n    useInputHandler,\r\n    useDebounce,\r\n    useEventListener,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent, ClassBind } from \"@/types\";\r\n\r\nenum SpecialOption {\r\n    Header,\r\n    Footer,\r\n}\r\n\r\n/** True if the specified option is a special option. */\r\nfunction isSpecialOption(option: any): option is SpecialOption {\r\n    return option in SpecialOption;\r\n}\r\n\r\n/**\r\n * Extended input that provide suggestions while the user types\r\n * @displayName Autocomplete\r\n * @style _autocomplete.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OAutocomplete\",\r\n    configField: \"autocomplete\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: undefined },\r\n    /** Input type */\r\n    type: { type: String, default: \"text\" },\r\n    /** Menu tag name */\r\n    menuTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"autocomplete.menuTag\", \"div\"),\r\n    },\r\n    /** Menu item tag name */\r\n    itemTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"autocomplete.itemTag\", \"div\"),\r\n    },\r\n    /** Options / suggestions */\r\n    data: { type: Array as PropType<T[]>, default: () => [] },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.size\"),\r\n    },\r\n    /**\r\n     * Position of the dropdown\r\n     * @values auto, top, bottom\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.position\", \"auto\"),\r\n        validator: (value: string) =>\r\n            [\"auto\", \"top\", \"bottom\"].indexOf(value) >= 0,\r\n    },\r\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\r\n    field: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\r\n    groupField: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\r\n    groupOptions: { type: String, default: undefined },\r\n    /** Function to format an option to a string for display in the input (as alternative to field prop) */\r\n    formatter: {\r\n        type: Function as PropType<(value: unknown) => string | number>,\r\n        default: undefined,\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native input disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: Number, default: undefined },\r\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.checkScroll\", false),\r\n    },\r\n    /** Number of milliseconds to delay before to emit input event */\r\n    debounce: {\r\n        type: Number,\r\n        default: () => getOption(\"autocomplete.debounce\", 400),\r\n    },\r\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\r\n    keepFirst: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepFirst\", false),\r\n    },\r\n    /** Clear input text on select */\r\n    clearOnSelect: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.clearOnSelect\", false),\r\n    },\r\n    /** Open dropdown list on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.openOnFocus\", false),\r\n    },\r\n    /** Keep open dropdown list after select */\r\n    keepOpen: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepOpen\", false),\r\n    },\r\n    /** Max height of dropdown content */\r\n    maxHeight: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"autocomplete.maxHeight\"),\r\n    },\r\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\r\n    confirmKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"autocomplete.confirmKeys\", [\"Tab\", \"Enter\"]),\r\n    },\r\n    /** Dropdown content (items) are shown into a modal on mobile */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.mobileModal\", false),\r\n    },\r\n    /** Transition name to apply on dropdown list */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.animation\", \"fade\"),\r\n    },\r\n    /** Trigger the select event for the first pre-selected option when clicking outside and `keep-first` is enabled */\r\n    selectOnClickOutside: { type: Boolean, default: false },\r\n    /** Allows the header in the autocomplete to be selectable */\r\n    selectableHeader: { type: Boolean, default: false },\r\n    /** Allows the footer in the autocomplete to be selectable */\r\n    selectableFooter: { type: Boolean, default: false },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Add a button/icon to clear the inputed text */\r\n    clearable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.clearable\", false),\r\n    },\r\n    /** Icon name to be added on the clear button */\r\n    clearIcon: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.clearIcon\", \"close-circle\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"autocomplete.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"autocomplete.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items on hover */\r\n    itemHoverClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu items group title */\r\n    itemGroupTitleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu empty placeholder item */\r\n    itemEmptyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu header item */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu footer item */\r\n    itemFooterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Classes to apply on internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"autocomplete.inputClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string | number} input value\r\n     */\r\n    (e: \"input\", value: string | number): void;\r\n    /**\r\n     * selected element changed event\r\n     * @param value {string | number | object} selected value\r\n     */\r\n    (e: \"select\", value: T, evt: Event): void;\r\n    /**\r\n     * header is selected\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"select-header\", event: Event): void;\r\n    /**\r\n     * footer is selected\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"select-footer\", event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\nconst inputRef = ref<InstanceType<typeof OInput>>();\r\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\r\nconst footerRef = ref<HTMLElement>();\r\nconst headerRef = ref<HTMLElement>();\r\nconst itemRefs = ref([]);\r\n\r\nfunction setItemRef(\r\n    el: HTMLElement | Component,\r\n    groupIndex: number,\r\n    itemIndex: number,\r\n): void {\r\n    if (groupIndex === 0 && itemIndex === 0) itemRefs.value.splice(0);\r\n    if (el) itemRefs.value.push(el);\r\n}\r\n\r\n// use form input functionalities\r\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\r\n    useInputHandler(inputRef, emits, props);\r\n\r\nconst vmodel = defineModel<string | number>({ default: undefined });\r\n\r\nconst isActive = ref(false);\r\n\r\nconst selectedOption = ref<T>();\r\nconst hoveredOption = ref<T>();\r\nconst headerHovered = ref(false);\r\nconst footerHovered = ref(false);\r\n\r\nconst hoveredId = ref(null);\r\nconst menuId = uuid();\r\n\r\n/**\r\n * When updating input's value\r\n *   1. If value isn't the same as selected, set null\r\n *   2. Close dropdown if value is clear or else open it\r\n */\r\nwatch(\r\n    () => vmodel.value,\r\n    (value) => {\r\n        // Check if selected is invalid\r\n        const currentValue = getValue(selectedOption.value);\r\n        if (currentValue && currentValue !== value) setSelected(null, false);\r\n\r\n        nextTick(() => {\r\n            // Close dropdown if data is empty\r\n            if (isEmpty.value && !slots.empty) isActive.value = false;\r\n            // Close dropdown if input is clear or else open it\r\n            else if (isFocused.value && (!props.openOnFocus || value))\r\n                isActive.value = !!value;\r\n        });\r\n    },\r\n);\r\n\r\n/** Select first option if \"keep-first\" */\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        // Keep first option always pre-selected\r\n        if (props.keepFirst) {\r\n            nextTick(() => {\r\n                if (isActive.value) selectFirstOption();\r\n                else setHovered(null);\r\n            });\r\n        } else if (hoveredOption.value) {\r\n            // reset hovered if list doesn't contain it\r\n            const hoveredValue = getValue(hoveredOption.value);\r\n            const data = computedData.value\r\n                .map((d) => d.items)\r\n                .reduce((a, b) => [...a, ...b], []);\r\n            const index = data.findIndex((d) => getValue(d) === hoveredValue);\r\n            if (index >= 0) nextTick(() => setHoveredIdToIndex(index));\r\n            else setHovered(null);\r\n        }\r\n    },\r\n);\r\n\r\nconst computedData = computed<{ items: any; group?: any }[]>(() => {\r\n    if (props.groupField) {\r\n        if (props.groupOptions)\r\n            return props.data.map((option) => {\r\n                const group = getValueByPath(option, props.groupField);\r\n                const items = getValueByPath(option, props.groupOptions);\r\n                return { group, items };\r\n            });\r\n        else\r\n            return Object.keys(props.data).map((group) => ({\r\n                group,\r\n                items: props.data[group],\r\n            }));\r\n    }\r\n    // Return no data to avoid the full list to be shown when clearing input\r\n    if (!props.openOnFocus && !props.keepOpen && vmodel.value === \"\") {\r\n        // ...already returned nothing and dropdown closed.\r\n        return [{ items: [] }];\r\n    }\r\n    return [{ items: props.data }];\r\n});\r\n\r\nconst isEmpty = computed(\r\n    () =>\r\n        !computedData.value?.some(\r\n            (element) => element.items && element.items.length,\r\n        ),\r\n);\r\n\r\nwatch(isEmpty, (empty) => {\r\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\r\n});\r\n\r\nconst closeableOptions = computed(() => {\r\n    const options = [\"escape\"];\r\n    if (!props.keepOpen) {\r\n        options.push(\"content\");\r\n        options.push(\"outside\");\r\n    }\r\n    return options;\r\n});\r\n\r\nfunction onDropdownClose(method: string): void {\r\n    if (method === \"outside\") {\r\n        if (\r\n            props.keepFirst &&\r\n            hoveredOption.value &&\r\n            props.selectOnClickOutside\r\n        )\r\n            setSelected(hoveredOption.value, true);\r\n    }\r\n}\r\n\r\n/**\r\n * Return display text for a input option.\r\n * If object, get value from path based on given field, or else just the value.\r\n * Apply a formatter function to the label if given.\r\n */\r\nfunction getValue(option: T): string {\r\n    if (!option) return \"\";\r\n\r\n    const property =\r\n        props.field && typeof option === \"object\"\r\n            ? getValueByPath(option, props.field)\r\n            : option;\r\n\r\n    const label =\r\n        typeof props.formatter === \"function\"\r\n            ? props.formatter(property)\r\n            : property;\r\n\r\n    return label || \"\";\r\n}\r\n\r\n/** Set which option is currently hovered. */\r\nfunction setHovered(option: T | SpecialOption): void {\r\n    if (option === undefined) return;\r\n    hoveredOption.value = isSpecialOption(option) ? null : option;\r\n    headerHovered.value = option === SpecialOption.Header;\r\n    footerHovered.value = option === SpecialOption.Footer;\r\n    hoveredId.value = null;\r\n}\r\n\r\n/** Set which option is the aria-activedescendant by index. */\r\nfunction setHoveredIdToIndex(index: number): void {\r\n    const element = unrefElement(itemRefs.value[index]);\r\n    hoveredId.value = element ? element.id : null;\r\n}\r\n\r\n/**\r\n * Set which option is currently selected, update v-model,\r\n * update input value and close dropdown.\r\n */\r\nfunction setSelected(option: T, closeDropdown = true, event = undefined): void {\r\n    if (option === undefined) return;\r\n    selectedOption.value = option;\r\n    emits(\"select\", selectedOption.value, event);\r\n    if (selectedOption.value !== null) {\r\n        if (props.clearOnSelect) {\r\n            const input = inputRef.value.$el.querySelector(\"input\");\r\n            input.value = \"\";\r\n        } else {\r\n            vmodel.value = getValue(selectedOption.value);\r\n        }\r\n        setHovered(null);\r\n    }\r\n    if (closeDropdown) nextTick(() => (isActive.value = false));\r\n    checkHtml5Validity();\r\n}\r\n\r\n/** Select first option */\r\nfunction selectFirstOption(): void {\r\n    nextTick(() => {\r\n        const nonEmptyElements = computedData.value.filter(\r\n            (element) => element.items && element.items.length,\r\n        );\r\n        if (nonEmptyElements.length) {\r\n            const option = nonEmptyElements[0].items[0];\r\n            setHovered(option);\r\n            setHoveredIdToIndex(0);\r\n        } else {\r\n            setHovered(null);\r\n        }\r\n    });\r\n}\r\n\r\n/** Check if header or footer was selected. */\r\nfunction selectHeaderOrFooterByClick(\r\n    event: Event,\r\n    origin?: SpecialOption,\r\n    closeDropdown = true,\r\n): void {\r\n    if (\r\n        props.selectableHeader &&\r\n        (headerHovered.value || origin === SpecialOption.Header)\r\n    ) {\r\n        emits(\"select-header\", event);\r\n        if (origin) setHovered(null);\r\n        if (closeDropdown) isActive.value = false;\r\n    }\r\n    if (\r\n        props.selectableFooter &&\r\n        (footerHovered.value || origin === SpecialOption.Footer)\r\n    ) {\r\n        emits(\"select-footer\", event);\r\n        if (origin) setHovered(null);\r\n        if (closeDropdown) isActive.value = false;\r\n    }\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/**\r\n * Arrows keys listener.\r\n * If dropdown is active, set hovered option, or else just open.\r\n */\r\nfunction navigateItem(direction: 1 | -1): void {\r\n    if (!isActive.value) {\r\n        isActive.value = true;\r\n        return;\r\n    }\r\n\r\n    const data = computedData.value\r\n        .map((d) => d.items)\r\n        .reduce((a, b) => [...a, ...b], []);\r\n\r\n    // add header / footer if selectable\r\n    if (headerRef.value && props.selectableHeader) data.unshift(undefined);\r\n    if (footerRef.value && props.selectableFooter) data.push(undefined);\r\n\r\n    // define current index\r\n    let index = data.map(toRaw).indexOf(toRaw(hoveredOption.value));\r\n    if (headerHovered.value) index = 0 + direction;\r\n    else if (footerHovered.value) index = data.length - 1 + direction;\r\n    else index = index + direction;\r\n\r\n    // check if index overflow\r\n    index = index > data.length - 1 ? data.length - 1 : index;\r\n    // check if index underflow\r\n    index = index < 0 ? 0 : index;\r\n\r\n    // set hover state\r\n    if (footerRef.value && props.selectableFooter && index === data.length - 1)\r\n        setHovered(SpecialOption.Footer);\r\n    else if (headerRef.value && props.selectableHeader && index === 0)\r\n        setHovered(SpecialOption.Header);\r\n    else setHovered(data[index] !== undefined ? data[index] : null);\r\n\r\n    // get items from input\r\n    let items = itemRefs.value || [];\r\n    if (headerRef.value && props.selectableHeader)\r\n        items = [headerRef.value, ...items];\r\n    if (footerRef.value && props.selectableFooter)\r\n        items = [...items, footerRef.value];\r\n\r\n    const element = unrefElement(items[index]);\r\n    if (!element) return;\r\n\r\n    // set aria-activedescendant\r\n    hoveredId.value = element.id;\r\n\r\n    // define scroll position\r\n    const dropdownMenu = unrefElement(dropdownRef.value.$content);\r\n    const visMin = dropdownMenu.scrollTop;\r\n    const visMax =\r\n        dropdownMenu.scrollTop +\r\n        dropdownMenu.clientHeight -\r\n        element.clientHeight;\r\n\r\n    if (element.offsetTop < visMin) {\r\n        // is scolled top\r\n        dropdownMenu.scrollTop = element.offsetTop;\r\n    } else if (element.offsetTop >= visMax) {\r\n        // is scolled bottom\r\n        dropdownMenu.scrollTop =\r\n            element.offsetTop -\r\n            dropdownMenu.clientHeight +\r\n            element.clientHeight;\r\n    }\r\n    // trigger scroll\r\n    if (props.checkScroll) checkDropdownScroll();\r\n}\r\n\r\n/**\r\n * Key listener.\r\n * Select the hovered option.\r\n */\r\nfunction onKeydown(event: KeyboardEvent): void {\r\n    // prevent emit submit event\r\n    if (event.key === \"Enter\") event.preventDefault();\r\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\r\n        // If adding by comma, don't add the comma to the input\r\n        if (event.key === \",\") event.preventDefault();\r\n        // Close dropdown on select by Tab\r\n        const closeDropdown = !props.keepOpen || event.key === \"Tab\";\r\n        if (hoveredOption.value === null) {\r\n            // header and footer uses headerHovered && footerHovered. If header or footer\r\n            // was selected then fire event otherwise just return so a value isn't selected\r\n            selectHeaderOrFooterByClick(event, null, closeDropdown);\r\n            return;\r\n        }\r\n        setSelected(hoveredOption.value, closeDropdown, event);\r\n    }\r\n}\r\n\r\n/**\r\n * Focus listener.\r\n * If value is the same as selected, select all text.\r\n */\r\nfunction handleFocus(event: Event): void {\r\n    if (getValue(selectedOption.value) === vmodel.value) {\r\n        inputRef.value.$el.querySelector(\"input\").select();\r\n    }\r\n    if (props.openOnFocus) {\r\n        isActive.value = true;\r\n        if (props.keepFirst)\r\n            // If open on focus, update the hovered\r\n            selectFirstOption();\r\n    }\r\n    onFocus(event);\r\n}\r\n\r\n/**\r\n * Blur listener.\r\n * Close on blur.\r\n */\r\nfunction handleBlur(event: Event): void {\r\n    onBlur(event);\r\n}\r\n\r\n/** emit input change event */\r\nfunction onInput(value: string | number): void {\r\n    const currentValue = getValue(selectedOption.value);\r\n    if (currentValue && currentValue === vmodel.value) return;\r\n    debouncedInput(value);\r\n}\r\n\r\nlet debouncedInput = useDebounce(emitInput, props.debounce || 0);\r\n\r\nwatchEffect(() => {\r\n    debouncedInput = useDebounce(emitInput, props.debounce);\r\n});\r\n\r\nfunction emitInput(value: string | number): void {\r\n    emits(\"input\", value);\r\n    checkHtml5Validity();\r\n}\r\n\r\n// --- Icon Feature ---\r\n\r\nconst computedIconRight = computed(() =>\r\n    props.clearable && vmodel.value && props.clearIcon\r\n        ? props.clearIcon\r\n        : props.iconRight,\r\n);\r\n\r\nconst computedIconRightClickable = computed(() =>\r\n    props.clearable ? true : props.iconRightClickable,\r\n);\r\n\r\nfunction rightIconClick(event: Event): void {\r\n    if (props.clearable) {\r\n        vmodel.value = \"\";\r\n        setSelected(null, false);\r\n        if (props.openOnFocus) setFocus();\r\n    } else emits(\"icon-right-click\", event);\r\n}\r\n\r\n// --- InfitiveScroll Feature ---\r\n\r\nonMounted(() => {\r\n    if (isClient && props.checkScroll)\r\n        useEventListener(\r\n            \"scroll\",\r\n            checkDropdownScroll,\r\n            dropdownRef.value.$content,\r\n            { immediate: true },\r\n        );\r\n});\r\n\r\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\r\nfunction checkDropdownScroll(): void {\r\n    const dropdown = unrefElement(dropdownRef.value.$content);\r\n    if (!dropdown) return;\r\n    const trashhold = dropdown.offsetTop;\r\n    const headerHeight = headerRef.value?.clientHeight || 0;\r\n    const footerHeight = (footerRef.value?.clientHeight || 0) + trashhold;\r\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\r\n        if (\r\n            dropdown.scrollTop + dropdown.clientHeight + footerHeight >=\r\n            dropdown.scrollHeight\r\n        ) {\r\n            emits(\"scroll-end\");\r\n        } else if (dropdown.scrollTop <= headerHeight) {\r\n            emits(\"scroll-start\");\r\n        }\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\nconst inputBind = computed(() => ({\r\n    ...attrs,\r\n    ...props.inputClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-acp\"]);\r\n\r\nconst itemClasses = defineClasses([\"itemClass\", \"o-acp__item\"]);\r\n\r\nconst itemEmptyClasses = defineClasses([\r\n    \"itemEmptyClass\",\r\n    \"o-acp__item--empty\",\r\n]);\r\n\r\nconst itemGroupClasses = defineClasses([\r\n    \"itemGroupTitleClass\",\r\n    \"o-acp__item-group-title\",\r\n]);\r\n\r\nconst itemHeaderClasses = defineClasses(\r\n    [\"itemHeaderClass\", \"o-acp__item-header\"],\r\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, headerHovered],\r\n);\r\n\r\nconst itemFooterClasses = defineClasses(\r\n    [\"itemFooterClass\", \"o-acp__item-footer\"],\r\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, footerHovered],\r\n);\r\n\r\nfunction itemOptionClasses(option): ClassBind[] {\r\n    const optionClasses = defineClasses([\r\n        \"itemHoverClass\",\r\n        \"o-acp__item--hover\",\r\n        null,\r\n        toRaw(option) === toRaw(hoveredOption.value),\r\n    ]);\r\n\r\n    return [...itemClasses.value, ...optionClasses.value];\r\n}\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <o-dropdown\r\n        ref=\"dropdownRef\"\r\n        v-model=\"selectedOption\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"autocomplete\"\r\n        :class=\"rootClasses\"\r\n        :menu-id=\"menuId\"\r\n        :menu-tabindex=\"-1\"\r\n        :menu-tag=\"menuTag\"\r\n        scrollable\r\n        aria-role=\"listbox\"\r\n        :tabindex=\"-1\"\r\n        :trap-focus=\"false\"\r\n        :triggers=\"[]\"\r\n        :disabled=\"disabled\"\r\n        :closeable=\"closeableOptions\"\r\n        :mobile-modal=\"mobileModal\"\r\n        :max-height=\"maxHeight\"\r\n        :animation=\"animation\"\r\n        :position=\"position\"\r\n        :teleport=\"teleport\"\r\n        :expanded=\"expanded\"\r\n        @close=\"onDropdownClose\">\r\n        <template #trigger>\r\n            <o-input\r\n                ref=\"inputRef\"\r\n                v-bind=\"inputBind\"\r\n                v-model=\"vmodel\"\r\n                :type=\"type\"\r\n                :size=\"size\"\r\n                :rounded=\"rounded\"\r\n                :icon=\"icon\"\r\n                :icon-right=\"computedIconRight\"\r\n                :icon-right-clickable=\"computedIconRightClickable\"\r\n                :icon-pack=\"iconPack\"\r\n                :placeholder=\"placeholder\"\r\n                :maxlength=\"maxlength\"\r\n                :autocomplete=\"autocomplete\"\r\n                :use-html5-validation=\"false\"\r\n                role=\"combobox\"\r\n                :aria-activedescendant=\"hoveredId\"\r\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\r\n                :aria-controls=\"menuId\"\r\n                :aria-expanded=\"isActive\"\r\n                :expanded=\"expanded\"\r\n                :disabled=\"disabled\"\r\n                :status-icon=\"statusIcon\"\r\n                @update:model-value=\"onInput\"\r\n                @focus=\"handleFocus\"\r\n                @blur=\"handleBlur\"\r\n                @invalid=\"onInvalid\"\r\n                @keydown=\"onKeydown\"\r\n                @keydown.up.prevent=\"navigateItem(-1)\"\r\n                @keydown.down.prevent=\"navigateItem(1)\"\r\n                @icon-click=\"(event) => $emit('icon-click', event)\"\r\n                @icon-right-click=\"rightIconClick\" />\r\n        </template>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"$slots.header\"\r\n            :id=\"`${menuId}-header`\"\r\n            ref=\"headerRef\"\r\n            :tag=\"itemTag\"\r\n            aria-role=\"option\"\r\n            :aria-selected=\"headerHovered\"\r\n            :tabindex=\"-1\"\r\n            :class=\"[...itemClasses, ...itemHeaderClasses]\"\r\n            @click=\"\r\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Header)\r\n            \">\r\n            <!--\r\n                @slot Define an additional header\r\n            -->\r\n            <slot name=\"header\" />\r\n        </o-dropdown-item>\r\n\r\n        <template v-for=\"(element, groupindex) in computedData\">\r\n            <o-dropdown-item\r\n                v-if=\"element.group\"\r\n                :key=\"groupindex + 'group'\"\r\n                :tag=\"itemTag\"\r\n                :tabindex=\"-1\"\r\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\r\n                <!--\r\n                    @slot Override the option grpup\r\n                    @binding {object} group - options group\r\n                    @binding {number} index - option index\r\n                -->\r\n                <slot\r\n                    v-if=\"$slots.group\"\r\n                    name=\"group\"\r\n                    :group=\"element.group\"\r\n                    :index=\"groupindex\" />\r\n                <span v-else>\r\n                    {{ element.group }}\r\n                </span>\r\n            </o-dropdown-item>\r\n\r\n            <o-dropdown-item\r\n                v-for=\"(option, index) in element.items\"\r\n                :id=\"`${menuId}-${groupindex}-${index}`\"\r\n                :key=\"groupindex + ':' + index\"\r\n                :ref=\"(el) => setItemRef(el, groupindex, index)\"\r\n                :value=\"option\"\r\n                :tag=\"itemTag\"\r\n                :class=\"itemOptionClasses(option)\"\r\n                aria-role=\"option\"\r\n                :aria-selected=\"toRaw(option) === toRaw(hoveredOption)\"\r\n                :tabindex=\"-1\"\r\n                @click=\"\r\n                    (value, event) => setSelected(value as T, !keepOpen, event)\r\n                \">\r\n                <!--\r\n                    @slot Override the select option\r\n                    @binding {object} option - option object\r\n                    @binding {number} index - option index\r\n                    @binding {unknown} value - option value\r\n                -->\r\n                <slot\r\n                    v-if=\"$slots.default\"\r\n                    :option=\"option\"\r\n                    :value=\"getValue(option)\"\r\n                    :index=\"index\" />\r\n                <span v-else>\r\n                    {{ getValue(option) }}\r\n                </span>\r\n            </o-dropdown-item>\r\n        </template>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"isEmpty && $slots.empty\"\r\n            :tag=\"itemTag\"\r\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\r\n            <!--\r\n                @slot Define content for empty state\r\n            -->\r\n            <slot name=\"empty\" />\r\n        </o-dropdown-item>\r\n\r\n        <o-dropdown-item\r\n            v-if=\"$slots.footer\"\r\n            :id=\"`${menuId}-footer`\"\r\n            ref=\"footerRef\"\r\n            :tag=\"itemTag\"\r\n            aria-role=\"option\"\r\n            :aria-selected=\"footerHovered\"\r\n            :tabindex=\"-1\"\r\n            :class=\"[...itemClasses, ...itemFooterClasses]\"\r\n            @click=\"\r\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Footer)\r\n            \">\r\n            <!--\r\n                @slot Define an additional footer\r\n            -->\r\n            <slot name=\"footer\" />\r\n        </o-dropdown-item>\r\n    </o-dropdown>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Autocomplete from \"./Autocomplete.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export autocomplete plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Autocomplete);\r\n    },\r\n} as Plugin;\r\n\r\n/** export autocomplete components */\r\nexport { Autocomplete as OAutocomplete };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * The classic button, in different colors, sizes, and states\r\n * @displayName Button\r\n * @style _button.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OButton\",\r\n    configField: \"button\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /**\r\n     * Button tag name\r\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\r\n     */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\r\n    },\r\n    /**\r\n     * Color variant of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"button.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"button.size\"),\r\n    },\r\n    /** Button label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"button.iconPack\", undefined),\r\n    },\r\n    /** Icon name to show on the left */\r\n    iconLeft: { type: String, default: undefined },\r\n    /** Icon name to show on the right */\r\n    iconRight: { type: String, default: undefined },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"button.rounded\", false),\r\n    },\r\n    /** Button will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Button will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Enable outlined style */\r\n    outlined: { type: Boolean, default: false },\r\n    /** Enable loading style */\r\n    loading: { type: Boolean, default: false },\r\n    /** Enable inverted style */\r\n    inverted: { type: Boolean, default: false },\r\n    /** Button type, like native */\r\n    nativeType: {\r\n        type: String,\r\n        default: \"button\",\r\n        validator: (value: string) =>\r\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\r\n    },\r\n    /** Accessibility Role attribute to be passed to the button. */\r\n    role: {\r\n        type: String,\r\n        default: () => getOption(\"button.role\", \"button\"),\r\n    },\r\n    /**\r\n     * This is used internally\r\n     * @ignore\r\n     */\r\n    iconBoth: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button elements wrapper */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when outlined */\r\n    outlinedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button with loading */\r\n    loadingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when inverted */\r\n    invertedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the left */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the right */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst computedTag = computed(() =>\r\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\r\n        ? \"button\"\r\n        : props.tag,\r\n);\r\n\r\nconst computedNativeType = computed(() =>\r\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\r\n);\r\n\r\nconst computedDisabled = computed(() => (props.disabled ? true : null));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-btn\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined\",\r\n        null,\r\n        computed(() => props.outlined && !props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted\",\r\n        null,\r\n        computed(() => props.inverted && !props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.outlined && !!props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.inverted && !!props.variant),\r\n    ],\r\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\r\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\r\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\r\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"computedTag\"\r\n        :disabled=\"computedDisabled\"\r\n        :type=\"computedNativeType\"\r\n        :class=\"rootClasses\"\r\n        :role=\"role\"\r\n        data-oruga=\"button\">\r\n        <span :class=\"wrapperClasses\">\r\n            <o-icon\r\n                v-if=\"iconLeft\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconLeft\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\r\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label, default is label prop \r\n                -->\r\n                <slot>{{ label }}</slot>\r\n            </span>\r\n            <o-icon\r\n                v-if=\"iconRight\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconRight\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\r\n        </span>\r\n    </component>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Button from \"./Button.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export button plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Button);\r\n    },\r\n} as Plugin;\r\n\r\n/** export button components */\r\nexport { Button as OButton };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    watch,\r\n    onBeforeUnmount,\r\n    onMounted,\r\n    ref,\r\n    nextTick,\r\n    readonly,\r\n    toRaw,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useEventListener,\r\n    useProviderParent,\r\n} from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow for cycling images in confined spaces\r\n * @displayName Carousel\r\n * @requires ./CarouselItem.vue\r\n * @style _carousel.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarousel\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Number, default: 0 },\r\n    /** Enable drag mode */\r\n    dragable: { type: Boolean, default: true },\r\n    /** Timer interval for `autoplay` */\r\n    interval: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.interval\", 3500),\r\n    },\r\n    /** Move item automaticalls after `interval` */\r\n    autoplay: { type: Boolean, default: false },\r\n    /** Pause autoplay on hover */\r\n    pauseHover: { type: Boolean, default: false },\r\n    /** Repeat from the beginning after reaching the end */\r\n    repeat: { type: Boolean, default: false },\r\n    /** Show an overlay */\r\n    overlay: { type: Boolean, default: false },\r\n    /** Enable indicators */\r\n    indicators: { type: Boolean, default: true },\r\n    /** Place indicators inside the carousel */\r\n    indicatorInside: { type: Boolean, default: false },\r\n    /**\r\n     * Indicator interaction mode\r\n     * @values click, hover\r\n     */\r\n    indicatorMode: {\r\n        type: String,\r\n        default: \"click\",\r\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\r\n    },\r\n    /** Position of the indicator - depends on used theme */\r\n    indicatorPosition: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\r\n    },\r\n    /** Style of the indicator - depends on used theme */\r\n    indicatorStyle: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\r\n    },\r\n    /** Number of items to show at once*/\r\n    itemsToShow: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToShow\", 1),\r\n    },\r\n    /** Number of items to switch at once */\r\n    itemsToList: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToList\", 1),\r\n    },\r\n    /** Show next / prev arrows */\r\n    arrows: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrows\", true),\r\n    },\r\n    /** Show next / prev arrows only on hover */\r\n    arrowsHover: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrowsHover\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconSize\"),\r\n    },\r\n    /** Icon name for previous icon */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon name for next icon */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Define these props for different screen sizes */\r\n    breakpoints: {\r\n        type: Object as PropType<Record<number, any>>,\r\n        default: () => ({}),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element in overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the wrapper element of carousel items */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items */\r\n    itemsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items on drag */\r\n    itemsDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of arrow elements */\r\n    arrowIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of prev arrow element */\r\n    arrowIconPrevClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of next arrow element */\r\n    arrowIconNextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator link element */\r\n    indicatorClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element */\r\n    indicatorsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside */\r\n    indicatorsInsideClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside and position */\r\n    indicatorsInsidePositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator item element */\r\n    indicatorItemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element when is active */\r\n    indicatorItemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element to separate different styles */\r\n    indicatorItemStyleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number): void;\r\n    /**\r\n     * on carousel scroll event\r\n     * @param value {number} scroll index\r\n     */\r\n    (e: \"scroll\", value: number): void;\r\n    /**\r\n     * on item click event\r\n     * @param event {event} native event\r\n     */\r\n    (e: \"click\", event: Event): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\nfunction restartTimer(): void {\r\n    pauseTimer();\r\n    startTimer();\r\n}\r\n\r\nconst provideData = computed<CarouselComponent>(() => ({\r\n    restartTimer,\r\n    itemWidth: itemWidth.value,\r\n    activeIndex: scrollIndex.value,\r\n    onClick: (event: Event): void => emits(\"click\", event),\r\n    setActive: (index: number): void => switchTo(index),\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\r\n\r\nconst activeIndex = useVModelBinding<number>(props, emits);\r\nconst scrollIndex = ref(props.modelValue);\r\n\r\nconst resizeObserver = ref(null);\r\nconst windowWidth = ref(0);\r\n\r\nconst refresh_ = ref(0);\r\n\r\n/** When v-model is changed switch to the new active item. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (value <= childItems.value.length - 1)\r\n            switchTo(value * settings.value.itemsToList, true);\r\n    },\r\n);\r\n\r\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\r\n\r\nonMounted(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) {\r\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\r\n            resizeObserver.value.observe(rootRef.value);\r\n        }\r\n        onResized();\r\n        startTimer();\r\n    }\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\r\n        dragEnd();\r\n        pauseTimer();\r\n    }\r\n});\r\n\r\n// add dom event handler\r\nif (isClient) {\r\n    useEventListener(\"resize\", onResized, window);\r\n    useEventListener(\"animationend\", onRefresh);\r\n    useEventListener(\"transitionend\", onRefresh);\r\n    useEventListener(\"transitionstart\", onRefresh);\r\n}\r\n\r\nfunction onResized(): void {\r\n    windowWidth.value = window.innerWidth;\r\n}\r\n\r\nfunction onRefresh(): void {\r\n    nextTick(() => refresh_.value++);\r\n}\r\n\r\nconst settings = computed<typeof props>(() => {\r\n    const breakpoints = Object.keys(props.breakpoints)\r\n        .map(Number)\r\n        .sort((a, b) => b - a);\r\n\r\n    const breakpoint = breakpoints.filter(\r\n        (breakpoint) => windowWidth.value >= breakpoint,\r\n    )[0];\r\n\r\n    const settings = toRaw(\r\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\r\n    );\r\n\r\n    // prevent empty values\r\n    if (!settings.itemsToList) settings.itemsToList = 1;\r\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\r\n    return readonly(settings);\r\n});\r\n\r\nconst itemWidth = computed(() => {\r\n    // Ensure component is mounted\r\n    if (!windowWidth.value) return 0;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\r\n\r\n    const rect = rootRef.value.getBoundingClientRect();\r\n    return rect.width / settings.value.itemsToShow;\r\n});\r\n\r\nconst translation = computed(\r\n    () =>\r\n        -bound(\r\n            delta.value + scrollIndex.value * itemWidth.value,\r\n            0,\r\n            (childItems.value.length - settings.value.itemsToShow) *\r\n                itemWidth.value,\r\n        ),\r\n);\r\n\r\nconst total = computed(() => childItems.value.length);\r\n\r\nconst indicatorCount = computed(() =>\r\n    Math.ceil(total.value / settings.value.itemsToList),\r\n);\r\n\r\nconst indicatorIndex = computed(() =>\r\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\r\n);\r\n\r\nconst hasArrows = computed(\r\n    () =>\r\n        (settings.value.arrowsHover && isHovered.value) ||\r\n        !settings.value.arrowsHover,\r\n);\r\n\r\nconst hasPrev = computed(\r\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\r\n);\r\n\r\nfunction onPrev(): void {\r\n    switchTo(scrollIndex.value - settings.value.itemsToList);\r\n}\r\n\r\nconst hasNext = computed(\r\n    () =>\r\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\r\n        hasArrows.value,\r\n);\r\n\r\nfunction onNext(): void {\r\n    switchTo(scrollIndex.value + settings.value.itemsToList);\r\n}\r\n\r\nfunction switchTo(index: number, onlyMove?: boolean): void {\r\n    if (settings.value.repeat) index = mod(index, total.value);\r\n\r\n    index = bound(index, 0, total.value);\r\n    scrollIndex.value = index;\r\n    emits(\"scroll\", indicatorIndex.value);\r\n\r\n    if (!onlyMove)\r\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\r\n}\r\n\r\nfunction onModeChange(trigger: string, index: number): void {\r\n    if (props.indicatorMode === trigger)\r\n        switchTo(index * settings.value.itemsToList);\r\n}\r\n\r\n// --- Autoplay Feature ---\r\n\r\nconst isHovered = ref(false);\r\nconst isPaused = ref(false);\r\nconst timer = ref(null);\r\n\r\nfunction onMouseEnter(): void {\r\n    isHovered.value = true;\r\n    checkPause();\r\n}\r\n\r\nfunction onMouseLeave(): void {\r\n    isHovered.value = false;\r\n    startTimer();\r\n}\r\n\r\n/** When autoplay is changed, start or pause timer accordingly */\r\nwatch(\r\n    () => props.autoplay,\r\n    (status) => {\r\n        if (status) startTimer();\r\n        else pauseTimer();\r\n    },\r\n);\r\n\r\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\r\nwatch(\r\n    () => props.repeat,\r\n    (status) => {\r\n        if (status) startTimer();\r\n    },\r\n);\r\n\r\nfunction startTimer(): void {\r\n    if (!props.autoplay || timer.value) return;\r\n    isPaused.value = false;\r\n    timer.value = setInterval(() => {\r\n        if (!props.repeat && !hasNext.value) pauseTimer();\r\n        else onNext();\r\n    }, props.interval);\r\n}\r\n\r\nfunction pauseTimer(): void {\r\n    isPaused.value = true;\r\n    if (timer.value) {\r\n        clearInterval(timer.value);\r\n        timer.value = null;\r\n    }\r\n}\r\n\r\nfunction checkPause(): void {\r\n    if (props.pauseHover && props.autoplay) pauseTimer();\r\n}\r\n\r\n// --- Drag & Drop Feature ---\r\n\r\nconst isTouch = ref(false);\r\nconst dragX = ref();\r\nconst hold = ref(0);\r\nconst delta = ref(0);\r\n\r\nconst isDragging = computed(() => isDefined(dragX.value));\r\n\r\n/** handle drag event */\r\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\r\n    if (\r\n        isDragging.value ||\r\n        !settings.value.dragable ||\r\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\r\n    )\r\n        return;\r\n    hold.value = Date.now();\r\n    isTouch.value = !!(event as TouchEvent).touches;\r\n    dragX.value = isTouch.value\r\n        ? (event as TouchEvent).touches[0].clientX\r\n        : (event as MouseEvent).clientX;\r\n    if (isTouch.value) {\r\n        pauseTimer();\r\n    }\r\n    if (isClient) {\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\nfunction dragMove(event: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value) return;\r\n    const dragEndX = (event as TouchEvent).touches\r\n        ? (\r\n              (event as TouchEvent).changedTouches[0] ||\r\n              (event as TouchEvent).touches[0]\r\n          ).clientX\r\n        : (event as MouseEvent).clientX;\r\n    delta.value = dragX.value - dragEndX;\r\n    // prevent event if not touch event\r\n    if (!(event as TouchEvent).touches) event.preventDefault();\r\n}\r\n\r\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value && !hold.value) return;\r\n    if (hold.value) {\r\n        const signCheck = sign(delta.value);\r\n        const results = Math.round(\r\n            Math.abs(delta.value / itemWidth.value) + 0.15,\r\n        ); // Hack\r\n        switchTo(scrollIndex.value + signCheck * results);\r\n    }\r\n    delta.value = 0;\r\n    dragX.value = undefined;\r\n    if ((event as TouchEvent)?.touches) startTimer();\r\n\r\n    if (isClient) {\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-car\"],\r\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\r\n);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\r\n\r\nconst itemsClasses = defineClasses(\r\n    [\"itemsClass\", \"o-car__items\"],\r\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\r\n);\r\n\r\nconst arrowIconClasses = defineClasses([\r\n    \"arrowIconClass\",\r\n    \"o-car__arrow__icon\",\r\n]);\r\n\r\nconst arrowIconPrevClasses = defineClasses([\r\n    \"arrowIconPrevClass\",\r\n    \"o-car__arrow__icon-prev\",\r\n]);\r\n\r\nconst arrowIconNextClasses = defineClasses([\r\n    \"arrowIconNextClass\",\r\n    \"o-car__arrow__icon-next\",\r\n]);\r\n\r\nfunction indicatorItemClasses(index): ClassBind[] {\r\n    return defineClasses(\r\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\r\n        [\r\n            \"indicatorItemActiveClass\",\r\n            \"o-car__indicator__item--active\",\r\n            null,\r\n            indicatorIndex.value === index,\r\n        ],\r\n        [\r\n            \"indicatorItemStyleClass\",\r\n            \"o-car__indicator__item--\",\r\n            props.indicatorStyle,\r\n            !!props.indicatorStyle,\r\n        ],\r\n    ).value;\r\n}\r\n\r\nconst indicatorsClasses = defineClasses(\r\n    [\"indicatorsClass\", \"o-car__indicators\"],\r\n    [\r\n        \"indicatorsInsideClass\",\r\n        \"o-car__indicators--inside\",\r\n        null,\r\n        computed(() => !!props.indicatorInside),\r\n    ],\r\n    [\r\n        \"indicatorsInsidePositionClass\",\r\n        \"o-car__indicators--inside--\",\r\n        computed(() => props.indicatorPosition),\r\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\r\n    ],\r\n);\r\n\r\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"rootRef\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"carousel\"\r\n        role=\"region\"\r\n        @mouseover=\"onMouseEnter\"\r\n        @mouseleave=\"onMouseLeave\"\r\n        @focus=\"onMouseEnter\"\r\n        @blur=\"onMouseLeave\"\r\n        @keydown.left=\"onPrev\"\r\n        @keydown.right=\"onNext\">\r\n        <div :class=\"wrapperClasses\">\r\n            <div\r\n                :class=\"itemsClasses\"\r\n                :style=\"'transform:translateX(' + translation + 'px)'\"\r\n                tabindex=\"0\"\r\n                role=\"group\"\r\n                draggable=\"true\"\r\n                aria-roledescription=\"carousel\"\r\n                @mousedown=\"onDragStart\"\r\n                @touchstart=\"onDragStart\">\r\n                <!--\r\n                    @slot Display carousel item\r\n                -->\r\n                <slot />\r\n            </div>\r\n            <!--\r\n                @slot Override the arrows\r\n                @binding {boolean} has-prev has prev arrow button \r\n                @binding {boolean} has-next has next arrow button \r\n                @binding {(): void} prev switch to prev item function\r\n                @binding {(): void} next switch to next item function\r\n            -->\r\n            <slot\r\n                name=\"arrow\"\r\n                :has-prev=\"hasPrev\"\r\n                :prev=\"onPrev\"\r\n                :has-next=\"hasNext\"\r\n                :next=\"onNext\">\r\n                <template v-if=\"arrows\">\r\n                    <o-icon\r\n                        v-show=\"hasPrev\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconPrev\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onPrev\"\r\n                        @keydown.enter=\"onPrev\" />\r\n                    <o-icon\r\n                        v-show=\"hasNext\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconNext\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onNext\"\r\n                        @keydown.enter=\"onNext\" />\r\n                </template>\r\n            </slot>\r\n        </div>\r\n\r\n        <!--\r\n            @slot Override the indicators\r\n            @binding {number} active active index \r\n            @binding {(idx: number): void} switch-to switch to item function\r\n            @binding {number} indicator-index current indicator index\r\n        -->\r\n        <slot\r\n            :active=\"activeIndex\"\r\n            :switch-to=\"switchTo\"\r\n            :indicator-index=\"indicatorIndex\"\r\n            name=\"indicators\">\r\n            <template v-if=\"childItems.length\">\r\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\r\n                    <div\r\n                        v-for=\"(_, index) in indicatorCount\"\r\n                        :key=\"index\"\r\n                        :class=\"indicatorClasses\"\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @focus=\"onModeChange('hover', index)\"\r\n                        @mouseover=\"onModeChange('hover', index)\"\r\n                        @click=\"onModeChange('click', index)\"\r\n                        @keypress.enter=\"onModeChange('click', index)\">\r\n                        <!--\r\n                            @slot Override the indicator elements\r\n                            @binding {index} index indicator index \r\n                        -->\r\n                        <slot :index=\"index\" name=\"indicator\">\r\n                            <span :class=\"indicatorItemClasses(index)\" />\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </slot>\r\n        <template v-if=\"overlay\">\r\n            <!-- @slot Overlay element -->\r\n            <slot name=\"overlay\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow item used by the carousel\r\n * @displayName Carousel Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarouselItem\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Make item clickable */\r\n    clickable: { type: Boolean, default: false },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of carousel item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is active */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is clickable */\r\n    itemClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<CarouselComponent>();\r\n\r\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\r\n\r\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\r\n\r\nfunction onClick(event: Event): void {\r\n    if (isActive.value) parent.value.onClick(event);\r\n    if (props.clickable) parent.value.setActive(item.value.index);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-car__item\"],\r\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\r\n    [\r\n        \"itemClickableClass\",\r\n        \"o-car__item--clickable\",\r\n        null,\r\n        computed(() => props.clickable),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"itemClasses\"\r\n        :style=\"itemStyle\"\r\n        :data-id=\"`carousel-${item.identifier}`\"\r\n        data-oruga=\"carousel-item\"\r\n        :role=\"ariaRole\"\r\n        aria-roledescription=\"item\"\r\n        :aria-selected=\"isActive\"\r\n        @click=\"onClick\"\r\n        @keypress.enter=\"onClick\">\r\n        <!--\r\n            @slot Default content\r\n        -->\r\n        <slot />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Carousel from \"./Carousel.vue\";\r\nimport CarouselItem from \"./CarouselItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export carousel plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Carousel);\r\n        registerComponent(app, CarouselItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export carousel components */\r\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select a single or grouped options\r\n * @displayName Checkbox\r\n * @style _checkbox.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCheckbox\",\r\n    configField: \"checkbox\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean, Array], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native indeterminate */\r\n    indeterminate: { type: Boolean, default: false },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Same as native name */\r\n    name: { type: String, default: undefined },\r\n    /** Overrides the returned value when it's checked */\r\n    trueValue: { type: [String, Number, Boolean], default: true },\r\n    /** Overrides the returned value when it's not checked */\r\n    falseValue: { type: [String, Number, Boolean], default: false },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"checkbox.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when checkbox is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element when checked */\r\n    checkedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox input */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox input when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when checkbox is indeterminate */\r\n    indeterminateClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox labe */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the checkbox variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string, number, boolean, array} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: string | number | boolean | Array<string | number | boolean>,\r\n    ): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean, array} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (\r\n        e: \"input\",\r\n        value: string | number | boolean | Array<string | number | boolean>,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * indeterminate prop two-way binding\r\n     * @param value {boolean} updated indeterminate prop\r\n     */\r\n    (e: \"update:indeterminate\", value: boolean): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<\r\n    string | number | boolean | Array<string | number | boolean>\r\n>(props, emits, { passive: true });\r\n\r\nconst isIndeterminate = usePropBinding<boolean>(\"indeterminate\", props, emits);\r\n\r\nconst isChecked = computed(\r\n    () =>\r\n        vmodel.value === props.trueValue ||\r\n        (Array.isArray(vmodel.value) &&\r\n            vmodel.value.includes(props.nativeValue)),\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-chk\"],\r\n    [\"checkedClass\", \"o-chk--checked\", null, isChecked],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-chk--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"disabledClass\", \"o-chk--disabled\", null, computed(() => props.disabled)],\r\n    [\r\n        \"variantClass\",\r\n        \"o-chk--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-chk__input\"],\r\n    [\"inputCheckedClass\", \"o-chk__input--checked\", null, isChecked],\r\n    [\r\n        \"indeterminateClass\",\r\n        \"o-chk__input--indeterminate\",\r\n        null,\r\n        isIndeterminate,\r\n    ],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-chk__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"checkbox\"\r\n        role=\"checkbox\"\r\n        :aria-checked=\"isChecked\"\r\n        @click.stop=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"checkbox\"\r\n            data-oruga-input=\"checkbox\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :indeterminate.prop=\"indeterminate\"\r\n            :true-value=\"trueValue\"\r\n            :false-value=\"falseValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Content slot, default is label prop\r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Checkbox from \"./Checkbox.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export checkbox plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Checkbox);\r\n    },\r\n} as Plugin;\r\n\r\n/** export table components */\r\nexport { Checkbox as OCheckbox };\r\n","<script setup lang=\"ts\">\r\nimport { type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An easy way to toggle what you want\r\n * @displayName Collapse\r\n * @style _collapse.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCollapse\",\r\n    configField: \"collapse\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\r\n    open: { type: Boolean, default: true },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"collapse.animation\", \"fade\"),\r\n    },\r\n    /** Id property of the content container */\r\n    contentId: { type: String, default: () => uuid() },\r\n    /**\r\n     * Trigger position\r\n     * @values top, bottom\r\n     */\r\n    position: {\r\n        type: String as PropType<\"top\" | \"bottom\">,\r\n        default: () => getOption(\"collapse.position\", \"top\"),\r\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the trigger element */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * open prop two-way binding\r\n     * @param value {boolean} updated open prop\r\n     */\r\n    (e: \"update:open\", value: boolean): void;\r\n    /** on collapse opened */\r\n    (e: \"open\"): void;\r\n    /** on collapse closed */\r\n    (e: \"close\"): void;\r\n}>();\r\n\r\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\r\n\r\n/** Toggle and emit events */\r\nfunction toggle(): void {\r\n    isOpen.value = !isOpen.value;\r\n    isOpen.value ? emits(\"open\") : emits(\"close\");\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\r\n\r\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\r\n        <div\r\n            v-if=\"position === 'top'\"\r\n            :class=\"triggerClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @click=\"toggle\"\r\n            @keydown.enter=\"toggle\">\r\n            <!--\r\n                @slot Define the collapse trigger\r\n                @binding {boolean} open collapse open state \r\n             -->\r\n            <slot name=\"trigger\" :open=\"isOpen\" />\r\n        </div>\r\n\r\n        <Transition :name=\"animation\">\r\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\r\n                <!--\r\n                    @slot Default content\r\n                -->\r\n                <slot />\r\n            </div>\r\n        </Transition>\r\n\r\n        <div\r\n            v-if=\"position === 'bottom'\"\r\n            :class=\"triggerClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @click=\"toggle\"\r\n            @keydown.enter=\"toggle\">\r\n            <!--\r\n                @slot Define the collapse trigger\r\n                @binding {boolean} open collapse open state \r\n             -->\r\n            <slot name=\"trigger\" :open=\"isOpen\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Collapse from \"./Collapse.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export collapse plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Collapse);\r\n    },\r\n} as Plugin;\r\n\r\n/** export collapse components */\r\nexport { Collapse as OCollapse };\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport { injectField } from \"../field/useFieldShare\";\r\n\r\nimport type { OptionsItem } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select an item in a dropdown list. Use with Field to access all functionalities\r\n * @displayName Select\r\n * @style _select.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSelect\",\r\n    configField: \"select\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [String, Number, Boolean, Object, Array],\r\n        default: null,\r\n    },\r\n    /** Select options, unnecessary when default slot is used */\r\n    options: {\r\n        type: Array as PropType<string[] | OptionsItem[]>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Vertical size of input\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"select.size\"),\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"select.variant\"),\r\n    },\r\n    /** Text when nothing is selected */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Allow multiple selection */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native size */\r\n    nativeSize: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"select.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"select.autocomplete\", \"off\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native select element */\r\n    selectClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon space inside the select */\r\n    iconLeftSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon space inside the select */\r\n    iconRightSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select when multiple mode is active */\r\n    multipleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select placeholder */\r\n    placeholderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select arrow */\r\n    arrowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant for the root element*/\r\n    rootVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: string | number | boolean | object | Array<any>,\r\n    ): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst selectRef = ref<HTMLInputElement>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\r\n    useInputHandler(selectRef, emits, props);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\r\n\r\nconst vmodel = useVModelBinding<\r\n    string | number | boolean | object | Array<any>\r\n>(props, emits, { passive: true });\r\n\r\nconst placeholderVisible = computed(() => vmodel.value === null);\r\n\r\nonMounted(() => {\r\n    /**\r\n     * When v-model is changed:\r\n     *  1. Set parent field filled state.\r\n     *  2. Resize textarea input\r\n     *  3. Check html5 valdiation\r\n     */\r\n    watch(\r\n        () => vmodel.value,\r\n        (value) => {\r\n            if (parentField?.value) parentField.value.setFilled(!!value);\r\n            checkHtml5Validity();\r\n        },\r\n        { immediate: true },\r\n    );\r\n});\r\n\r\nconst selectOptions = computed<OptionsItem[]>(() => {\r\n    if (!props.options || !Array.isArray(props.options)) return [];\r\n\r\n    return props.options.map((option) =>\r\n        typeof option === \"string\"\r\n            ? { value: option, label: option, key: uuid() }\r\n            : { ...option, key: uuid() },\r\n    );\r\n});\r\n\r\n// --- Icon Feature ---\r\n\r\nconst hasIconRight = computed(\r\n    () =>\r\n        (props.iconRight && !props.multiple) ||\r\n        (props.statusIcon && statusVariantIcon.value),\r\n);\r\n\r\nconst rightIcon = computed(() =>\r\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\r\n);\r\n\r\nconst rightIconVariant = computed(() =>\r\n    props.iconRight\r\n        ? props.iconRightVariant || props.variant || null\r\n        : statusVariant.value,\r\n);\r\n\r\nfunction iconClick(emit, event): void {\r\n    emits(emit, event);\r\n    nextTick(() => setFocus());\r\n}\r\n\r\nfunction rightIconClick(event): void {\r\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-ctrl-sel\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-ctrl-sel--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\r\n        \"rootVariantClass\",\r\n        \"o-ctrl-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n);\r\n\r\nconst selectClasses = defineClasses(\r\n    [\"selectClass\", \"o-sel\"],\r\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\r\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sel--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\r\n    [\r\n        \"iconLeftSpaceClass\",\r\n        \"o-sel-iconspace-left\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n    [\r\n        \"iconRightSpaceClass\",\r\n        \"o-sel-iconspace-right\",\r\n        null,\r\n        computed(() => !!props.iconRight),\r\n    ],\r\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\r\n    [\r\n        \"arrowClass\",\r\n        \"o-sel-arrow\",\r\n        null,\r\n        computed(() => !props.iconRight && !props.multiple),\r\n    ],\r\n);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"select\">\r\n        <o-icon\r\n            v-if=\"icon\"\r\n            :class=\"iconLeftClasses\"\r\n            :clickable=\"iconClickable\"\r\n            :icon=\"icon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            @click=\"iconClick('icon-click', $event)\" />\r\n\r\n        <select\r\n            v-bind=\"$attrs\"\r\n            ref=\"selectRef\"\r\n            v-model=\"vmodel\"\r\n            data-oruga-input=\"select\"\r\n            :class=\"selectClasses\"\r\n            :autocomplete=\"autocomplete\"\r\n            :multiple=\"multiple\"\r\n            :size=\"nativeSize\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\">\r\n            <template v-if=\"placeholder || $slots.placeholder\">\r\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\r\n                    <!--\r\n                        @slot Override the placeholder\r\n                    -->\r\n                    <slot name=\"placeholder\">\r\n                        {{ placeholder }}\r\n                    </slot>\r\n                </option>\r\n            </template>\r\n\r\n            <!--\r\n                @slot Override the options, default is options prop\r\n            -->\r\n            <slot>\r\n                <option\r\n                    v-for=\"option in selectOptions\"\r\n                    :key=\"option.key\"\r\n                    :value=\"option.value\"\r\n                    v-bind=\"option.attrs\">\r\n                    {{ option.label }}\r\n                </option>\r\n            </slot>\r\n        </select>\r\n\r\n        <o-icon\r\n            v-if=\"hasIconRight\"\r\n            :class=\"iconRightClasses\"\r\n            :clickable=\"iconRightClickable\"\r\n            :icon=\"rightIcon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            :variant=\"rightIconVariant\"\r\n            both\r\n            @click=\"rightIconClick\" />\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, useAttrs, type PropType, ref, watch, nextTick } from \"vue\";\r\n\r\nimport ODropdown from \"../dropdown/Dropdown.vue\";\r\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\n\r\nimport { isMobileAgent } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    getActiveClasses,\r\n    useEventListener,\r\n    useInputHandler,\r\n    usePropBinding,\r\n} from \"@/composables\";\r\n\r\nimport type { ClassBind, ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * This is a internal used component.\r\n * Used by Datepicker and Timepicker.\r\n */\r\ndefineOptions({\r\n    name: \"OPickerWrapper\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** parent picker component props  */\r\n    pickerProps: { type: Object, required: true },\r\n    /** data-oruga attribute value */\r\n    dataOruga: { type: String, required: true },\r\n    /** the input value */\r\n    value: { type: [Date, Array], default: undefined },\r\n    /** the active state of the dropdown */\r\n    active: { type: Boolean, default: false },\r\n    formattedValue: { type: String, default: undefined },\r\n    nativeType: { type: String, required: true },\r\n    nativeStep: { type: String, default: undefined },\r\n    nativeValue: { type: [String, Number], default: undefined },\r\n    nativeMin: { type: [String, Number], default: undefined },\r\n    nativeMax: { type: [String, Number], default: undefined },\r\n    stayOpen: { type: Boolean, default: false },\r\n    rootClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    dropdownClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    boxClass: {\r\n        type: Array as PropType<ComponentClass>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /** on value change event */\r\n    (e: \"change\", value: string): void;\r\n    /** on natvie value change event */\r\n    (e: \"native-change\", value: string): void;\r\n    /** on input focus event */\r\n    (e: \"focus\", evt: Event): void;\r\n    /** on input blur event */\r\n    (e: \"blur\", evt: Event): void;\r\n    /** on input invalid event */\r\n    (e: \"invalid\", evt: Event): void;\r\n    /** on icon click event */\r\n    (e: \"icon-click\", evt: Event): void;\r\n    /** on icon right click event */\r\n    (e: \"icon-right-click\", evt: Event): void;\r\n}>();\r\n\r\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\r\nconst picker = computed<any>(() => props.pickerProps);\r\n\r\nconst isMobileNative = computed(\r\n    () => picker.value.mobileNative && isMobileAgent.any(),\r\n);\r\n\r\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\r\nconst inputRef = ref<InstanceType<typeof OInput>>();\r\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\r\n\r\nconst elementRef = computed(() =>\r\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\r\n);\r\n\r\n// use form input functionality for native input\r\nconst {\r\n    checkHtml5Validity,\r\n    setFocus,\r\n    doClick,\r\n    onBlur,\r\n    onFocus,\r\n    onInvalid,\r\n    isValid,\r\n    isFocused,\r\n} = useInputHandler(elementRef, emits, picker.value);\r\n\r\n/**\r\n * Show input as text for placeholder,\r\n * when placeholder and native value is given and input is not focused.\r\n */\r\nconst computedNativeType = computed(() =>\r\n    !picker.value.placeholder || props.nativeValue || isFocused.value\r\n        ? props.nativeType\r\n        : \"text\",\r\n);\r\n\r\n/**\r\n * When v-model is changed:\r\n *  1. Update internal value.\r\n *  2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.value,\r\n    () => {\r\n        // toggle picker if not stay open\r\n        if (!props.stayOpen) togglePicker(false);\r\n        // check validation if native\r\n        if (isMobileNative.value && !isValid.value) checkHtml5Validity();\r\n    },\r\n);\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\nwatch(isActive, onActiveChange);\r\n\r\nconst ariaRole = computed(() => (!picker.value.inline ? \"dialog\" : undefined));\r\n\r\nconst triggers = computed(() => (picker.value.openOnFocus ? [\"click\"] : []));\r\n\r\nif (isClient) useEventListener(\"keyup\", onKeyPress);\r\n\r\n/** Keypress event that is bound to the document. */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\r\n        togglePicker(false);\r\n}\r\n\r\n// --- EVENT HANDLER ---\r\n\r\n/** Toggle picker */\r\nfunction togglePicker(active: boolean): void {\r\n    if (isMobileNative.value) {\r\n        setFocus(); // focus the underlaying input element\r\n        doClick(); // click to open the underlaying input element\r\n    } else if (dropdownRef.value) {\r\n        if (active || picker.value.closeOnClick)\r\n            nextTick(() => (isActive.value = active));\r\n    }\r\n}\r\n\r\n/** Avoid dropdown toggle when is already visible */\r\nfunction onInputClick(event): void {\r\n    if (isActive.value) event.stopPropagation();\r\n}\r\n\r\n/** Emit 'blur' event on dropdown is not active (closed) */\r\nfunction onActiveChange(value: boolean): void {\r\n    if (value) onFocus();\r\n    else if (!value) onBlur();\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\nconst inputBind = computed(() => ({\r\n    ...attrs,\r\n    ...picker.value.inputClasses,\r\n}));\r\n\r\nconst dropdownBind = computed(() => ({\r\n    \"root-class\": getActiveClasses(props.dropdownClasses),\r\n    ...picker.value.dropdownClasses,\r\n}));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\">\r\n        <o-dropdown\r\n            v-if=\"!isMobileNative || picker.inline\"\r\n            ref=\"dropdownRef\"\r\n            v-bind=\"dropdownBind\"\r\n            v-model:active=\"isActive\"\r\n            :position=\"picker.position\"\r\n            :disabled=\"picker.disabled\"\r\n            :inline=\"picker.inline\"\r\n            :mobile-modal=\"picker.mobileModal\"\r\n            :trap-focus=\"picker.trapFocus\"\r\n            :aria-role=\"ariaRole\"\r\n            :aria-modal=\"!picker.inline\"\r\n            :tabindex=\"-1\"\r\n            :teleport=\"picker.teleport\"\r\n            :triggers=\"triggers\">\r\n            <template v-if=\"!picker.inline\" #trigger>\r\n                <slot name=\"trigger\">\r\n                    <o-input\r\n                        ref=\"inputRef\"\r\n                        v-bind=\"inputBind\"\r\n                        autocomplete=\"off\"\r\n                        :model-value=\"formattedValue\"\r\n                        :placeholder=\"picker.placeholder\"\r\n                        :size=\"picker.size\"\r\n                        :icon-pack=\"picker.iconPack\"\r\n                        :icon=\"picker.icon\"\r\n                        :icon-right=\"picker.iconRight\"\r\n                        :icon-right-clickable=\"picker.iconRightClickable\"\r\n                        :expanded=\"picker.expanded\"\r\n                        :rounded=\"picker.rounded\"\r\n                        :disabled=\"picker.disabled\"\r\n                        :readonly=\"picker.readonly\"\r\n                        :use-html5-validation=\"false\"\r\n                        @click=\"onInputClick\"\r\n                        @keyup.enter=\"togglePicker(true)\"\r\n                        @change=\"$emit('change', $event.target.value)\"\r\n                        @focus=\"onFocus\"\r\n                        @blur=\"onBlur\"\r\n                        @icon-click=\"$emit('icon-click', $event)\"\r\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\r\n                </slot>\r\n            </template>\r\n            <o-dropdown-item\r\n                override\r\n                tag=\"div\"\r\n                :item-class=\"boxClass\"\r\n                :disabled=\"picker.disabled\"\r\n                :clickable=\"false\">\r\n                <slot />\r\n            </o-dropdown-item>\r\n        </o-dropdown>\r\n\r\n        <!-- Native Picker -->\r\n        <o-input\r\n            v-else\r\n            ref=\"nativeInputRef\"\r\n            v-bind=\"inputBind\"\r\n            :type=\"computedNativeType\"\r\n            autocomplete=\"off\"\r\n            :model-value=\"nativeValue\"\r\n            :min=\"nativeMin\"\r\n            :max=\"nativeMax\"\r\n            :step=\"nativeStep\"\r\n            :placeholder=\"picker.placeholder\"\r\n            :size=\"picker.size\"\r\n            :icon-pack=\"picker.iconPack\"\r\n            :icon=\"picker.icon\"\r\n            :icon-right=\"picker.iconRight\"\r\n            :icon-right-clickable=\"picker.iconRightClickable\"\r\n            :rounded=\"picker.rounded\"\r\n            :disabled=\"picker.disabled\"\r\n            :readonly=\"false\"\r\n            :use-html5-validation=\"false\"\r\n            @change=\"$emit('native-change', $event.target.value)\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\"\r\n            @invalid=\"onInvalid\"\r\n            @icon-click=\"$emit('icon-click', $event)\"\r\n            @icon-right-click=\"$emit('icon-right-click', $event)\" />\r\n    </div>\r\n</template>\r\n","/**\r\n * Return month names according to a specified locale\r\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\r\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\r\n * @return {Array<String>} An array of month names\r\n */\r\ntype MonthType =\r\n    | \"numeric\"\r\n    | \"2-digit\"\r\n    | \"long\"\r\n    | \"short\"\r\n    | \"narrow\"\r\n    | undefined;\r\n\r\nexport function getMonthNames(\r\n    locale: string = undefined,\r\n    format: MonthType = \"long\",\r\n): string[] {\r\n    const dates = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        dates.push(new Date(2000, i, 15));\r\n    }\r\n    const dtf = new Intl.DateTimeFormat(locale, {\r\n        month: format,\r\n        // timeZone: 'UTC'\r\n    });\r\n    return dates.map((d) => dtf.format(d));\r\n}\r\n\r\n/**\r\n * Return weekday names according to a specified locale\r\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\r\n * @param  {Number} first day of week index\r\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\r\n * @return {Array<String>} An array of weekday names\r\n */\r\n\r\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\r\n\r\nexport function getWeekdayNames(\r\n    locale: string = undefined,\r\n    firstDayOfWeek: number = 0,\r\n    format: WeekdayType = \"narrow\",\r\n): string[] {\r\n    const dates = [];\r\n    for (let i = 1, j = 0; j < 7; i++) {\r\n        const d = new Date(2000, 0, i);\r\n        const day = d.getDay();\r\n        if (day === firstDayOfWeek || j > 0) {\r\n            dates.push(d);\r\n            j++;\r\n        }\r\n    }\r\n    const dtf = new Intl.DateTimeFormat(locale, {\r\n        weekday: format,\r\n        // timeZone: 'UTC'\r\n    });\r\n    return dates.map((d) => dtf.format(d));\r\n}\r\n\r\n/**\r\n * Accept a regex with group names and return an object\r\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\r\n * will return { year: 2000, month: 12, day: 25 }\r\n * @param  {String} includes injections of (?!={groupname}) for each group\r\n * @param  {String} the string to run regex\r\n * @return {Object} an object with a property for each group having the group's match as the value\r\n */\r\nexport function matchWithGroups(pattern: string, str: string): any {\r\n    const matches = str.match(pattern);\r\n    return (\r\n        pattern\r\n            // get the pattern as a string\r\n            .toString()\r\n            // suss out the groups\r\n            .match(/<(.+?)>/g)\r\n            // remove the braces\r\n            .map((group) => {\r\n                const groupMatches = group.match(/<(.+)>/);\r\n                if (!groupMatches || groupMatches.length <= 0) {\r\n                    return null;\r\n                }\r\n                return group.match(/<(.+)>/)[1];\r\n            })\r\n            // create an object with a property for each group having the group's match as the value\r\n            .reduce((acc, curr, index) => {\r\n                if (matches && matches.length > index) {\r\n                    acc[curr] = matches[index + 1];\r\n                } else {\r\n                    acc[curr] = null;\r\n                }\r\n                return acc;\r\n            }, {})\r\n    );\r\n}\r\n\r\n/** Return array of all days in the week that the startingDate is within */\r\nexport function weekBuilder(\r\n    startingDate: number,\r\n    month: number,\r\n    year: number,\r\n    firstDayOfWeek: number,\r\n): Date[] {\r\n    const thisMonth = new Date(year, month);\r\n\r\n    const thisWeek = [];\r\n\r\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\r\n\r\n    const end =\r\n        dayOfWeek >= firstDayOfWeek\r\n            ? dayOfWeek - firstDayOfWeek\r\n            : 7 - firstDayOfWeek + dayOfWeek;\r\n\r\n    let daysAgo = 1;\r\n    for (let i = 0; i < end; i++) {\r\n        thisWeek.unshift(\r\n            new Date(\r\n                thisMonth.getFullYear(),\r\n                thisMonth.getMonth(),\r\n                startingDate - daysAgo,\r\n            ),\r\n        );\r\n        daysAgo++;\r\n    }\r\n\r\n    thisWeek.push(new Date(year, month, startingDate));\r\n\r\n    let daysForward = 1;\r\n    while (thisWeek.length < 7) {\r\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\r\n        daysForward++;\r\n    }\r\n\r\n    return thisWeek;\r\n}\r\n\r\nexport function firstWeekOffset(year, dow, doy): number {\r\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n    const fwd = 7 + dow - doy;\r\n    // first-week day local weekday -- which local weekday is fwd\r\n    const firstJanuary = new Date(year, 0, fwd);\r\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\r\n    return -fwdlw + fwd - 1;\r\n}\r\n\r\n/** Return the number of days in a specific year */\r\nexport function daysInYear(year): number {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\r\n}\r\n\r\n/** Return the number of weeks in a specific year */\r\nexport function weeksInYear(year, dow, doy): number {\r\n    const weekOffset = firstWeekOffset(year, dow, doy);\r\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n}\r\n","import { computed } from \"vue\";\r\nimport { matchWithGroups } from \"./utils\";\r\nimport type { DatepickerProps } from \"./types\";\r\n\r\nexport function useDatepickerMixins(props: DatepickerProps) {\r\n    /**\r\n     * Check that selected date is within earliest/latest params and\r\n     * is within a given month\r\n     */\r\n    function isDateSelectable(date: Date, month: number): boolean {\r\n        const validity = [];\r\n\r\n        if (props.minDate) validity.push(date >= props.minDate);\r\n        if (props.maxDate) validity.push(date <= props.maxDate);\r\n\r\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\r\n            validity.push(date.getMonth() === month);\r\n\r\n        if (props.selectableDates) {\r\n            if (typeof props.selectableDates === \"function\") {\r\n                if (props.selectableDates(date)) return true;\r\n                else validity.push(false);\r\n            } else {\r\n                for (let i = 0; i < props.selectableDates.length; i++) {\r\n                    const enabledDate = props.selectableDates[i];\r\n                    if (\r\n                        date.getDate() === enabledDate.getDate() &&\r\n                        date.getFullYear() === enabledDate.getFullYear() &&\r\n                        date.getMonth() === enabledDate.getMonth()\r\n                    )\r\n                        return true;\r\n                    else validity.push(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.unselectableDates) {\r\n            if (typeof props.unselectableDates === \"function\") {\r\n                validity.push(!props.unselectableDates(date));\r\n            } else {\r\n                for (let i = 0; i < props.unselectableDates.length; i++) {\r\n                    const disabledDate = props.unselectableDates[i];\r\n                    validity.push(\r\n                        date.getDate() !== disabledDate.getDate() ||\r\n                            date.getFullYear() !== disabledDate.getFullYear() ||\r\n                            date.getMonth() !== disabledDate.getMonth(),\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.unselectableDaysOfWeek) {\r\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\r\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\r\n                validity.push(date.getDay() !== dayOfWeek);\r\n            }\r\n        }\r\n\r\n        return validity.indexOf(false) < 0;\r\n    }\r\n\r\n    const isTypeMonth = computed(() => props.type === \"month\");\r\n\r\n    const localeOptions = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                year: \"numeric\",\r\n                month: \"numeric\",\r\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n    );\r\n\r\n    /** DateTime Format */\r\n    const dtf = computed(\r\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\r\n    );\r\n\r\n    /** DateTime Month Format */\r\n    const dtfMonth = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                year: localeOptions.value.year || \"numeric\",\r\n                month: localeOptions.value.month || \"2-digit\",\r\n                // timeZone: 'UTC'\r\n            }),\r\n    );\r\n\r\n    const sampleTime = computed(() => {\r\n        const d = props.dateCreator();\r\n        d.setHours(10);\r\n        d.setSeconds(0);\r\n        d.setMinutes(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    });\r\n\r\n    /** Format date into string */\r\n    const defaultDateFormatter = (date: Date | Date[]): string => {\r\n        if (!date) return \"\";\r\n        const targetDates = Array.isArray(date) ? date : [date];\r\n        const dates = targetDates.map((date) => {\r\n            const d = new Date(\r\n                date.getFullYear(),\r\n                date.getMonth(),\r\n                date.getDate(),\r\n                12,\r\n            );\r\n            return !isTypeMonth.value\r\n                ? dtf.value.format(d)\r\n                : dtfMonth.value.format(d);\r\n        });\r\n        return !props.multiple ? dates.join(\" - \") : dates.join(\", \");\r\n    };\r\n\r\n    /** Parse a string into a date */\r\n    const defaultDateParser = (date: string): Date => {\r\n        if (!date) return null;\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const formatRegex = (isTypeMonth.value ? dtfMonth.value : dtf.value)\r\n                .formatToParts(sampleTime.value)\r\n                .map((part) => {\r\n                    if (part.type === \"literal\") return part.value;\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const dateGroups = matchWithGroups(formatRegex, date);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            if (\r\n                dateGroups.year &&\r\n                dateGroups.year.length === 4 &&\r\n                dateGroups.month &&\r\n                dateGroups.month <= 12\r\n            ) {\r\n                if (isTypeMonth.value)\r\n                    return new Date(dateGroups.year, dateGroups.month - 1);\r\n                else if (dateGroups.day && dateGroups.day <= 31) {\r\n                    return new Date(\r\n                        dateGroups.year,\r\n                        dateGroups.month - 1,\r\n                        dateGroups.day,\r\n                        12,\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\r\n        if (!isTypeMonth.value) return new Date(Date.parse(date));\r\n        const s = date.split(\"/\");\r\n        const year = s[0].length === 4 ? s[0] : s[1];\r\n        const month = s[0].length === 2 ? s[0] : s[1];\r\n        if (year && month) {\r\n            return new Date(\r\n                parseInt(year, 10),\r\n                parseInt(month, 10) - 1,\r\n                1,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n            );\r\n        }\r\n    };\r\n\r\n    return { isDateSelectable, defaultDateParser, defaultDateFormatter };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    watch,\r\n    nextTick,\r\n    ref,\r\n    type PropType,\r\n    type ComponentPublicInstance,\r\n} from \"vue\";\r\n\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\r\nimport type { DatepickerProps, DatepickerEvent } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerTableRow\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    day: { type: Number, required: true },\r\n    week: { type: Array as PropType<Date[]>, required: true },\r\n    month: { type: Number, required: true },\r\n    selectedDate: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\r\n    hoveredDateRange: { type: Array as PropType<Date[]>, default: () => [] },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"select\", value: Date): void;\r\n    (e: \"hover-enddate\", value: Date): void;\r\n    (e: \"change-focus\", value: Date): void;\r\n    (e: \"week-number-click\", value: number): void;\r\n}>();\r\n\r\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst hasEvents = computed(() => !!props.events?.length);\r\n\r\nconst dayRefs = ref(new Map());\r\n\r\nfunction setDayRef(date: Date, el: Element | ComponentPublicInstance): void {\r\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\r\n    if (el) dayRefs.value.set(refKey, el);\r\n}\r\n\r\nwatch(\r\n    () => props.day,\r\n    (day) => {\r\n        // if day is in week\r\n        if (props.week.map((d) => d.getDate()).includes(day))\r\n            nextTick(() => {\r\n                // $nextTick is needed when month is changed\r\n                const refKey = `day-${props.month}-${day}`;\r\n                const ref = dayRefs.value.get(refKey);\r\n                if (ref) ref.focus();\r\n            });\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.month,\r\n    // clear day refs on month change\r\n    () => (dayRefs.value = new Map()),\r\n);\r\n\r\nfunction clickWeekNumber(week: number): void {\r\n    if (datepicker.value.weekNumberClickable) emits(\"week-number-click\", week);\r\n}\r\n\r\nfunction getDayOfYear(input): number {\r\n    return (\r\n        Math.round(\r\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\r\n                864e5,\r\n        ) + 1\r\n    );\r\n}\r\n\r\nfunction getWeekNumber(mom): number {\r\n    const dow = datepicker.value.firstDayOfWeek; // first day of week\r\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\r\n    const doy = datepicker.value.rulesForFirstWeek;\r\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\r\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\r\n    let resWeek;\r\n    let resYear;\r\n    if (week < 1) {\r\n        resYear = mom.getFullYear() - 1;\r\n        resWeek = week + weeksInYear(resYear, dow, doy);\r\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\r\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\r\n        resYear = mom.getFullYear() + 1;\r\n    } else {\r\n        resYear = mom.getFullYear();\r\n        resWeek = week;\r\n    }\r\n    return resWeek;\r\n}\r\n\r\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\r\n    if (!props.events?.length) return [];\r\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\r\n    let preventDefault = true;\r\n    switch (event.key) {\r\n        case \"Tab\": {\r\n            preventDefault = false;\r\n            break;\r\n        }\r\n        case \" \":\r\n        case \"Space\":\r\n        case \"Spacebar\":\r\n        case \"Enter\": {\r\n            selectDate(weekDay);\r\n            break;\r\n        }\r\n\r\n        case \"ArrowLeft\":\r\n        case \"Left\": {\r\n            changeFocus(weekDay, -1);\r\n            break;\r\n        }\r\n        case \"ArrowRight\":\r\n        case \"Right\": {\r\n            changeFocus(weekDay, 1);\r\n            break;\r\n        }\r\n        case \"ArrowUp\":\r\n        case \"Up\": {\r\n            changeFocus(weekDay, -7);\r\n            break;\r\n        }\r\n        case \"ArrowDown\":\r\n        case \"Down\": {\r\n            changeFocus(weekDay, 7);\r\n            break;\r\n        }\r\n    }\r\n    if (preventDefault) event.preventDefault();\r\n}\r\n\r\n/** Emit select event with chosen date as payload */\r\nfunction selectDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\r\n}\r\n\r\nfunction changeFocus(day, inc): void {\r\n    const nextDay = new Date(day.getTime());\r\n    nextDay.setDate(day.getDate() + inc);\r\n    // if next day is out of range or not selectable, move to next selectable date\r\n    while (\r\n        (datepicker.value.minDate && nextDay < datepicker.value.minDate) ||\r\n        (datepicker.value.maxDate && nextDay > datepicker.value.maxDate) ||\r\n        !isDateSelectable(nextDay, nextDay.getMonth())\r\n    ) {\r\n        // revert day selection until selectable day is reached\r\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\r\n    }\r\n    setRangeHoverEndDate(nextDay);\r\n    emits(\"change-focus\", nextDay);\r\n}\r\n\r\nfunction setRangeHoverEndDate(day): void {\r\n    if (datepicker.value.range) emits(\"hover-enddate\", day);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nfunction dateMatch(\r\n    dateOne: Date,\r\n    dateTwo: Date | Date[],\r\n    multiple = false,\r\n): boolean {\r\n    // if either date is null or undefined, return false\r\n    // if using multiple flag, return false\r\n    if (!dateOne || !dateTwo || multiple) return false;\r\n\r\n    if (Array.isArray(dateTwo)) {\r\n        return dateTwo.some(\r\n            (date) =>\r\n                dateOne.getDate() === date.getDate() &&\r\n                dateOne.getFullYear() === date.getFullYear() &&\r\n                dateOne.getMonth() === date.getMonth(),\r\n        );\r\n    }\r\n    return (\r\n        dateOne.getDate() === dateTwo.getDate() &&\r\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\r\n        dateOne.getMonth() === dateTwo.getMonth()\r\n    );\r\n}\r\n\r\nfunction dateWithin(\r\n    dateOne: Date,\r\n    dates: Date | Date[],\r\n    multiple = false,\r\n): boolean {\r\n    if (!Array.isArray(dates) || multiple) return false;\r\n    return dateOne > dates[0] && dateOne < dates[1];\r\n}\r\n\r\n/** Build cellClasses for cell using validations */\r\nfunction cellClasses(day: Date): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"tableCellSelectedClass\",\r\n            \"o-dpck__table__cell--selected\",\r\n            null,\r\n            dateMatch(day, props.selectedDate) ||\r\n                dateWithin(day, props.selectedDate, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"tableCellFirstSelectedClass\",\r\n            \"o-dpck__table__cell--first-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.selectedDate) && props.selectedDate[0],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellWithinSelectedClass\",\r\n            \"o-dpck__table__cell--within-selected\",\r\n            null,\r\n            dateWithin(day, props.selectedDate, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"tableCellLastSelectedClass\",\r\n            \"o-dpck__table__cell--last-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.selectedDate) && props.selectedDate[1],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellFirstHoveredClass\",\r\n            \"o-dpck__table__cell--first-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.hoveredDateRange) &&\r\n                    props.hoveredDateRange[0],\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellWithinHoveredClass\",\r\n            \"o-dpck__table__cell--within-hovered\",\r\n            null,\r\n            dateWithin(day, props.hoveredDateRange),\r\n        ],\r\n        [\r\n            \"tableCellLastHoveredClass\",\r\n            \"o-dpck__table__cell--last-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.hoveredDateRange) &&\r\n                    props.hoveredDateRange[1],\r\n            ),\r\n        ],\r\n        [\r\n            \"tableCellTodayClass\",\r\n            \"o-dpck__table__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n        [\r\n            \"tableCellSelectableClass\",\r\n            \"o-dpck__table__cell--selectable\",\r\n            null,\r\n            isDateSelectable(day, props.month) && !datepicker.value.disabled,\r\n        ],\r\n        [\r\n            \"tableCellUnselectableClass\",\r\n            \"o-dpck__table__cell--unselectable\",\r\n            null,\r\n            !isDateSelectable(day, props.month) || datepicker.value.disabled,\r\n        ],\r\n\r\n        [\r\n            \"tableCellInvisibleClass\",\r\n            \"o-dpck__table__cell--invisible\",\r\n            null,\r\n            !datepicker.value.nearbyMonthDays && day.getMonth() !== props.month,\r\n        ],\r\n\r\n        [\r\n            \"tableCellNearbyClass\",\r\n            \"o-dpck__table__cell--nearby\",\r\n            null,\r\n            datepicker.value.nearbySelectableMonthDays &&\r\n                day.getMonth() !== props.month,\r\n        ],\r\n        [\r\n            \"tableCellTodayClass\",\r\n            \"o-dpck__table__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n    );\r\n\r\n    return [\r\n        ...tableCellClasses.value,\r\n        ...cellEventsClass.value,\r\n        ...classes.value,\r\n    ];\r\n}\r\n\r\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"tableEventClass\", \"o-dpck__table__event\"],\r\n        [\r\n            \"tableEventVariantClass\",\r\n            \"o-dpck__table__event--\",\r\n            event.type,\r\n            !!event.type,\r\n        ],\r\n        [\r\n            \"tableEventIndicatorsClass\",\r\n            \"o-dpck__table__event--\",\r\n            datepicker.value.indicators,\r\n            !!datepicker.value.indicators,\r\n        ],\r\n    );\r\n    return classes.value;\r\n}\r\n\r\nconst tableRowClasses = defineClasses([\"tableRowClass\", \"o-dpck__table__row\"]);\r\n\r\nconst tableCellClasses = defineClasses([\r\n    \"tableCellClass\",\r\n    \"o-dpck__table__cell\",\r\n]);\r\n\r\nconst tableEventsClasses = defineClasses([\r\n    \"tableEventsClass\",\r\n    \"o-dpck__table__events\",\r\n]);\r\n\r\nconst cellEventsClass = defineClasses([\r\n    \"tableCellEventsClass\",\r\n    \"o-dpck__table__cell--events\",\r\n    null,\r\n    hasEvents,\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"tableRowClasses\">\r\n        <div\r\n            v-if=\"datepicker.showWeekNumber\"\r\n            :class=\"tableCellClasses\"\r\n            :style=\"{\r\n                cursor: datepicker.weekNumberClickable ? 'pointer' : 'auto',\r\n            }\"\r\n            :tabindex=\"datepicker.weekNumberClickable ? 0 : null\"\r\n            role=\"button\"\r\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\r\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\r\n            <span>{{ getWeekNumber(week[6]) }}</span>\r\n        </div>\r\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\r\n            <div\r\n                v-if=\"!datepicker.disabled && isDateSelectable(weekDay, month)\"\r\n                :ref=\"(el) => setDayRef(weekDay, el)\"\r\n                :class=\"cellClasses(weekDay)\"\r\n                role=\"button\"\r\n                :tabindex=\"\r\n                    day === weekDay.getDate() && month === weekDay.getMonth()\r\n                        ? null\r\n                        : 0\r\n                \"\r\n                @click.prevent=\"selectDate(weekDay)\"\r\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\r\n                @focus=\"setRangeHoverEndDate(weekDay)\"\r\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\r\n                <span>{{ weekDay.getDate() }}</span>\r\n                <div\r\n                    v-if=\"eventsDateMatch(weekDay).length\"\r\n                    :class=\"tableEventsClasses\">\r\n                    <div\r\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\r\n                        :key=\"index\"\r\n                        :class=\"eventClasses(event)\" />\r\n                </div>\r\n            </div>\r\n            <div v-else :class=\"cellClasses(weekDay)\">\r\n                <span>{{ weekDay.getDate() }}</span>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\r\n\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { weekBuilder } from \"./utils\";\r\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerTable\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\r\n    dayNames: { type: Array as PropType<string[]>, required: true },\r\n    monthNames: { type: Array as PropType<string[]>, required: true },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** modelValue prop two-way binding */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /** focusedDate prop two-way binding */\r\n    (e: \"update:focusedDate\", value: FocusedDate): void;\r\n    (e: \"range-start\", value: Date): void;\r\n    (e: \"range-end\", value: Date): void;\r\n    (e: \"week-number-click\", value: number): void;\r\n}>();\r\n\r\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\r\n\r\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\");\r\n\r\nconst selectedBeginDate = ref<Date>();\r\nconst selectedEndDate = ref<Date>();\r\nconst hoveredEndDate = ref<Date>();\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst visibleDayNames = computed(() => {\r\n    const visibleDayNames = [];\r\n    let index = datepicker.value.firstDayOfWeek;\r\n    while (visibleDayNames.length < props.dayNames.length) {\r\n        const currentDayName = props.dayNames[index % props.dayNames.length];\r\n        visibleDayNames.push(currentDayName);\r\n        index++;\r\n    }\r\n    if (datepicker.value.showWeekNumber) visibleDayNames.unshift(\"\");\r\n    return visibleDayNames;\r\n});\r\n\r\n/** Return array of all events in the specified month */\r\nconst eventsInThisMonth = computed(() => {\r\n    if (!datepicker.value.events) return [];\r\n    return datepicker.value.events\r\n        .map((event) =>\r\n            !event.date && event instanceof Date ? { date: event } : event,\r\n        )\r\n        .filter(\r\n            (event) =>\r\n                event.date.getMonth() === focusedDateModel.value.month &&\r\n                event.date.getFullYear() === focusedDateModel.value.year,\r\n        );\r\n});\r\n\r\n/** Return array of all weeks in the specified month */\r\nconst weeksInThisMonth = computed(() => {\r\n    validateFocusedDay();\r\n    const month = focusedDateModel.value.month;\r\n    const year = focusedDateModel.value.year;\r\n    const weeksInThisMonth = [];\r\n\r\n    let startingDay = 1;\r\n\r\n    while (weeksInThisMonth.length < 6) {\r\n        const newWeek = weekBuilder(\r\n            startingDay,\r\n            month,\r\n            year,\r\n            datepicker.value.firstDayOfWeek,\r\n        );\r\n        weeksInThisMonth.push(newWeek);\r\n        startingDay += 7;\r\n    }\r\n\r\n    return weeksInThisMonth;\r\n});\r\n\r\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\r\n    if (!datepicker.value.events) return [];\r\n    return eventsInThisMonth.value.filter((event) => {\r\n        const stripped = new Date(event.date);\r\n        stripped.setHours(0, 0, 0, 0);\r\n        const timed = stripped.getTime();\r\n        return week.some((weekDate) => weekDate.getTime() === timed);\r\n    });\r\n}\r\n\r\nconst hoveredDateRange = computed(() => {\r\n    if (!datepicker.value.range || selectedEndDate.value) return [];\r\n    return (\r\n        hoveredEndDate.value < selectedBeginDate.value\r\n            ? [hoveredEndDate.value, selectedBeginDate.value]\r\n            : [selectedBeginDate.value, hoveredEndDate.value]\r\n    ).filter(isDefined);\r\n});\r\n\r\nfunction validateFocusedDay(): void {\r\n    const currentDate = new Date(\r\n        focusedDateModel.value.year,\r\n        focusedDateModel.value.month,\r\n        focusedDateModel.value.day,\r\n    );\r\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\r\n\r\n    let day = 0;\r\n    // Number of days in the current month\r\n    const monthDays = new Date(\r\n        focusedDateModel.value.year,\r\n        focusedDateModel.value.month + 1,\r\n        0,\r\n    ).getDate();\r\n    let firstFocusable = null;\r\n    while (!firstFocusable && ++day < monthDays) {\r\n        const date = new Date(\r\n            focusedDateModel.value.year,\r\n            focusedDateModel.value.month,\r\n            day,\r\n        );\r\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\r\n            firstFocusable = currentDate;\r\n            focusedDateModel.value = {\r\n                day: date.getDate(),\r\n                month: date.getMonth(),\r\n                year: date.getFullYear(),\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\n/** Emit input event with selected date as payload for v-model in parent */\r\nfunction onSelectedDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (!datepicker.value.range && !datepicker.value.multiple)\r\n        emits(\"update:modelValue\", date);\r\n    else if (datepicker.value.range) handleSelectRangeDate(date);\r\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\r\n}\r\n\r\n/*\r\n * If both begin and end dates are set, reset the end date and set the begin date.\r\n * If only begin date is selected, emit an array of the begin date and the new date.\r\n * If not set, only set the begin date.\r\n */\r\nfunction handleSelectRangeDate(date: Date): void {\r\n    if (selectedBeginDate.value && selectedEndDate.value) {\r\n        selectedBeginDate.value = date;\r\n        selectedEndDate.value = undefined;\r\n        emits(\"range-start\", date);\r\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\r\n        if (selectedBeginDate.value > date) {\r\n            selectedEndDate.value = selectedBeginDate.value;\r\n            selectedBeginDate.value = date;\r\n        } else {\r\n            selectedEndDate.value = date;\r\n        }\r\n        emits(\"range-end\", date);\r\n        emits(\"update:modelValue\", [\r\n            selectedBeginDate.value,\r\n            selectedEndDate.value,\r\n        ]);\r\n    } else {\r\n        selectedBeginDate.value = date;\r\n        emits(\"range-start\", date);\r\n    }\r\n}\r\n\r\n/*\r\n * If selected date already exists list of selected dates, remove it from the list\r\n * Otherwise, add date to list of selected dates\r\n */\r\nfunction handleSelectMultipleDates(date: Date): void {\r\n    if (!Array.isArray(props.modelValue)) return;\r\n\r\n    let multipleSelectedDates = props.modelValue;\r\n    const multipleSelect = multipleSelectedDates.filter(\r\n        (selectedDate) =>\r\n            selectedDate.getDate() === date.getDate() &&\r\n            selectedDate.getFullYear() === date.getFullYear() &&\r\n            selectedDate.getMonth() === date.getMonth(),\r\n    );\r\n    if (multipleSelect.length) {\r\n        multipleSelectedDates = multipleSelectedDates.filter(\r\n            (selectedDate) =>\r\n                selectedDate.getDate() !== date.getDate() ||\r\n                selectedDate.getFullYear() !== date.getFullYear() ||\r\n                selectedDate.getMonth() !== date.getMonth(),\r\n        );\r\n    } else {\r\n        multipleSelectedDates = [...multipleSelectedDates, date];\r\n    }\r\n    emits(\"update:modelValue\", multipleSelectedDates);\r\n}\r\n\r\nfunction onRangeHoverEndDate(date: Date): void {\r\n    hoveredEndDate.value = date;\r\n}\r\n\r\nfunction onChangeFocus(date: Date): void {\r\n    focusedDateModel.value = {\r\n        day: date.getDate(),\r\n        month: date.getMonth(),\r\n        year: date.getFullYear(),\r\n    };\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst tableClasses = defineClasses([\"tableClass\", \"o-dpck__table\"]);\r\n\r\nconst tableHeadClasses = defineClasses([\r\n    \"tableHeadClass\",\r\n    \"o-dpck__table__head\",\r\n]);\r\n\r\nconst tableCellClasses = defineClasses([\r\n    \"tableCellClass\",\r\n    \"o-dpck__table__cell\",\r\n]);\r\n\r\nconst tableHeadCellClasses = defineClasses([\r\n    \"tableHeadCellClass\",\r\n    \"o-dpck__table__head-cell\",\r\n]);\r\n\r\nconst tableBodyClasses = defineClasses([\r\n    \"tableBodyClass\",\r\n    \"o-dpck__table__body\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <section :class=\"tableClasses\">\r\n        <header :class=\"tableHeadClasses\">\r\n            <div\r\n                v-for=\"(day, index) in visibleDayNames\"\r\n                :key=\"index\"\r\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\r\n                <span>{{ day }}</span>\r\n            </div>\r\n        </header>\r\n        <div :class=\"tableBodyClasses\">\r\n            <o-datepicker-table-row\r\n                v-for=\"(week, index) in weeksInThisMonth\"\r\n                :key=\"index\"\r\n                :selected-date=\"modelValue\"\r\n                :day=\"focusedDateModel.day\"\r\n                :week=\"week\"\r\n                :month=\"focusedDateModel.month\"\r\n                :events=\"eventsInThisWeek(week)\"\r\n                :hovered-date-range=\"hoveredDateRange\"\r\n                :picker-props=\"props.pickerProps\"\r\n                @select=\"onSelectedDate\"\r\n                @hover-enddate=\"onRangeHoverEndDate\"\r\n                @change-focus=\"onChangeFocus\"\r\n                @week-number-click=\"$emit('week-number-click', $event)\" />\r\n        </div>\r\n    </section>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    nextTick,\r\n    watch,\r\n    type PropType,\r\n    type ComponentPublicInstance,\r\n} from \"vue\";\r\n\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    name: \"ODatepickerMonth\",\r\n    configField: \"datepicker\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    monthNames: { type: Array as PropType<string[]>, required: true },\r\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\r\n    pickerProps: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** modelValue prop two-way binding */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /** focusedDate prop two-way binding */\r\n    (e: \"update:focusedDate\", value: FocusedDate): void;\r\n    (e: \"range-start\", value: Date): void;\r\n    (e: \"range-end\", value: Date): void;\r\n}>();\r\n\r\nconst selectedBeginDate = ref<Date>();\r\nconst selectedEndDate = ref<Date>();\r\nconst hoveredEndDate = ref<Date>();\r\n\r\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\r\n\r\nconst hasEvents = computed(() => !!datepicker.value.events?.length);\r\n\r\nconst monthRefs = ref(new Map());\r\n\r\nfunction setMonthRef(date: Date, el: Element | ComponentPublicInstance): void {\r\n    const refKey = `month-${date.getMonth()}`;\r\n    if (el) monthRefs.value.set(refKey, el);\r\n}\r\n\r\nwatch(\r\n    () => props.focusedDate.month,\r\n    (month) => {\r\n        const refKey = `month-${month}`;\r\n        nextTick(() => {\r\n            // $nextTick is needed when month is changed\r\n            const ref = monthRefs.value.get(refKey);\r\n            if (ref?.length > 0 && ref[0]) {\r\n                ref[0].focus();\r\n            }\r\n        });\r\n    },\r\n);\r\n\r\n/** Return array of all events in the specified month */\r\nconst eventsInThisYear = computed(() => {\r\n    if (!datepicker.value.events) return [];\r\n\r\n    return datepicker.value.events\r\n        .map((event) => {\r\n            if (!event.date && event instanceof Date) event = { date: event };\r\n            if (!event.type) event.type = \"is-primary\";\r\n            return event;\r\n        })\r\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\r\n});\r\n\r\nconst monthDates = computed(() => {\r\n    const year = props.focusedDate.year;\r\n    const months = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        const d = new Date(year, i, 1);\r\n        d.setHours(0, 0, 0, 0);\r\n        months.push(d);\r\n    }\r\n    return months;\r\n});\r\n\r\nconst hoveredDateRange = computed(() => {\r\n    if (!datepicker.value.range || !selectedEndDate.value) return [];\r\n\r\n    return (\r\n        hoveredEndDate.value < selectedBeginDate.value\r\n            ? [hoveredEndDate.value, selectedBeginDate.value]\r\n            : [selectedBeginDate.value, hoveredEndDate.value]\r\n    ).filter(isDefined);\r\n});\r\n\r\nfunction eventsDateMatch(day): DatepickerEvent[] {\r\n    if (!eventsInThisYear.value.length) return [];\r\n    return eventsInThisYear.value.filter(\r\n        (event) => event.date.getMonth() === day.getMonth(),\r\n    );\r\n}\r\n\r\nfunction isDateSelectable(date: Date): boolean {\r\n    const validity = [];\r\n\r\n    if (datepicker.value.minDate)\r\n        validity.push(date >= datepicker.value.minDate);\r\n    if (datepicker.value.maxDate)\r\n        validity.push(date <= datepicker.value.maxDate);\r\n\r\n    validity.push(date.getFullYear() === props.focusedDate.year);\r\n\r\n    if (datepicker.value.selectableDates) {\r\n        if (typeof datepicker.value.selectableDates === \"function\") {\r\n            if (datepicker.value.selectableDates(date)) return true;\r\n            else validity.push(false);\r\n        } else {\r\n            for (let i = 0; i < datepicker.value.selectableDates.length; i++) {\r\n                const enabledDate = datepicker.value.selectableDates[i];\r\n                if (\r\n                    date.getFullYear() === enabledDate.getFullYear() &&\r\n                    date.getMonth() === enabledDate.getMonth()\r\n                )\r\n                    return true;\r\n                else validity.push(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (datepicker.value.unselectableDates) {\r\n        if (typeof datepicker.value.unselectableDates === \"function\") {\r\n            validity.push(!datepicker.value.unselectableDates(date));\r\n        } else {\r\n            for (\r\n                let i = 0;\r\n                i < datepicker.value.unselectableDates.length;\r\n                i++\r\n            ) {\r\n                const disabledDate = datepicker.value.unselectableDates[i];\r\n                validity.push(\r\n                    date.getFullYear() !== disabledDate.getFullYear() ||\r\n                        date.getMonth() !== disabledDate.getMonth(),\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    if (datepicker.value.unselectableDaysOfWeek) {\r\n        for (\r\n            let i = 0;\r\n            i < datepicker.value.unselectableDaysOfWeek.length;\r\n            i++\r\n        ) {\r\n            const dayOfWeek = datepicker.value.unselectableDaysOfWeek[i];\r\n            validity.push(date.getDay() !== dayOfWeek);\r\n        }\r\n    }\r\n\r\n    return validity.indexOf(false) < 0;\r\n}\r\n\r\n// --- Event Handlers ---\r\n\r\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\r\n    let preventDefault = true;\r\n    switch (event.key) {\r\n        case \"Tab\": {\r\n            preventDefault = false;\r\n            break;\r\n        }\r\n        case \" \":\r\n        case \"Space\":\r\n        case \"Spacebar\":\r\n        case \"Enter\": {\r\n            selectDate(weekDay);\r\n            break;\r\n        }\r\n\r\n        case \"ArrowLeft\":\r\n        case \"Left\": {\r\n            changeFocus(weekDay, -1);\r\n            break;\r\n        }\r\n        case \"ArrowRight\":\r\n        case \"Right\": {\r\n            changeFocus(weekDay, 1);\r\n            break;\r\n        }\r\n        case \"ArrowUp\":\r\n        case \"Up\": {\r\n            changeFocus(weekDay, -7);\r\n            break;\r\n        }\r\n        case \"ArrowDown\":\r\n        case \"Down\": {\r\n            changeFocus(weekDay, 7);\r\n            break;\r\n        }\r\n    }\r\n    if (preventDefault) event.preventDefault();\r\n}\r\n\r\n/*\r\n * Emit update:modelValue event with selected date as payload for v-model in parent\r\n */\r\nfunction selectDate(date: Date): void {\r\n    if (datepicker.value.disabled) return;\r\n    if (\r\n        !datepicker.value.range &&\r\n        !datepicker.value.multiple &&\r\n        isDateSelectable(date)\r\n    )\r\n        emits(\"update:modelValue\", date);\r\n    else if (datepicker.value.range) handleSelectRangeDate(date);\r\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\r\n}\r\n\r\n/*\r\n * If both begin and end dates are set, reset the end date and set the begin date.\r\n * If only begin date is selected, emit an array of the begin date and the new date.\r\n * If not set, only set the begin date.\r\n */\r\nfunction handleSelectRangeDate(date: Date): void {\r\n    if (selectedBeginDate.value && selectedEndDate.value) {\r\n        selectedBeginDate.value = date;\r\n        selectedEndDate.value = undefined;\r\n        emits(\"range-start\", date);\r\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\r\n        if (selectedBeginDate.value > date) {\r\n            selectedEndDate.value = selectedBeginDate.value;\r\n            selectedBeginDate.value = date;\r\n        } else {\r\n            selectedEndDate.value = date;\r\n        }\r\n        emits(\"range-end\", date);\r\n        emits(\"update:modelValue\", [\r\n            selectedBeginDate.value,\r\n            selectedEndDate.value,\r\n        ]);\r\n    } else {\r\n        selectedBeginDate.value = date;\r\n        emits(\"range-start\", date);\r\n    }\r\n}\r\n\r\nconst multipleSelectedDates = computed(() =>\r\n    datepicker.value.multiple && props.modelValue ? props.modelValue : [],\r\n);\r\n\r\nfunction handleSelectMultipleDates(date: Date): void {\r\n    if (!Array.isArray(props.modelValue)) return;\r\n    let multipleSelectedDates = props.modelValue;\r\n\r\n    const multipleSelect = multipleSelectedDates.filter(\r\n        (selectedDate) =>\r\n            selectedDate.getDate() === date.getDate() &&\r\n            selectedDate.getFullYear() === date.getFullYear() &&\r\n            selectedDate.getMonth() === date.getMonth(),\r\n    );\r\n    if (multipleSelect.length) {\r\n        multipleSelectedDates = multipleSelectedDates.filter(\r\n            (selectedDate) =>\r\n                selectedDate.getDate() !== date.getDate() ||\r\n                selectedDate.getFullYear() !== date.getFullYear() ||\r\n                selectedDate.getMonth() !== date.getMonth(),\r\n        );\r\n    } else {\r\n        multipleSelectedDates.push(date);\r\n    }\r\n    emits(\"update:modelValue\", multipleSelectedDates);\r\n}\r\n\r\nfunction changeFocus(month: Date, inc: number): void {\r\n    month.setMonth(month.getMonth() + inc);\r\n    const focused = {\r\n        day: month.getDate(),\r\n        month: month.getMonth(),\r\n        year: month.getFullYear(),\r\n    };\r\n    emits(\"update:focusedDate\", focused);\r\n}\r\n\r\nfunction onRangeHoverEndDate(day: Date): void {\r\n    if (datepicker.value.range) hoveredEndDate.value = day;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\r\n    // if either date is null or undefined, return false\r\n    if (!dateOne || !dateTwo || multiple) return false;\r\n    if (Array.isArray(dateTwo))\r\n        return dateTwo.some(\r\n            (date) =>\r\n                dateOne.getFullYear() === date.getFullYear() &&\r\n                dateOne.getMonth() === date.getMonth(),\r\n        );\r\n    return (\r\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\r\n        dateOne.getMonth() === dateTwo.getMonth()\r\n    );\r\n}\r\n\r\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\r\n    if (!Array.isArray(dates) || multiple) return false;\r\n    return dateOne > dates[0] && dateOne < dates[1];\r\n}\r\n\r\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\r\n    if (!Array.isArray(dates) || !multiple) return false;\r\n    return dates.some(\r\n        (date) =>\r\n            dateOne.getDate() === date.getDate() &&\r\n            dateOne.getFullYear() === date.getFullYear() &&\r\n            dateOne.getMonth() === date.getMonth(),\r\n    );\r\n}\r\n\r\nconst monthClasses = defineClasses([\"monthClass\", \"o-dpck__month\"]);\r\n\r\nconst monthBodyClasses = defineClasses([\r\n    \"monthBodyClass\",\r\n    \"o-dpck__month__body\",\r\n]);\r\n\r\nconst monthTableClasses = defineClasses([\r\n    \"monthTableClass\",\r\n    \"o-dpck__month__table\",\r\n]);\r\n\r\nconst monthCellClasses = defineClasses(\r\n    [\"monthCellClass\", \"o-dpck__month__cell\"],\r\n    [\"monthCellEventsClass\", \"o-dpck__month__cell--events\", null, hasEvents],\r\n);\r\n\r\n/**\r\n * Build cellClasses for cell using validations\r\n */\r\nfunction cellClasses(day: Date): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"monthCellSelectedClass\",\r\n            \"o-dpck__month__cell--selected\",\r\n            null,\r\n            dateMatch(day, props.modelValue, datepicker.value.multiple) ||\r\n                dateWithin(day, props.modelValue, datepicker.value.multiple) ||\r\n                dateMultipleSelected(\r\n                    day,\r\n                    multipleSelectedDates.value,\r\n                    datepicker.value.multiple,\r\n                ),\r\n        ],\r\n\r\n        [\r\n            \"monthCellFirstSelectedClass\",\r\n            \"o-dpck__month__cell--first-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.modelValue) && props.modelValue[0],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinSelectedClass\",\r\n            \"o-dpck__month__cell--within-selected\",\r\n            null,\r\n            dateWithin(day, props.modelValue, datepicker.value.multiple),\r\n        ],\r\n        [\r\n            \"monthCellLastSelectedClass\",\r\n            \"o-dpck__month__cell--last-selected\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(props.modelValue) && props.modelValue[1],\r\n                datepicker.value.multiple,\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinHoveredRangeClass\",\r\n            \"o-dpck__month__cell--within-hovered-range\",\r\n            null,\r\n            hoveredDateRange.value &&\r\n                hoveredDateRange.value.length === 2 &&\r\n                (dateMatch(day, hoveredDateRange.value) ||\r\n                    dateWithin(day, hoveredDateRange.value)),\r\n        ],\r\n        [\r\n            \"monthCellFirstHoveredClass\",\r\n            \"o-dpck__month__cell--first-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(hoveredDateRange.value) &&\r\n                    hoveredDateRange.value[0],\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellWithinHoveredClass\",\r\n            \"o-dpck__month__cell--within-hovered\",\r\n            null,\r\n            dateWithin(day, hoveredDateRange.value),\r\n        ],\r\n        [\r\n            \"monthCellLastHoveredClass\",\r\n            \"o-dpck__month__cell--last-hovered\",\r\n            null,\r\n            dateMatch(\r\n                day,\r\n                Array.isArray(hoveredDateRange.value) &&\r\n                    hoveredDateRange.value[1],\r\n            ),\r\n        ],\r\n        [\r\n            \"monthCellTodayClass\",\r\n            \"o-dpck__month__cell--today\",\r\n            null,\r\n            dateMatch(day, datepicker.value.dateCreator()),\r\n        ],\r\n        [\r\n            \"monthCellSelectableclass\",\r\n            \"o-dpck__month__cell--selectable\",\r\n            null,\r\n            isDateSelectable(day) && !datepicker.value.disabled,\r\n        ],\r\n        [\r\n            \"monthCellUnselectableClass\",\r\n            \"o-dpck__month__cell--unselectable\",\r\n            null,\r\n            !isDateSelectable(day) || datepicker.value.disabled,\r\n        ],\r\n    );\r\n\r\n    return [...monthCellClasses.value, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <section :class=\"monthClasses\">\r\n        <div :class=\"monthBodyClasses\">\r\n            <div :class=\"monthTableClasses\">\r\n                <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\r\n                    <div\r\n                        v-if=\"!datepicker.disabled && isDateSelectable(date)\"\r\n                        :ref=\"(el) => setMonthRef(date, el)\"\r\n                        :class=\"cellClasses(date)\"\r\n                        role=\"button\"\r\n                        :disabled=\"datepicker.disabled\"\r\n                        :tabindex=\"\r\n                            focusedDate.month === date.getMonth() ? null : 0\r\n                        \"\r\n                        @click.prevent=\"selectDate(date)\"\r\n                        @mouseenter=\"onRangeHoverEndDate(date)\"\r\n                        @focus=\"onRangeHoverEndDate(date)\"\r\n                        @keydown.prevent=\"onKeydown($event, date)\">\r\n                        {{ monthNames[date.getMonth()] }}\r\n                        <div v-if=\"eventsDateMatch(date).length\" class=\"events\">\r\n                            <div\r\n                                v-for=\"(event, index) in eventsDateMatch(date)\"\r\n                                :key=\"index\"\r\n                                class=\"event\"\r\n                                :class=\"event.type\" />\r\n                        </div>\r\n                    </div>\r\n                    <div v-else :class=\"cellClasses(date)\">\r\n                        {{ monthNames[date.getMonth()] }}\r\n                    </div>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\r\nimport ODatepickerTable from \"./DatepickerTable.vue\";\r\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\r\n\r\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\r\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\r\n\r\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\r\nimport type { ComponentClass, OrugaOptions } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile\r\n * @displayName Datepicker\r\n * @style _datepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODatepicker\",\r\n    configField: \"datepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Date, Array] as PropType<Date | Date[]>,\r\n        default: undefined,\r\n    },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /**\r\n     * Define picker mode\r\n     * @values date, month\r\n     */\r\n    type: {\r\n        type: String,\r\n        default: \"date\",\r\n        validator: (value: string) => [\"month\", \"date\"].indexOf(value) >= 0,\r\n    },\r\n    /** Set custom day names, else use names based on locale */\r\n    dayNames: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"datepicker.dayNames\", undefined),\r\n    },\r\n    /** Set custom month names, else use names based on locale */\r\n    monthNames: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"datepicker.monthNames\", undefined),\r\n    },\r\n    /**\r\n     * Size of the control input\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.size\"),\r\n    },\r\n    /** Set default date to focus on */\r\n    focusedDate: { type: Date, default: undefined },\r\n    /** Events to display on picker */\r\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\r\n    /** Event indicators for style class definiton */\r\n    indicators: { type: String, default: \"dots\" },\r\n    /** Min date to select */\r\n    minDate: { type: Date, default: undefined },\r\n    /** Max date to select */\r\n    maxDate: { type: Date, default: undefined },\r\n    /** Enable date range selection */\r\n    range: { type: Boolean, default: false },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Display datepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: true },\r\n    /** Same as native, also push new item to v-model instead of replacing */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.openOnFocus\", true),\r\n    },\r\n    /** Close dropdown on click */\r\n    closeOnClick: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.closeOnClick\", true),\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    dateFormatter: {\r\n        type: Function as PropType<(date: Date | Date[]) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"datepicker.dateFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    dateParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"datepicker.dateParser\", defaultFunction)(date),\r\n    },\r\n    /** Date creator function, default is `new Date()` */\r\n    dateCreator: {\r\n        type: Function as PropType<() => Date>,\r\n        default: () => getOption(\"datepicker.dateCreator\", () => new Date())(),\r\n    },\r\n    /** Define a list of dates which can be selected */\r\n    selectableDates: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Define a list of dates which can not be selected */\r\n    unselectableDates: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Define a list of weeks which can not be selected */\r\n    unselectableDaysOfWeek: {\r\n        type: Array as PropType<number[]>,\r\n        default: () =>\r\n            getOption(\"datepicker.unselectableDaysOfWeek\", undefined),\r\n    },\r\n    /** Show nearby month days */\r\n    nearbyMonthDays: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.nearbyMonthDays\", true),\r\n    },\r\n    /** Define if nearby month days can be selected */\r\n    nearbySelectableMonthDays: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.nearbySelectableMonthDays\", false),\r\n    },\r\n    /** Show weeek numbers */\r\n    showWeekNumber: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.showWeekNumber\", false),\r\n    },\r\n    /** Define if weeek numbers are clickable */\r\n    weekNumberClickable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.weekNumberClickable\", false),\r\n    },\r\n    /** Set the first day of a week */\r\n    firstDayOfWeek: {\r\n        type: Number,\r\n        default: () => getOption(\"datepicker.firstDayOfWeek\", 0),\r\n    },\r\n    /** Rules for the first week : 1 for the 1st January, 4 for the 4th January */\r\n    rulesForFirstWeek: { type: Number, default: () => 4 },\r\n    /** Define the range of years to show */\r\n    yearsRange: {\r\n        type: Array as PropType<number[]>,\r\n        default: () => getOption(\"datepicker.yearsRange\", [-100, 10]),\r\n    },\r\n    /** Trap dropdown on focus */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.trapFocus\", true),\r\n    },\r\n    /** Position of the dropdown relative to the input */\r\n    position: { type: String, default: undefined },\r\n    /** Enable dropdown mobile modal */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.mobileModal\", true),\r\n    },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Icon name for previous icon */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon name for next icon */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"datepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /** Accessibility next button aria label */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Next Page\"),\r\n    },\r\n    /** Accessibility previous button aria label  */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Previous Page\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker box where you choose the date */\r\n    boxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker header inside the box */\r\n    headerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker buttons inside the box */\r\n    headerButtonsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker buttons inside the box when a size is choosen */\r\n    headerButtonsSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the prev button inside the Datepicker box */\r\n    prevButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the next button inside the Datepicker box */\r\n    nextButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the month and year selects container inside the Datepicker box */\r\n    listsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker table inside the box */\r\n    tableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Datepicker header with days of the week inside the table */\r\n    tableHeadClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the cell inside the table header */\r\n    tableHeadCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table body inside the box */\r\n    tableBodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table row */\r\n    tableRowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell */\r\n    tableCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when nearby month days are hidden */\r\n    tableCellInvisibleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of table cell when it's selected */\r\n    tableCellSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first selected table cell when in range */\r\n    tableCellFirstSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cells within the range when the range is selected */\r\n    tableCellWithinSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last selected table cell during range selection */\r\n    tableCellLastSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first hovered table cell during range selection */\r\n    tableCellFirstHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection */\r\n    tableCellWithinHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last table cell hovered during range selection */\r\n    tableCellLastHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell of the current day */\r\n    tableCellTodayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is selectable */\r\n    tableCellSelectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is unselectable */\r\n    tableCellUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when nearby days (prev/next month) are selectable */\r\n    tableCellNearbyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the cell of a row when at least one event is present */\r\n    tableCellEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the events container */\r\n    tableEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event */\r\n    tableEventClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event indicator when a `variant` is specified */\r\n    tableEventVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the event indicator */\r\n    tableEventIndicatorsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker table inside the box when type is month */\r\n    monthClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table body inside the box when type is month */\r\n    monthBodyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table container when type is month */\r\n    monthTableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when type is month */\r\n    monthCellClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of table cell when it's selected when type is month */\r\n    monthCellSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first selected table cell when in range when type is month */\r\n    monthCellFirstSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cells within the range when the range is selected when type is month */\r\n    monthCellWithinSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last selected table cell during range selection when type is month */\r\n    monthCellLastSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the first hovered table cell during range selection when type is month */\r\n    monthCellWithinHoveredRangeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection when type is month */\r\n    monthCellFirstHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell when hovered during range selection and cell is in range when type is month */\r\n    monthCellWithinHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the last table cell hovered during range selection when type is month */\r\n    monthCellLastHoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell of the current day when type is month */\r\n    monthCellTodayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is selectable when type is month */\r\n    monthCellSelectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the table cell that is unselectable when type is month */\r\n    monthCellUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**Class of the events container when type is month */\r\n    monthCellEventsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Datepicker when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"input\"]>(\"datepicker.inputClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal dropdown component\r\n     * @ignore\r\n     */\r\n    dropdownClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"dropdown\"]>(\r\n                \"datepicker.dropdownClasses\",\r\n                {},\r\n            ),\r\n    },\r\n    /**\r\n     * Class configuration for the internal select component\r\n     * @ignore\r\n     */\r\n    selectClasses: {\r\n        type: Object,\r\n        default: () =>\r\n            getOption<OrugaOptions[\"select\"]>(\"datepicker.selectClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date | Date[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on range start is selected event\r\n     * @param value {Date} range start date\r\n     */\r\n    (e: \"range-start\", value: Date): void;\r\n    /**\r\n     * on range end is selected event\r\n     * @param value {Date} range end date\r\n     */\r\n    (e: \"range-end\", value: Date): void;\r\n    /**\r\n     * on month change event\r\n     * @param value {number} month number\r\n     */\r\n    (e: \"change-month\", value: number): void;\r\n    /**\r\n     * on year change event\r\n     * @param value {number} year number\r\n     */\r\n    (e: \"change-year\", value: number): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst { defaultDateFormatter, defaultDateParser } = useDatepickerMixins(props);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\r\n\r\n/** modelvalue of selected date */\r\nconst vmodel = defineModel<Date | Date[]>();\r\n\r\n/** Dropdown active state */\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\n/** modelValue formated into string */\r\nconst formattedValue = computed(() =>\r\n    Array.isArray(vmodel.value)\r\n        ? (props.dateFormatter as any)([...vmodel.value], defaultDateFormatter)\r\n        : (props.dateFormatter as any)(vmodel.value, defaultDateFormatter),\r\n);\r\n\r\nconst isTypeMonth = computed(() => props.type === \"month\");\r\n\r\n/**\r\n * When v-model is changed:\r\n *   1. Update internal value.\r\n *   2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        // updateInternalState\r\n        if (vmodel.value !== value) {\r\n            const isArray = Array.isArray(value);\r\n            const currentDate = isArray\r\n                ? !value.length\r\n                    ? props.dateCreator()\r\n                    : value[value.length - 1]\r\n                : !value\r\n                  ? props.dateCreator()\r\n                  : value;\r\n            if (\r\n                !isArray ||\r\n                (isArray &&\r\n                    Array.isArray(vmodel.value) &&\r\n                    value.length > vmodel.value.length)\r\n            ) {\r\n                focusedDateData.value = {\r\n                    day: currentDate.getDate(),\r\n                    month: currentDate.getMonth(),\r\n                    year: currentDate.getFullYear(),\r\n                };\r\n            }\r\n        }\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.focusedDate,\r\n    (value) => {\r\n        if (value) {\r\n            focusedDateData.value = {\r\n                day: value.getDate(),\r\n                month: value.getMonth(),\r\n                year: value.getFullYear(),\r\n            };\r\n        }\r\n    },\r\n);\r\n\r\nconst _initialDate =\r\n    (Array.isArray(props.modelValue)\r\n        ? props.modelValue[0]\r\n        : props.modelValue) ||\r\n    props.focusedDate ||\r\n    props.dateCreator();\r\n\r\nif (\r\n    !props.modelValue &&\r\n    props.maxDate &&\r\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\r\n) {\r\n    _initialDate.setFullYear(props.maxDate.getFullYear());\r\n}\r\n\r\nconst focusedDateData = ref<FocusedDate>({\r\n    day: _initialDate.getDate(),\r\n    month: _initialDate.getMonth(),\r\n    year: _initialDate.getFullYear(),\r\n});\r\n\r\n/*\r\n * Emit input event on month and/or year change\r\n */\r\nwatch(\r\n    () => focusedDateData.value.month,\r\n    (value) => emits(\"change-month\", value),\r\n);\r\nwatch(\r\n    () => focusedDateData.value.year,\r\n    (value) => emits(\"change-year\", value),\r\n);\r\n\r\nconst computedMonthNames = computed(() =>\r\n    Array.isArray(props.monthNames)\r\n        ? props.monthNames\r\n        : getMonthNames(props.locale),\r\n);\r\n\r\nconst listOfMonths = computed(() => {\r\n    let minMonth = 0;\r\n    let maxMonth = 12;\r\n    if (\r\n        props.minDate &&\r\n        focusedDateData.value.year === props.minDate.getFullYear()\r\n    ) {\r\n        minMonth = props.minDate.getMonth();\r\n    }\r\n    if (\r\n        props.maxDate &&\r\n        focusedDateData.value.year === props.maxDate.getFullYear()\r\n    ) {\r\n        maxMonth = props.maxDate.getMonth();\r\n    }\r\n    return computedMonthNames.value.map((name, index) => ({\r\n        name: name,\r\n        index: index,\r\n        disabled: index < minMonth || index > maxMonth,\r\n    }));\r\n});\r\n\r\nconst computedDayNames = computed(() => {\r\n    if (Array.isArray(props.dayNames)) return props.dayNames;\r\n    return getWeekdayNames(props.locale);\r\n});\r\n\r\n/*\r\n * Returns an array of years for the year dropdown. If earliest/latest\r\n * dates are set by props, range of years will fall within those dates.\r\n */\r\nconst listOfYears = computed(() => {\r\n    let latestYear = focusedDateData.value.year + props.yearsRange[1];\r\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\r\n        latestYear = Math.max(\r\n            props.maxDate.getFullYear(),\r\n            focusedDateData.value.year,\r\n        );\r\n    }\r\n\r\n    let earliestYear = focusedDateData.value.year + props.yearsRange[0];\r\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\r\n        earliestYear = Math.min(\r\n            props.minDate.getFullYear(),\r\n            focusedDateData.value.year,\r\n        );\r\n    }\r\n\r\n    return Array.from(\r\n        { length: latestYear - earliestYear + 1 || 1 },\r\n        (value, index) => earliestYear + index,\r\n    ).reverse();\r\n});\r\n\r\nconst showPrev = computed(() => {\r\n    if (!props.minDate) return true;\r\n    if (isTypeMonth.value)\r\n        return focusedDateData.value.year > props.minDate.getFullYear();\r\n\r\n    const dateToCheck = new Date(\r\n        focusedDateData.value.year,\r\n        focusedDateData.value.month,\r\n    );\r\n    const date = new Date(\r\n        props.minDate.getFullYear(),\r\n        props.minDate.getMonth(),\r\n    );\r\n    return dateToCheck > date;\r\n});\r\n\r\n/**\r\n * Either decrement month by 1 if not January or decrement year by 1\r\n * and set month to 11 (December) or decrement year when 'month'\r\n */\r\nfunction prev(): void {\r\n    if (props.disabled) return;\r\n\r\n    if (isTypeMonth.value) {\r\n        focusedDateData.value.year -= 1;\r\n    } else {\r\n        if (focusedDateData.value.month > 0) {\r\n            focusedDateData.value.month -= 1;\r\n        } else {\r\n            focusedDateData.value.month = 11;\r\n            focusedDateData.value.year -= 1;\r\n        }\r\n    }\r\n}\r\n\r\nconst showNext = computed(() => {\r\n    if (!props.maxDate) return true;\r\n    if (isTypeMonth.value)\r\n        return focusedDateData.value.year < props.maxDate.getFullYear();\r\n\r\n    const dateToCheck = new Date(\r\n        focusedDateData.value.year,\r\n        focusedDateData.value.month,\r\n    );\r\n    const date = new Date(\r\n        props.maxDate.getFullYear(),\r\n        props.maxDate.getMonth(),\r\n    );\r\n    return dateToCheck < date;\r\n});\r\n\r\n/**\r\n * Either increment month by 1 if not December or increment year by 1\r\n * and set month to 0 (January) or increment year when 'month'\r\n */\r\nfunction next(): void {\r\n    if (props.disabled) return;\r\n    if (isTypeMonth.value) {\r\n        focusedDateData.value.year += 1;\r\n    } else {\r\n        if (focusedDateData.value.month < 11) {\r\n            focusedDateData.value.month += 1;\r\n        } else {\r\n            focusedDateData.value.month = 0;\r\n            focusedDateData.value.year += 1;\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatNative(value: Date | Date[]): string {\r\n    if (Array.isArray(value)) value = value[0];\r\n\r\n    if (!value) return \"\";\r\n    const date = new Date(value);\r\n\r\n    if (isTypeMonth.value) {\r\n        // Format date into string 'YYYY-MM'\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        return year + \"-\" + ((month < 10 ? \"0\" : \"\") + month);\r\n    } else {\r\n        // Format date into string 'YYYY-MM-DD'\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return (\r\n            year +\r\n            \"-\" +\r\n            ((month < 10 ? \"0\" : \"\") + month) +\r\n            \"-\" +\r\n            ((day < 10 ? \"0\" : \"\") + day)\r\n        );\r\n    }\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/** Parse string into date */\r\nfunction onChange(value: string): void {\r\n    const date = (props.dateParser as any)(value, defaultDateParser);\r\n\r\n    if (\r\n        date &&\r\n        Array.isArray(date) &&\r\n        date.length === 2 &&\r\n        !isNaN(date[0]) &&\r\n        !isNaN(date[1])\r\n    ) {\r\n        vmodel.value = date;\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n/** Parse date from string */\r\nfunction onChangeNativePicker(value: string): void {\r\n    const s = value ? value.split(\"-\") : [];\r\n    if (s.length === 3) {\r\n        const year = parseInt(s[0], 10);\r\n        const month = parseInt(s[1]) - 1;\r\n        const day = parseInt(s[2]);\r\n        vmodel.value = new Date(year, month, day);\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-dpck\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-dpck--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"mobileClass\", \"o-dpck--mobile\", null, isMobile],\r\n    [\"expandedClass\", \"o-dpck--expanded\", null, computed(() => props.expanded)],\r\n);\r\n\r\nconst headerClasses = defineClasses([\"headerClass\", \"o-dpck__header\"]);\r\n\r\nconst headerButtonsClasses = defineClasses(\r\n    [\"headerButtonsClass\", \"o-dpck__header__buttons\"],\r\n    [\r\n        \"headerButtonsSizeClass\",\r\n        \"o-dpck__header__buttons--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n\r\nconst prevButtonClasses = defineClasses([\r\n    \"prevButtonClass\",\r\n    \"o-dpck__header__previous\",\r\n]);\r\n\r\nconst nextButtonClasses = defineClasses([\r\n    \"nextButtonClass\",\r\n    \"o-dpck__header__next\",\r\n]);\r\n\r\nconst listsClasses = defineClasses([\"listsClass\", \"o-dpck__header__list\"]);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-dpck__footer\"]);\r\n\r\nconst dropdownClass = defineClasses([\r\n    \"dropdownClasses.rootClass\",\r\n    \"o-tpck__dropdown\",\r\n]);\r\n\r\nconst boxClasses = defineClasses([\"boxClass\", \"o-dpck__box\"]);\r\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: () => pickerRef.value?.focus() });\r\n</script>\r\n\r\n<template>\r\n    <OPickerWrapper\r\n        ref=\"pickerRef\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"datepicker\"\r\n        :value=\"vmodel\"\r\n        :picker-props=\"props\"\r\n        :formatted-value=\"formattedValue\"\r\n        :native-type=\"!isTypeMonth ? 'date' : 'month'\"\r\n        :native-value=\"formatNative(vmodel)\"\r\n        :native-max=\"formatNative(maxDate)\"\r\n        :native-min=\"formatNative(minDate)\"\r\n        :stay-open=\"multiple\"\r\n        :dropdown-classes=\"dropdownClass\"\r\n        :root-classes=\"rootClasses\"\r\n        :box-class=\"boxClassBind\"\r\n        @change=\"onChange\"\r\n        @native-change=\"onChangeNativePicker\"\r\n        @focus=\"$emit('focus', $event)\"\r\n        @blur=\"$emit('blur', $event)\"\r\n        @invalid=\"$emit('invalid', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template v-if=\"$slots.trigger\" #trigger>\r\n            <!--\r\n                @slot Override the trigger\r\n            -->\r\n            <slot name=\"trigger\" />\r\n        </template>\r\n        <header :class=\"headerClasses\">\r\n            <!--\r\n                @slot Override the header\r\n            -->\r\n            <slot name=\"header\">\r\n                <div :class=\"headerButtonsClasses\">\r\n                    <OButton\r\n                        v-if=\"!disabled\"\r\n                        :class=\"prevButtonClasses\"\r\n                        :disabled=\"!showPrev\"\r\n                        :aria-label=\"ariaPreviousLabel\"\r\n                        :icon-pack=\"iconPack\"\r\n                        :icon-left=\"iconPrev\"\r\n                        outlined\r\n                        @click.prevent=\"prev\"\r\n                        @keydown.enter.prevent=\"prev\"\r\n                        @keydown.space.prevent=\"prev\" />\r\n\r\n                    <OButton\r\n                        v-if=\"!disabled\"\r\n                        :class=\"nextButtonClasses\"\r\n                        :disabled=\"!showNext\"\r\n                        :aria-label=\"ariaNextLabel\"\r\n                        :icon-pack=\"iconPack\"\r\n                        :icon-left=\"iconNext\"\r\n                        outlined\r\n                        @click.prevent=\"next\"\r\n                        @keydown.enter.prevent=\"next\"\r\n                        @keydown.space.prevent=\"next\" />\r\n\r\n                    <div :class=\"listsClasses\">\r\n                        <o-select\r\n                            v-if=\"!isTypeMonth\"\r\n                            v-model=\"focusedDateData.month\"\r\n                            :disabled=\"disabled\"\r\n                            :size=\"size\"\r\n                            v-bind=\"selectClasses\">\r\n                            <option\r\n                                v-for=\"month in listOfMonths\"\r\n                                :key=\"month.name\"\r\n                                :value=\"month.index\"\r\n                                :disabled=\"month.disabled\">\r\n                                {{ month.name }}\r\n                            </option>\r\n                        </o-select>\r\n                        <o-select\r\n                            v-model=\"focusedDateData.year\"\r\n                            :disabled=\"disabled\"\r\n                            :size=\"size\"\r\n                            v-bind=\"selectClasses\">\r\n                            <option\r\n                                v-for=\"year in listOfYears\"\r\n                                :key=\"year\"\r\n                                :value=\"year\">\r\n                                {{ year }}\r\n                            </option>\r\n                        </o-select>\r\n                    </div>\r\n                </div>\r\n            </slot>\r\n        </header>\r\n        <!--\r\n            @slot Override the body\r\n        -->\r\n        <slot name=\"body\">\r\n            <o-datepicker-month\r\n                v-if=\"isTypeMonth\"\r\n                v-model=\"vmodel\"\r\n                v-model:focused-date=\"focusedDateData\"\r\n                :month-names=\"computedMonthNames\"\r\n                :picker-props=\"props\"\r\n                @range-start=\"(date) => $emit('range-start', date)\"\r\n                @range-end=\"(date) => $emit('range-end', date)\" />\r\n            <o-datepicker-table\r\n                v-else\r\n                v-model=\"vmodel\"\r\n                v-model:focused-date=\"focusedDateData\"\r\n                :day-names=\"computedDayNames\"\r\n                :month-names=\"computedMonthNames\"\r\n                :picker-props=\"props\"\r\n                @range-start=\"(date) => $emit('range-start', date)\"\r\n                @range-end=\"(date) => $emit('range-end', date)\" />\r\n        </slot>\r\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\r\n            <!--\r\n                @slot Define an additional footer\r\n            -->\r\n            <slot name=\"footer\" />\r\n        </footer>\r\n    </OPickerWrapper>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Datepicker from \"./Datepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export datepicker specific types */\r\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\r\n\r\n/** export datepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Datepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export datepicker components */\r\nexport { Datepicker as ODatepicker };\r\n","import { computed } from \"vue\";\r\nimport { matchWithGroups } from \"../datepicker/utils\";\r\nimport type { TimepickerProps } from \"./types\";\r\n\r\nconst AM = \"AM\";\r\nconst PM = \"PM\";\r\nconst HOUR_FORMAT_24 = \"24\";\r\nconst HOUR_FORMAT_12 = \"12\";\r\n\r\nexport function useTimepickerMixins(props: TimepickerProps) {\r\n    const localeOptions = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: props.enableSeconds ? \"numeric\" : undefined,\r\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n    );\r\n\r\n    const dtf = computed(\r\n        () =>\r\n            new Intl.DateTimeFormat(props.locale, {\r\n                hour: localeOptions.value.hour || \"numeric\",\r\n                minute: localeOptions.value.minute || \"numeric\",\r\n                second: props.enableSeconds\r\n                    ? localeOptions.value.second || \"numeric\"\r\n                    : undefined,\r\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\r\n            }),\r\n    );\r\n\r\n    const computedHourFormat = computed(\r\n        () =>\r\n            props.hourFormat ||\r\n            (localeOptions.value.hour12 ? HOUR_FORMAT_12 : HOUR_FORMAT_24),\r\n    );\r\n\r\n    const isHourFormat24 = computed(\r\n        () => computedHourFormat.value === HOUR_FORMAT_24,\r\n    );\r\n\r\n    const sampleTime = computed(() => {\r\n        const d = props.timeCreator();\r\n        d.setHours(10);\r\n        d.setSeconds(0);\r\n        d.setMinutes(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    });\r\n\r\n    const amString = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            d.setHours(10);\r\n            const dayPeriod = dtf.value\r\n                .formatToParts(d)\r\n                .find((part) => part.type === \"dayPeriod\");\r\n            if (dayPeriod) return dayPeriod.value;\r\n        }\r\n        return AM;\r\n    });\r\n\r\n    const pmString = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            d.setHours(20);\r\n            const dayPeriod = dtf.value\r\n                .formatToParts(d)\r\n                .find((part) => part.type === \"dayPeriod\");\r\n            if (dayPeriod) {\r\n                return dayPeriod.value;\r\n            }\r\n        }\r\n        return PM;\r\n    });\r\n\r\n    const meridiens = computed(() => [amString.value, pmString.value]);\r\n\r\n    const hourLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return \":\";\r\n    });\r\n\r\n    const minuteLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return \":\";\r\n    });\r\n\r\n    const secondLiteral = computed(() => {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const d = sampleTime.value;\r\n            const parts = dtf.value.formatToParts(d);\r\n            const literal = parts.find(\r\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\r\n            );\r\n            if (literal) return literal.value;\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    function defaultTimeFormatter(time: Date): string {\r\n        return dtf.value.format(time);\r\n    }\r\n\r\n    function defaultTimeParser(time: string): Date {\r\n        if (!time) return null;\r\n\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const formatRegex = dtf.value\r\n                .formatToParts(sampleTime.value)\r\n                .map((part) => {\r\n                    if (part.type === \"literal\") {\r\n                        return part.value.replace(/ /g, \"\\\\s?\");\r\n                    } else if (part.type === \"dayPeriod\") {\r\n                        return `((?!=<${part.type}>)(${amString.value}|${\r\n                            pmString.value\r\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\r\n                    }\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const timeGroups = matchWithGroups(formatRegex, time);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            timeGroups.hour = timeGroups.hour\r\n                ? parseInt(timeGroups.hour, 10)\r\n                : null;\r\n            timeGroups.minute = timeGroups.minute\r\n                ? parseInt(timeGroups.minute, 10)\r\n                : null;\r\n            timeGroups.second = timeGroups.second\r\n                ? parseInt(timeGroups.second, 10)\r\n                : null;\r\n            if (\r\n                timeGroups.hour &&\r\n                timeGroups.hour >= 0 &&\r\n                timeGroups.hour < 24 &&\r\n                timeGroups.minute &&\r\n                timeGroups.minute >= 0 &&\r\n                timeGroups.minute < 59\r\n            ) {\r\n                if (\r\n                    timeGroups.dayPeriod &&\r\n                    (timeGroups.dayPeriod.toLowerCase() ===\r\n                        pmString.value.toLowerCase() ||\r\n                        timeGroups.dayPeriod.toLowerCase() ===\r\n                            PM.toLowerCase()) &&\r\n                    timeGroups.hour < 12\r\n                ) {\r\n                    timeGroups.hour += 12;\r\n                }\r\n                const date = sampleTime.value;\r\n                date.setHours(timeGroups.hour);\r\n                date.setMinutes(timeGroups.minute);\r\n                date.setSeconds(timeGroups.second || 0);\r\n                return date;\r\n            }\r\n        }\r\n\r\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\r\n        let am = false;\r\n        if (props.hourFormat === HOUR_FORMAT_12) {\r\n            const dateString12 = time.split(\" \");\r\n            time = dateString12[0];\r\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\r\n        }\r\n        const timeSplit = time.split(\":\");\r\n        let hours = parseInt(timeSplit[0], 10);\r\n        const minutes = parseInt(timeSplit[1], 10);\r\n        const seconds = props.enableSeconds ? parseInt(timeSplit[2], 10) : 0;\r\n        if (\r\n            isNaN(hours) ||\r\n            hours < 0 ||\r\n            hours > 23 ||\r\n            (props.hourFormat === HOUR_FORMAT_12 &&\r\n                (hours < 1 || hours > 12)) ||\r\n            isNaN(minutes) ||\r\n            minutes < 0 ||\r\n            minutes > 59\r\n        ) {\r\n            return null;\r\n        }\r\n        const date = sampleTime.value;\r\n        date.setSeconds(seconds);\r\n        date.setMinutes(minutes);\r\n        if (props.hourFormat === HOUR_FORMAT_12) {\r\n            if (am && hours === 12) {\r\n                hours = 0;\r\n            } else if (!am && hours !== 12) {\r\n                hours += 12;\r\n            }\r\n        }\r\n        date.setHours(hours);\r\n        return new Date(date.getTime());\r\n    }\r\n\r\n    return {\r\n        defaultTimeFormatter,\r\n        defaultTimeParser,\r\n        pmString,\r\n        amString,\r\n        meridiens,\r\n        isHourFormat24,\r\n        hourLiteral,\r\n        minuteLiteral,\r\n        secondLiteral,\r\n    };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useMatchMedia,\r\n    usePropBinding,\r\n    getActiveClasses,\r\n} from \"@/composables\";\r\n\r\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile\r\n * @displayName Timepicker\r\n * @style _timepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTimepicker\",\r\n    configField: \"timepicker\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Date as PropType<Date>, default: undefined },\r\n    /** The active state of the dropdown */\r\n    active: { type: Boolean, default: false },\r\n    /** Min time to select */\r\n    minTime: { type: Date as PropType<Date>, default: undefined },\r\n    /** Max time to select */\r\n    maxTime: { type: Date as PropType<Date>, default: undefined },\r\n    /** Display datepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /**\r\n     * Size of the button\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.size\"),\r\n    },\r\n    hourFormat: { type: String, default: undefined },\r\n    incrementHours: { type: Number, default: 1 },\r\n    incrementMinutes: { type: Number, default: 1 },\r\n    incrementSeconds: { type: Number, default: 1 },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.openOnFocus\", true),\r\n    },\r\n    /** Close dropdown on click */\r\n    closeOnClick: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.closeOnClick\", true),\r\n    },\r\n    enableSeconds: { type: Boolean, default: false },\r\n    defaultMinutes: { type: Number, default: undefined },\r\n    defaultSeconds: { type: Number, default: undefined },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    timeFormatter: {\r\n        type: Function as PropType<(date: Date) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"timepicker.timeFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    timeParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"timepicker.timeParser\", defaultFunction)(date),\r\n    },\r\n    /** time creator function, default is `new Date()` */\r\n    timeCreator: {\r\n        type: Function as PropType<() => Date>,\r\n        default: () => getOption(\"timepicker.timeCreator\", () => new Date())(),\r\n    },\r\n    /** Define a list of times which can not be selected */\r\n    unselectableTimes: {\r\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\r\n        default: () => [],\r\n    },\r\n    /** Reset the time inputs when meridian changes */\r\n    resetOnMeridianChange: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    /** Dropdown trapFocus */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.trapFocus\", true),\r\n    },\r\n    /** Dropdown position */\r\n    position: { type: String, default: undefined },\r\n    /** Enable dropdown mobile modal */\r\n    mobileModal: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.mobileModal\", true),\r\n    },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"timepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"timepicker.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"timepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker component size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker component box where you choose the date */\r\n    boxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker separator */\r\n    separatorClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the internal input component\r\n     * @ignore\r\n     */\r\n    inputClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.inputClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal dropdown component\r\n     * @ignore\r\n     */\r\n    dropdownClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.dropdownClasses\", {}),\r\n    },\r\n    /**\r\n     * Class configuration for the internal select component\r\n     * @ignore\r\n     */\r\n    selectClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"timepicker.selectClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst {\r\n    defaultTimeFormatter,\r\n    defaultTimeParser,\r\n    pmString,\r\n    amString,\r\n    meridiens,\r\n    isHourFormat24,\r\n    hourLiteral,\r\n    minuteLiteral,\r\n    secondLiteral,\r\n} = useTimepickerMixins(props);\r\n\r\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\r\n\r\nconst vmodel = useVModelBinding<Date>(props, emits);\r\n\r\n/** Dropdown active state */\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits);\r\n\r\nconst hoursSelected = ref();\r\nconst minutesSelected = ref();\r\nconst secondsSelected = ref();\r\nconst meridienSelected = ref();\r\n\r\n/**\r\n * When v-model is changed:\r\n *   1. Update internal value.\r\n *   2. If it's invalid, validate again.\r\n */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (value) {\r\n            hoursSelected.value = value.getHours();\r\n            minutesSelected.value = value.getMinutes();\r\n            secondsSelected.value = value.getSeconds();\r\n            meridienSelected.value =\r\n                value.getHours() >= 12 ? pmString.value : amString.value;\r\n        } else {\r\n            hoursSelected.value = null;\r\n            minutesSelected.value = null;\r\n            secondsSelected.value = null;\r\n            meridienSelected.value = amString.value;\r\n        }\r\n    },\r\n    { immediate: true },\r\n);\r\n\r\n/** Format date into string */\r\nconst formattedValue = computed(() =>\r\n    (props.timeFormatter as any)(props.modelValue, defaultTimeFormatter),\r\n);\r\n\r\nconst nativeStep = computed(() => (props.enableSeconds ? \"1\" : null));\r\n\r\nwatch(\r\n    () => props.hourFormat,\r\n    () => {\r\n        if (hoursSelected.value !== null) {\r\n            meridienSelected.value =\r\n                hoursSelected.value >= 12 ? pmString.value : amString.value;\r\n        }\r\n    },\r\n);\r\n\r\nwatch(\r\n    () => props.locale,\r\n    (value) => {\r\n        // see updateInternalState default\r\n        if (!value) meridienSelected.value = amString.value;\r\n    },\r\n);\r\n\r\nfunction formatNumber(value: number, prependZero: boolean): string {\r\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\r\n}\r\n\r\nfunction pad(value: number): string {\r\n    return (value < 10 ? \"0\" : \"\") + value;\r\n}\r\n\r\nconst hours = computed(() => {\r\n    if (!props.incrementHours || props.incrementHours < 1)\r\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\r\n    const hours = [];\r\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\r\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\r\n        let value = i;\r\n        let label = value;\r\n        if (!isHourFormat24.value) {\r\n            value = i + 1;\r\n            label = value;\r\n            if (meridienSelected.value === amString.value) {\r\n                if (value === 12) {\r\n                    value = 0;\r\n                }\r\n            } else if (meridienSelected.value === pmString.value) {\r\n                if (value !== 12) {\r\n                    value += 12;\r\n                }\r\n            }\r\n        }\r\n        hours.push({\r\n            label: formatNumber(label, false),\r\n            value: value,\r\n        });\r\n    }\r\n    return hours;\r\n});\r\n\r\nconst minutes = computed(() => {\r\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\r\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\r\n    const minutes = [];\r\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\r\n        minutes.push({\r\n            label: formatNumber(i, true),\r\n            value: i,\r\n        });\r\n    }\r\n    return minutes;\r\n});\r\n\r\nconst seconds = computed(() => {\r\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\r\n        throw new Error(\"Second increment cannot be null or less than 1.\");\r\n    const seconds = [];\r\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\r\n        seconds.push({\r\n            label: formatNumber(i, true),\r\n            value: i,\r\n        });\r\n    }\r\n    return seconds;\r\n});\r\n\r\nfunction isHourDisabled(hour: number): boolean {\r\n    let disabled = false;\r\n    if (props.minTime) {\r\n        const minHours = props.minTime.getHours();\r\n        const noMinutesAvailable = minutes.value.every((minute) => {\r\n            return isMinuteDisabledForHour(hour, minute.value);\r\n        });\r\n        disabled = hour < minHours || noMinutesAvailable;\r\n    }\r\n    if (props.maxTime) {\r\n        if (!disabled) {\r\n            const maxHours = props.maxTime.getHours();\r\n            disabled = hour > maxHours;\r\n        }\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hour);\r\n                date.setMinutes(minutesSelected.value);\r\n                date.setSeconds(secondsSelected.value);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    if (props.enableSeconds && secondsSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hour &&\r\n                            time.getMinutes() === minutesSelected.value &&\r\n                            time.getSeconds() === secondsSelected.value\r\n                        );\r\n                    } else if (minutesSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hour &&\r\n                            time.getMinutes() === minutesSelected.value\r\n                        );\r\n                    }\r\n                    return false;\r\n                });\r\n                if (unselectable.length > 0) {\r\n                    disabled = true;\r\n                } else {\r\n                    disabled = minutes.value.every((minute) => {\r\n                        return (\r\n                            (props.unselectableTimes as Date[]).filter(\r\n                                (time) => {\r\n                                    return (\r\n                                        time.getHours() === hour &&\r\n                                        time.getMinutes() === minute.value\r\n                                    );\r\n                                },\r\n                            ).length > 0\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return disabled;\r\n}\r\n\r\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\r\n    let disabled = false;\r\n    if (props.minTime) {\r\n        const minHours = props.minTime.getHours();\r\n        const minMinutes = props.minTime.getMinutes();\r\n        disabled = hour === minHours && minute < minMinutes;\r\n    }\r\n    if (props.maxTime) {\r\n        if (!disabled) {\r\n            const maxHours = props.maxTime.getHours();\r\n            const maxMinutes = props.maxTime.getMinutes();\r\n            disabled = hour === maxHours && minute > maxMinutes;\r\n        }\r\n    }\r\n    return disabled;\r\n}\r\n\r\nfunction isMinuteDisabled(minute: number): boolean {\r\n    if (hoursSelected.value === null) return false;\r\n\r\n    let disabled = false;\r\n    if (isHourDisabled(hoursSelected.value)) {\r\n        disabled = true;\r\n    } else {\r\n        disabled = isMinuteDisabledForHour(hoursSelected.value, minute);\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hoursSelected.value);\r\n                date.setMinutes(minute);\r\n                date.setSeconds(secondsSelected.value);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    if (props.enableSeconds && secondsSelected.value !== null) {\r\n                        return (\r\n                            time.getHours() === hoursSelected.value &&\r\n                            time.getMinutes() === minute &&\r\n                            time.getSeconds() === secondsSelected.value\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            time.getHours() === hoursSelected.value &&\r\n                            time.getMinutes() === minute\r\n                        );\r\n                    }\r\n                });\r\n                disabled = unselectable.length > 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSecondDisabled(second: number): boolean {\r\n    if (minutesSelected.value == null) return false;\r\n    let disabled = false;\r\n\r\n    if (isMinuteDisabled(minutesSelected.value)) {\r\n        disabled = true;\r\n    } else {\r\n        if (props.minTime) {\r\n            const minHours = props.minTime.getHours();\r\n            const minMinutes = props.minTime.getMinutes();\r\n            const minSeconds = props.minTime.getSeconds();\r\n            disabled =\r\n                hoursSelected.value === minHours &&\r\n                minutesSelected.value === minMinutes &&\r\n                second < minSeconds;\r\n        }\r\n        if (props.maxTime) {\r\n            if (!disabled) {\r\n                const maxHours = props.maxTime.getHours();\r\n                const maxMinutes = props.maxTime.getMinutes();\r\n                const maxSeconds = props.maxTime.getSeconds();\r\n                disabled =\r\n                    hoursSelected.value === maxHours &&\r\n                    minutesSelected.value === maxMinutes &&\r\n                    second > maxSeconds;\r\n            }\r\n        }\r\n    }\r\n    if (props.unselectableTimes) {\r\n        if (!disabled) {\r\n            if (typeof props.unselectableTimes === \"function\") {\r\n                const date = new Date();\r\n                date.setHours(hoursSelected.value);\r\n                date.setMinutes(minutesSelected.value);\r\n                date.setSeconds(second);\r\n                return props.unselectableTimes(date);\r\n            } else {\r\n                const unselectable = props.unselectableTimes.filter((time) => {\r\n                    return (\r\n                        time.getHours() === hoursSelected.value &&\r\n                        time.getMinutes() === minutesSelected.value &&\r\n                        time.getSeconds() === second\r\n                    );\r\n                });\r\n                disabled = unselectable.length > 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isMeridienDisabled(meridienString: string): boolean {\r\n    const offset = meridienString == \"AM\" ? 0 : 12;\r\n    for (let i = 0; i < 12; i++) {\r\n        if (!isHourDisabled(i + offset)) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction updateDateSelected(\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n    meridiens,\r\n): void {\r\n    if (\r\n        hours != null &&\r\n        minutes != null &&\r\n        ((!isHourFormat24.value && meridiens !== null) || isHourFormat24.value)\r\n    ) {\r\n        let time: Date = null;\r\n        if (vmodel.value) {\r\n            time = new Date(vmodel.value);\r\n        } else {\r\n            time = props.timeCreator();\r\n            time.setMilliseconds(0);\r\n        }\r\n        time.setHours(hours);\r\n        time.setMinutes(minutes);\r\n        time.setSeconds(seconds);\r\n        if (!isNaN(time.getTime())) {\r\n            vmodel.value = new Date(time.getTime());\r\n        }\r\n    }\r\n}\r\n\r\n/** Format date into string 'HH-MM-SS'*/\r\nfunction formatNative(value: Date): string {\r\n    const date = new Date(value);\r\n    if (value && !isNaN(date.getTime())) {\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes();\r\n        const seconds = date.getSeconds();\r\n        return (\r\n            formatNumber(hours, true) +\r\n            \":\" +\r\n            formatNumber(minutes, true) +\r\n            \":\" +\r\n            formatNumber(seconds, true)\r\n        );\r\n    }\r\n    return \"\";\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\nfunction onMeridienChange(value: string): void {\r\n    if (hoursSelected.value !== null && props.resetOnMeridianChange) {\r\n        hoursSelected.value = null;\r\n        minutesSelected.value = null;\r\n        secondsSelected.value = null;\r\n        vmodel.value = null;\r\n    } else if (hoursSelected.value !== null) {\r\n        if (value === pmString.value) hoursSelected.value += 12;\r\n        else if (value === amString.value) hoursSelected.value -= 12;\r\n    }\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        minutesSelected.value,\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        value,\r\n    );\r\n}\r\n\r\nfunction onHoursChange(value: string): void {\r\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\r\n        minutesSelected.value = props.defaultMinutes;\r\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\r\n        secondsSelected.value = props.defaultSeconds;\r\n\r\n    updateDateSelected(\r\n        parseInt(value, 10),\r\n        minutesSelected.value,\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\nfunction onMinutesChange(value: string): void {\r\n    if (!secondsSelected.value && props.defaultSeconds)\r\n        secondsSelected.value = props.defaultSeconds;\r\n\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        parseInt(value, 10),\r\n        props.enableSeconds ? secondsSelected.value : 0,\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\nfunction onSecondsChange(value: string): void {\r\n    updateDateSelected(\r\n        hoursSelected.value,\r\n        minutesSelected.value,\r\n        parseInt(value, 10),\r\n        meridienSelected.value,\r\n    );\r\n}\r\n\r\n/** Parse string into date */\r\nfunction onChange(value: string): void {\r\n    const date = (props.timeParser as any)(value, defaultTimeParser);\r\n    vmodel.value = date ? date : null;\r\n}\r\n\r\n/** Parse time from string */\r\nfunction onChangeNativePicker(date: string): void {\r\n    if (date) {\r\n        let time = null;\r\n        if (vmodel.value) {\r\n            time = new Date(vmodel.value);\r\n        } else {\r\n            time = props.timeCreator();\r\n            time.setMilliseconds(0);\r\n        }\r\n        const t = date.split(\":\");\r\n        time.setHours(parseInt(t[0], 10));\r\n        time.setMinutes(parseInt(t[1], 10));\r\n        time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\r\n        vmodel.value = new Date(time.getTime());\r\n    } else {\r\n        vmodel.value = null;\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst selectSelectClasses = defineClasses([\r\n    \"selectClasses.selectClass\",\r\n    \"o-tpck__select\",\r\n]);\r\n\r\nconst selectPlaceholderClasses = defineClasses([\r\n    \"selectClasses.placeholderClass\",\r\n    \"o-tpck__select-placeholder\",\r\n]);\r\n\r\nconst selectBind = computed(() => ({\r\n    \"select-class\": getActiveClasses(selectSelectClasses.value),\r\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses.value),\r\n    ...props.selectClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tpck\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-tpck--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"mobileClass\", \"o-tpck--mobile\", null, isMobile],\r\n);\r\n\r\nconst separatorClasses = defineClasses([\"separatorClass\", \"o-tpck__separtor\"]);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-tpck__footer\"]);\r\n\r\nconst dropdownClass = defineClasses([\r\n    \"dropdownClasses.rootClass\",\r\n    \"o-tpck__dropdown\",\r\n]);\r\n\r\nconst boxClasses = defineClasses([\"boxClass\", \"o-tpck__box\"]);\r\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: () => pickerRef.value?.focus() });\r\n</script>\r\n\r\n<template>\r\n    <OPickerWrapper\r\n        ref=\"pickerRef\"\r\n        v-model:active=\"isActive\"\r\n        data-oruga=\"timepicker\"\r\n        :value=\"vmodel\"\r\n        :picker-props=\"props\"\r\n        :formatted-value=\"formattedValue\"\r\n        native-type=\"time\"\r\n        :native-value=\"formatNative(vmodel)\"\r\n        :native-max=\"formatNative(maxTime)\"\r\n        :native-min=\"formatNative(minTime)\"\r\n        :native-step=\"nativeStep\"\r\n        :dropdown-classes=\"dropdownClass\"\r\n        :root-classes=\"rootClasses\"\r\n        :box-class=\"boxClassBind\"\r\n        @change=\"onChange\"\r\n        @native-change=\"onChangeNativePicker\"\r\n        @focus=\"$emit('focus', $event)\"\r\n        @blur=\"$emit('blur', $event)\"\r\n        @invalid=\"$emit('invalid', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template v-if=\"$slots.trigger\" #trigger>\r\n            <!--\r\n                @slot Override the trigger\r\n            -->\r\n            <slot name=\"trigger\" />\r\n        </template>\r\n        <o-select\r\n            v-bind=\"selectBind\"\r\n            v-model=\"hoursSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            placeholder=\"00\"\r\n            @change=\"onHoursChange($event.target.value)\">\r\n            <option\r\n                v-for=\"hour in hours\"\r\n                :key=\"hour.value\"\r\n                :value=\"hour.value\"\r\n                :disabled=\"isHourDisabled(hour.value)\">\r\n                {{ hour.label }}\r\n            </option>\r\n        </o-select>\r\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\r\n        <o-select\r\n            v-bind=\"selectBind\"\r\n            v-model=\"minutesSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            placeholder=\"00\"\r\n            @change=\"onMinutesChange($event.target.value)\">\r\n            <option\r\n                v-for=\"minute in minutes\"\r\n                :key=\"minute.value\"\r\n                :value=\"minute.value\"\r\n                :disabled=\"isMinuteDisabled(minute.value)\">\r\n                {{ minute.label }}\r\n            </option>\r\n        </o-select>\r\n        <template v-if=\"enableSeconds\">\r\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\r\n            <o-select\r\n                v-bind=\"selectBind\"\r\n                v-model=\"secondsSelected\"\r\n                override\r\n                :disabled=\"disabled\"\r\n                placeholder=\"00\"\r\n                @change=\"onSecondsChange($event.target.value)\">\r\n                <option\r\n                    v-for=\"second in seconds\"\r\n                    :key=\"second.value\"\r\n                    :value=\"second.value\"\r\n                    :disabled=\"isSecondDisabled(second.value)\">\r\n                    {{ second.label }}\r\n                </option>\r\n            </o-select>\r\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\r\n        </template>\r\n        <o-select\r\n            v-if=\"!isHourFormat24\"\r\n            v-bind=\"selectBind\"\r\n            v-model=\"meridienSelected\"\r\n            override\r\n            :disabled=\"disabled\"\r\n            @change=\"onMeridienChange($event.target.value)\">\r\n            <option\r\n                v-for=\"meridien in meridiens\"\r\n                :key=\"meridien\"\r\n                :value=\"meridien\"\r\n                :disabled=\"isMeridienDisabled(meridien)\">\r\n                {{ meridien }}\r\n            </option>\r\n        </o-select>\r\n\r\n        <footer v-if=\"$slots.default\" :class=\"footerClasses\">\r\n            <!--\r\n                @slot Define an additional content on footer\r\n            -->\r\n            <slot />\r\n        </footer>\r\n    </OPickerWrapper>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\r\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isMobileAgent } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport { matchWithGroups } from \"../datepicker/utils\";\r\n\r\nimport type { DatepickerProps } from \"../datepicker/types\";\r\nimport type { TimepickerProps } from \"../timepicker/types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\r\n * @displayName Datetimepicker\r\n * @style _datetimepicker.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ODatetimepicker\",\r\n    configField: \"datetimepicker\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst AM = \"AM\";\r\nconst PM = \"PM\";\r\nconst HOUR_FORMAT_24 = \"24\";\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Date, default: undefined },\r\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Define props for the underlying datepicker component */\r\n    datepicker: {\r\n        type: Object as PropType<DatepickerProps>,\r\n        default: undefined,\r\n    },\r\n    /** Define props for the underlying timepicker component */\r\n    timepicker: {\r\n        type: Object as PropType<TimepickerProps>,\r\n        default: undefined,\r\n    },\r\n    /** Min date to select */\r\n    minDatetime: { type: Date, default: undefined },\r\n    /** Max date to select */\r\n    maxDatetime: { type: Date, default: undefined },\r\n    /**\r\n     * Size of the input control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.size\"),\r\n    } /** Makes input full width when inside a grouped or addon field */,\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the input rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Same as native input readonly */\r\n    readonly: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Display datetimepicker inline */\r\n    inline: { type: Boolean, default: false },\r\n    /** Open dropdown on focus */\r\n    openOnFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: String,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Custom function to format a date into a string */\r\n    datetimeFormatter: {\r\n        type: Function as PropType<(date: Date) => string>,\r\n        default: (\r\n            date: Date | Date[],\r\n            defaultFunction: (date: Date | Date[]) => string,\r\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\r\n    },\r\n    /** Custom function to parse a string into a date */\r\n    datetimeParser: {\r\n        type: Function as PropType<(date: string) => Date>,\r\n        default: (date: string, defaultFunction: (date: string) => Date) =>\r\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\r\n    },\r\n    /** Date creator function, default is `new Date()` */\r\n    datetimeCreator: {\r\n        type: Function as PropType<(date: Date) => Date>,\r\n        default: (date: Date) =>\r\n            getOption(\r\n                \"datetimepicker.datetimeCreator\",\r\n                (d: Date) => new Date(d),\r\n            )(date),\r\n    },\r\n    /** Dropdown position */\r\n    position: { type: String, default: undefined },\r\n    /** Enable mobile native input if mobile agent */\r\n    mobileNative: {\r\n        type: Boolean,\r\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.icon\", undefined),\r\n    },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"datetimepicker.teleport\", false),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the Datepicker wrapper */\r\n    datepickerWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Timepicker wrapper */\r\n    timepickerWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Date | Date[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: Date | Date[]): void;\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on range start is selected event\r\n     * @param value {Date} range start date\r\n     */\r\n    (e: \"range-start\", value: Date): void;\r\n    /**\r\n     * on range end is selected event\r\n     * @param value {Date} range end date\r\n     */\r\n    (e: \"range-end\", value: Date): void;\r\n    /**\r\n     * on month change event\r\n     * @param value {number} month number\r\n     */\r\n    (e: \"change-month\", value: number): void;\r\n    /**\r\n     * on year change event\r\n     * @param value {number} year number\r\n     */\r\n    (e: \"change-year\", value: number): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\r\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\r\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\r\n\r\nconst elementRef = computed(() =>\r\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\r\n);\r\n\r\n// use form input functionality for native input\r\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\r\n    elementRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst isMobileNative = computed(\r\n    () => props.mobileNative && isMobileAgent.any(),\r\n);\r\n\r\nwatch([() => isMobileNative.value, () => props.inline], () => {\r\n    // $refs attached, it's time to refresh datepicker (input)\r\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\r\n});\r\n\r\n/** Dropdown active state */\r\nconst isActive = defineModel<boolean>(\"active\");\r\n\r\nconst vmodel = defineModel<Date>();\r\n\r\nfunction updateVModel(value: Date | Date[]): void {\r\n    if (!value) {\r\n        vmodel.value = undefined;\r\n        return;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        updateVModel(value[0]);\r\n        return;\r\n    }\r\n    let date = new Date(value.getTime());\r\n    if (!props.modelValue) {\r\n        date = props.datetimeCreator(value);\r\n    } else {\r\n        // restore time part\r\n        if (\r\n            (value.getDate() !== props.modelValue.getDate() ||\r\n                value.getMonth() !== props.modelValue.getMonth() ||\r\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\r\n            value.getHours() === 0 &&\r\n            value.getMinutes() === 0 &&\r\n            value.getSeconds() === 0\r\n        ) {\r\n            date.setHours(\r\n                props.modelValue.getHours(),\r\n                props.modelValue.getMinutes(),\r\n                props.modelValue.getSeconds(),\r\n                0,\r\n            );\r\n        }\r\n    }\r\n    // check min and max range\r\n    if (props.minDatetime && date < props.minDatetime) {\r\n        date = props.minDatetime;\r\n    } else if (props.maxDatetime && date > props.maxDatetime) {\r\n        date = props.maxDatetime;\r\n    }\r\n    vmodel.value = new Date(date.getTime());\r\n}\r\n\r\nconst minDate = computed(() => {\r\n    if (!props.minDatetime)\r\n        return props.datepicker ? props.datepicker.minDate : null;\r\n    return new Date(\r\n        props.minDatetime.getFullYear(),\r\n        props.minDatetime.getMonth(),\r\n        props.minDatetime.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n    );\r\n});\r\n\r\nconst maxDate = computed(() => {\r\n    if (!props.maxDatetime)\r\n        return props.datepicker ? props.datepicker.maxDate : null;\r\n    return new Date(\r\n        props.maxDatetime.getFullYear(),\r\n        props.maxDatetime.getMonth(),\r\n        props.maxDatetime.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n    );\r\n});\r\n\r\n// Only enable min/max time if local (not necessarily UTC) date portion matches\r\nconst minTime = computed(() => {\r\n    if (\r\n        !props.minDatetime ||\r\n        vmodel.value === null ||\r\n        typeof vmodel.value === \"undefined\" ||\r\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\r\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\r\n        vmodel.value.getDate() != props.minDatetime.getDate()\r\n    ) {\r\n        return props.timepicker ? props.timepicker.minTime : null;\r\n    }\r\n    return props.minDatetime;\r\n});\r\n\r\nconst maxTime = computed(() => {\r\n    if (\r\n        !props.maxDatetime ||\r\n        vmodel.value === null ||\r\n        typeof vmodel.value === \"undefined\" ||\r\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\r\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\r\n        vmodel.value.getDate() != props.maxDatetime.getDate()\r\n    ) {\r\n        return props.timepicker ? props.timepicker.maxTime : null;\r\n    }\r\n    return props.maxDatetime;\r\n});\r\n\r\nconst datepickerSize = computed(() =>\r\n    props.datepicker?.size ? props.datepicker.size : props.size,\r\n);\r\n\r\nconst timepickerSize = computed(() =>\r\n    props.timepicker?.size ? props.timepicker.size : props.size,\r\n);\r\n\r\nconst timepickerDisabled = computed(() =>\r\n    props.timepicker?.disabled ? props.timepicker.disabled : props.disabled,\r\n);\r\n\r\nfunction formatNative(value: Date): string {\r\n    const date = new Date(value);\r\n    if (value && !isNaN(date.getTime())) {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes();\r\n        const seconds = date.getSeconds();\r\n        return (\r\n            year +\r\n            \"-\" +\r\n            ((month < 10 ? \"0\" : \"\") + month) +\r\n            \"-\" +\r\n            ((day < 10 ? \"0\" : \"\") + day) +\r\n            \"T\" +\r\n            ((hours < 10 ? \"0\" : \"\") + hours) +\r\n            \":\" +\r\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\r\n            \":\" +\r\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\r\n        );\r\n    }\r\n    return \"\";\r\n}\r\n\r\n// --- Time Format Feature ---\r\n\r\nconst enableSeconds = computed(() =>\r\n    timepickerRef.value?.enableSeconds\r\n        ? timepickerRef.value.enableSeconds\r\n        : false,\r\n);\r\n\r\nconst localeOptions = computed(\r\n    () =>\r\n        new Intl.DateTimeFormat(props.locale, {\r\n            year: \"numeric\",\r\n            month: \"numeric\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: enableSeconds.value ? \"numeric\" : undefined,\r\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\r\n);\r\n\r\nconst isHourFormat24 = computed(\r\n    () =>\r\n        props.timepicker?.hourFormat === HOUR_FORMAT_24 ||\r\n        !localeOptions.value.hour12,\r\n);\r\n\r\nconst dtf = computed(\r\n    () =>\r\n        new Intl.DateTimeFormat(props.locale, {\r\n            year: localeOptions.value.year || \"numeric\",\r\n            month: localeOptions.value.month || \"numeric\",\r\n            day: localeOptions.value.day || \"numeric\",\r\n            hour: localeOptions.value.hour || \"numeric\",\r\n            minute: localeOptions.value.minute || \"numeric\",\r\n            second: enableSeconds.value\r\n                ? localeOptions.value.second || \"numeric\"\r\n                : undefined,\r\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\r\n        }),\r\n);\r\n\r\nconst amString = computed(() => {\r\n    if (\r\n        dtf.value.formatToParts &&\r\n        typeof dtf.value.formatToParts === \"function\"\r\n    ) {\r\n        const d = props.datetimeCreator(new Date());\r\n        d.setHours(10);\r\n        const dayPeriod = dtf.value\r\n            .formatToParts(d)\r\n            .find((part) => part.type === \"dayPeriod\");\r\n        if (dayPeriod) return dayPeriod.value;\r\n    }\r\n    return AM;\r\n});\r\n\r\nconst pmString = computed(() => {\r\n    if (\r\n        dtf.value.formatToParts &&\r\n        typeof dtf.value.formatToParts === \"function\"\r\n    ) {\r\n        const d = props.datetimeCreator(new Date());\r\n        d.setHours(20);\r\n        const dayPeriod = dtf.value\r\n            .formatToParts(d)\r\n            .find((part) => part.type === \"dayPeriod\");\r\n        if (dayPeriod) return dayPeriod.value;\r\n    }\r\n    return PM;\r\n});\r\n\r\nfunction defaultDatetimeParser(value: string): Date {\r\n    function defaultParser(date: string): Date {\r\n        if (\r\n            dtf.value.formatToParts &&\r\n            typeof dtf.value.formatToParts === \"function\"\r\n        ) {\r\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\r\n            if (timepickerRef.value) {\r\n                dayPeriods.push(amString.value);\r\n                dayPeriods.push(pmString.value);\r\n            }\r\n            const parts = this.dtf.formatToParts(new Date());\r\n            const formatRegex = parts\r\n                .map((part, idx) => {\r\n                    if (part.type === \"literal\") {\r\n                        if (\r\n                            idx + 1 < parts.length &&\r\n                            parts[idx + 1].type === \"hour\"\r\n                        ) {\r\n                            return `[^\\\\d]+`;\r\n                        }\r\n                        return part.value.replace(/ /g, \"\\\\s?\");\r\n                    } else if (part.type === \"dayPeriod\") {\r\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\r\n                            \"|\",\r\n                        )})?)`;\r\n                    }\r\n                    return `((?!=<${part.type}>)\\\\d+)`;\r\n                })\r\n                .join(\"\");\r\n            const datetimeGroups = matchWithGroups(formatRegex, date);\r\n\r\n            // We do a simple validation for the group.\r\n            // If it is not valid, it will fallback to Date.parse below\r\n            if (\r\n                datetimeGroups.year &&\r\n                datetimeGroups.year.length === 4 &&\r\n                datetimeGroups.month &&\r\n                datetimeGroups.month <= 12 &&\r\n                datetimeGroups.day &&\r\n                datetimeGroups.day <= 31 &&\r\n                datetimeGroups.hour &&\r\n                datetimeGroups.hour >= 0 &&\r\n                datetimeGroups.hour < 24 &&\r\n                datetimeGroups.minute &&\r\n                datetimeGroups.minute >= 0 &&\r\n                datetimeGroups.minute <= 59\r\n            ) {\r\n                const d = new Date(\r\n                    datetimeGroups.year,\r\n                    datetimeGroups.month - 1,\r\n                    datetimeGroups.day,\r\n                    datetimeGroups.hour,\r\n                    datetimeGroups.minute,\r\n                    datetimeGroups.second || 0,\r\n                );\r\n                return d;\r\n            }\r\n        }\r\n\r\n        return new Date(Date.parse(date));\r\n    }\r\n    const date = (props.datetimeParser as any)(value, defaultParser);\r\n    return date;\r\n}\r\n\r\nfunction defaultDatetimeFormatter(date: Date): string {\r\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\r\n        date ? dtf.value.format(date) : \"\",\r\n    );\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\n/** Parse date from string */\r\nfunction onChangeNativePicker(event: Event): void {\r\n    const date = (event.target as HTMLInputElement).value;\r\n    const s = date ? date.split(/\\D/) : [];\r\n    if (s.length >= 5) {\r\n        const year = parseInt(s[0], 10);\r\n        const month = parseInt(s[1], 10) - 1;\r\n        const day = parseInt(s[2], 10);\r\n        const hours = parseInt(s[3], 10);\r\n        const minutes = parseInt(s[4], 10);\r\n        // Seconds are omitted intentionally; they are unsupported by input\r\n        // type=datetime-local and cause the control to fail native validation\r\n        updateVModel(new Date(year, month, day, hours, minutes));\r\n    } else {\r\n        updateVModel(null);\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst datepickerWrapperClasses = defineClasses([\r\n    \"datepickerWrapperClass\",\r\n    \"o-dtpck__date\",\r\n]);\r\n\r\nconst timepickerWrapperClasses = defineClasses([\r\n    \"timepickerWrapperClass\",\r\n    \"o-dtpck__time\",\r\n]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <o-datepicker\r\n        v-if=\"!isMobileNative || inline\"\r\n        ref=\"datepickerRef\"\r\n        v-bind=\"{ ...$attrs, ...datepicker }\"\r\n        v-model:active=\"isActive\"\r\n        :model-value=\"vmodel\"\r\n        data-oruga=\"datetimepicker\"\r\n        :class=\"datepickerWrapperClasses\"\r\n        :rounded=\"rounded\"\r\n        :open-on-focus=\"openOnFocus\"\r\n        :position=\"position\"\r\n        :inline=\"inline\"\r\n        :readonly=\"readonly\"\r\n        :expanded=\"expanded\"\r\n        :close-on-click=\"false\"\r\n        :date-formatter=\"defaultDatetimeFormatter\"\r\n        :date-parser=\"defaultDatetimeParser\"\r\n        :min-date=\"minDate\"\r\n        :max-date=\"maxDate\"\r\n        :icon=\"icon\"\r\n        :icon-right=\"iconRight\"\r\n        :icon-right-clickable=\"iconRightClickable\"\r\n        :icon-pack=\"iconPack\"\r\n        :size=\"datepickerSize\"\r\n        :placeholder=\"placeholder\"\r\n        :range=\"false\"\r\n        :disabled=\"disabled\"\r\n        :mobile-native=\"isMobileNative\"\r\n        :locale=\"locale\"\r\n        :teleport=\"teleport\"\r\n        @update:model-value=\"updateVModel\"\r\n        @focus=\"onFocus\"\r\n        @blur=\"onBlur\"\r\n        @change-month=\"$emit('change-month', $event)\"\r\n        @change-year=\"$emit('change-year', $event)\"\r\n        @icon-click=\"$emit('icon-click', $event)\"\r\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n        <template #footer>\r\n            <div :class=\"timepickerWrapperClasses\">\r\n                <o-timepicker\r\n                    ref=\"timepickerRef\"\r\n                    v-bind=\"timepicker\"\r\n                    v-model=\"vmodel\"\r\n                    inline\r\n                    :readonly=\"readonly\"\r\n                    :min-time=\"minTime\"\r\n                    :max-time=\"maxTime\"\r\n                    :size=\"timepickerSize\"\r\n                    :disabled=\"timepickerDisabled\"\r\n                    :mobile-native=\"isMobileNative\"\r\n                    :locale=\"locale\" />\r\n            </div>\r\n            <template v-if=\"$slots.footer !== undefined\">\r\n                <!--\r\n                    @slot Define an additional footer\r\n                -->\r\n                <slot name=\"footer\" />\r\n            </template>\r\n        </template>\r\n    </o-datepicker>\r\n\r\n    <!-- Native Picker -->\r\n    <o-input\r\n        v-else\r\n        v-bind=\"$attrs\"\r\n        ref=\"nativeInputRef\"\r\n        type=\"datetime-local\"\r\n        autocomplete=\"off\"\r\n        :value=\"formatNative(vmodel)\"\r\n        :max=\"formatNative(maxDate)\"\r\n        :min=\"formatNative(minDate)\"\r\n        :placeholder=\"placeholder\"\r\n        :size=\"datepickerSize\"\r\n        :icon-pack=\"iconPack\"\r\n        :icon=\"icon\"\r\n        :rounded=\"rounded\"\r\n        :disabled=\"disabled\"\r\n        :readonly=\"false\"\r\n        :use-html5-validation=\"false\"\r\n        @change=\"onChangeNativePicker\"\r\n        @focus=\"onFocus\"\r\n        @blur=\"onBlur\"\r\n        @invalid=\"onInvalid\" />\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Datetimepicker from \"./Datetimepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export datetimepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Datetimepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export datetimepicker components */\r\nexport { Datetimepicker as ODatetimepicker };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Dropdown from \"./Dropdown.vue\";\r\nimport DropdownItem from \"./DropdownItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export dropdown plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Dropdown);\r\n        registerComponent(app, DropdownItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export dropdown components */\r\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Field from \"./Field.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export field plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Field);\r\n    },\r\n} as Plugin;\r\n\r\n/** export field components */\r\nexport { Field as OField };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Icon from \"./Icon.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export icon plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Icon);\r\n    },\r\n} as Plugin;\r\n\r\n/** export icon components */\r\nexport { Icon as OIcon };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Input from \"./Input.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export input plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Input);\r\n    },\r\n} as Plugin;\r\n\r\n/** export input components */\r\nexport { Input as OInput };\r\n","<script setup lang=\"ts\">\r\nimport { ref, onMounted, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useProgrammaticComponent,\r\n    usePropBinding,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * A simple loading overlay\r\n * @displayName Loading\r\n * @style _loading.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OLoading\",\r\n    configField: \"loading\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether loading is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Loader will overlay the full page. */\r\n    fullPage: { type: Boolean, default: true },\r\n    /** Notification label, unnecessary when default slot is used. */\r\n    label: { type: String, default: undefined },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"loading.animation\", \"fade\"),\r\n    },\r\n    /** Is Loading cancable by pressing escape or clicking outside. */\r\n    cancelable: { type: Boolean, default: false },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Icon name to show, unnecessary when default slot is used. */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"loading.icon\", \"loading\"),\r\n    },\r\n    /** Enable spin effect on icon */\r\n    iconSpin: {\r\n        type: Boolean,\r\n        default: () => getOption(\"loading.iconSpin\", true),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"loading.iconSize\", \"medium\"),\r\n    },\r\n    /**\r\n     * DOM element where the loading component will be created on (for programmatic usage).\r\n     * Note that this also changes fullPage to false.\r\n     */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"loading.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the root element when fullpage */\r\n    fullPageClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the loading overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the loading icon */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the loading label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * fullPage prop two-way binding\r\n     * @param value {boolean} - updated fullPage prop\r\n     */\r\n    (e: \"update:fullPage\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\nconst displayInFullPage = usePropBinding(\"fullPage\", props, emits);\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        cancelOptions: [\"escape\", \"outside\"],\r\n    },\r\n);\r\n\r\nonMounted(() => {\r\n    if (props.programmatic && props.container) displayInFullPage.value = false;\r\n});\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-load\"],\r\n    [\"fullPageClass\", \"o-load--fullpage\", null, displayInFullPage],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-load__overlay\"]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-load__icon\"]);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-load__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <transition :name=\"animation\">\r\n        <div\r\n            v-if=\"isActive\"\r\n            ref=\"rootRef\"\r\n            data-oruga=\"loading\"\r\n            role=\"dialog\"\r\n            :class=\"rootClasses\">\r\n            <div\r\n                :class=\"overlayClasses\"\r\n                :tabindex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                @click=\"cancel('outside')\" />\r\n            <!-- \r\n                @slot Override icon and label\r\n                @binding {close} close - function to close the component\r\n            -->\r\n            <slot :close=\"close\">\r\n                <o-icon\r\n                    :icon=\"icon\"\r\n                    :spin=\"iconSpin\"\r\n                    :size=\"iconSize\"\r\n                    :class=\"iconClasses\"\r\n                    both />\r\n                <span v-if=\"label\" :class=\"labelClasses\">\r\n                    {{ label }}\r\n                </span>\r\n            </slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n","export default class InstanceRegistry<T> {\r\n    entries: Array<T>;\r\n\r\n    constructor() {\r\n        this.entries = [];\r\n    }\r\n\r\n    add(entry: T): void {\r\n        this.entries.push(entry);\r\n    }\r\n\r\n    remove(entry: T): void {\r\n        const index = this.entries.indexOf(entry);\r\n        this.entries.splice(index, 1);\r\n    }\r\n\r\n    walk(callback: (value: T) => boolean | void): void {\r\n        // Walk a copy of the array so that the callback is allowed to remove the instance\r\n        this.entries = [...this.entries].filter((e) => {\r\n            const ret = callback(e);\r\n            return !(ret === true);\r\n        });\r\n    }\r\n}\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport type { LoadingProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        loading: typeof LoadingProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Loading>();\r\n\r\ntype LoadingProgrammaticProps = Readonly<\r\n    string | (LoadingProps & OrugaOptions[\"loading\"])\r\n>;\r\n\r\nconst LoadingProgrammatic = {\r\n    open(params: LoadingProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      label: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.label)) {\r\n            slot = componentParams.label;\r\n            delete componentParams.label;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Loading, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default LoadingProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export loading specific types */\r\nexport type { LoadingProps } from \"./types\";\r\n\r\n/** export loading plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Loading);\r\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export loading components */\r\nexport { LoadingProgrammatic, Loading as OLoading };\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, toRaw, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    useProviderParent,\r\n    type ProviderItem,\r\n} from \"@/composables\";\r\n\r\nimport type { MenuComponent, MenuItemComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A simple menu\r\n * @displayName Menu\r\n * @requires ./MenuItem.vue\r\n * @style _menu.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OMenu\",\r\n    configField: \"menu\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Menu label */\r\n    label: { type: String, default: undefined },\r\n    /** If sub menu items are collapsible */\r\n    accordion: { type: Boolean, default: true },\r\n    /** If the menu items are clickable */\r\n    activable: { type: Boolean, default: true },\r\n    /**\r\n     * Role attribute to be passed to the list container for better accessibility.\r\n     * Use menu only in situations where your dropdown is related to a navigation menu.\r\n     * @values list, menu, dialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"menu.ariaRole\", \"menu\"),\r\n        validator: (value: string) =>\r\n            [\"menu\", \"list\", \"dialog\"].indexOf(value) > -1,\r\n    },\r\n    /** Icon to be shown */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconSize\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu list */\r\n    listClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu list label */\r\n    listLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<MenuComponent>(() => ({\r\n    activable: props.activable,\r\n    accordion: props.accordion,\r\n    resetMenu,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { childItems } = useProviderParent<MenuItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nfunction resetMenu(excludedItems: ProviderItem[] = []): void {\r\n    childItems.value.forEach((item) => {\r\n        if (!excludedItems.includes(toRaw(item))) (item.data as any as MenuItemComponent).reset();\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\r\n\r\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\r\n\r\nconst labelClasses = defineClasses([\"listLabelClass\", \"o-menu__label\"]);\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" data-oruga=\"menu\" :class=\"rootClasses\">\r\n        <div v-if=\"label || $slots.label\" :class=\"labelClasses\">\r\n            <!-- \r\n                @slot Override icon and label\r\n            -->\r\n            <slot name=\"label\">\r\n                <o-icon\r\n                    v-if=\"icon\"\r\n                    :icon=\"icon\"\r\n                    :pack=\"iconPack\"\r\n                    :size=\"iconSize\" />\r\n                <span>{{ label }}</span>\r\n            </slot>\r\n        </div>\r\n        <ul :class=\"listClasses\" :role=\"ariaRole\">\r\n            <!--\r\n                @slot Place menu items here \r\n            -->\r\n            <slot />\r\n        </ul>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, toRaw, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useProviderChild,\r\n    useProviderParent,\r\n    type ProviderItem,\r\n} from \"@/composables\";\r\n\r\nimport type {\r\n    MenuComponent,\r\n    MenuItemComponent,\r\n    MenuItemProvider,\r\n} from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * A menu list item\r\n * @displayName Menu Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OMenuItem\",\r\n    configField: \"menu\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** The active state of the menu item, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /** Menu item label */\r\n    label: { type: String, default: undefined },\r\n    /** Menu item will be expanded */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Menu item will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Icon to be shown */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"menu.iconSize\"),\r\n    },\r\n    /** Transition name to apply on menu list */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"menu.animation\", \"slide\"),\r\n    },\r\n    /** Menu item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"menu.menuTag\", \"a\"),\r\n    },\r\n    /**\r\n     * Role attribute to be passed to the list item for better accessibility.\r\n     * @values listitem, menuitem\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: getOption(\"menu.itemAriaRole\", \"menuitem\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the menu item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the active menu item */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the disabled menu item */\r\n    itemDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon of menu item */\r\n    itemIconTextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the menu item when is a submenu */\r\n    itemSubmenuClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element of menu item */\r\n    itemWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: boolean): void;\r\n    /**\r\n     * expanded prop two-way binding\r\n     * @param value {boolean} updated expanded prop\r\n     */\r\n    (e: \"update:expanded\", value: boolean): void;\r\n}>();\r\n\r\nconst providedData = computed<MenuItemComponent>(() => ({\r\n    reset,\r\n}));\r\n\r\n// Inject functionalities and data from the parent menu component\r\nconst { parent, item } = useProviderChild<MenuComponent>({\r\n    data: providedData,\r\n});\r\n\r\n// Inject functionalities and data from the parent menu-item component\r\nconst providedItem = useProviderChild<MenuItemProvider>({\r\n    key: \"menu-item\",\r\n    needParent: false,\r\n});\r\n\r\nconst itemParent = computed(() => providedItem.parent?.value);\r\n\r\nconst isActive = usePropBinding(\"active\", props, emits, { passive: true });\r\n\r\nconst isExpanded = usePropBinding(\"expanded\", props, emits, { passive: true });\r\n\r\n/** template identifier */\r\nconst identifier = computed(() =>\r\n    itemParent.value\r\n        ? `menu-item-${providedItem.item.value.identifier}`\r\n        : `menu-${item.value.identifier}`,\r\n);\r\n\r\nfunction onClick(): void {\r\n    if (props.disabled) return;\r\n    triggerReset();\r\n    isExpanded.value = props.expanded || !isExpanded.value;\r\n    if (parent.value.activable) isActive.value = true;\r\n}\r\n\r\nfunction triggerReset(child?: ProviderItem): void {\r\n    // The point of this method is to collect references to the clicked item and any parent,\r\n    // this way we can skip resetting those elements.\r\n    if (itemParent.value?.triggerReset) {\r\n        itemParent.value.triggerReset(toRaw(item.value));\r\n    }\r\n    // else if not a sub item reset parent menu\r\n    else if (parent.value.resetMenu) {\r\n        parent.value.resetMenu([toRaw(item.value), child]);\r\n    }\r\n}\r\n\r\nfunction reset(): void {\r\n    if (parent.value.accordion) isExpanded.value = false;\r\n    if (parent.value.activable) isActive.value = false;\r\n}\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<MenuItemProvider>(() => ({\r\n    triggerReset,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(rootRef, { key: \"menu-item\", data: provideData });\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-menu__item\"],\r\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\r\n    [\r\n        \"itemDisabledClass\",\r\n        \"o-menu__item--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"itemIconTextClass\",\r\n        \"o-menu__item--icon-text\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n);\r\n\r\nconst submenuClasses = defineClasses([\r\n    \"itemSubmenuClass\",\r\n    \"o-menu__item__submenu\",\r\n]);\r\n\r\nconst wrapperClasses = defineClasses([\r\n    \"itemWrapperClass\",\r\n    \"o-menu__item__wrapper\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <li\r\n        ref=\"rootRef\"\r\n        :role=\"ariaRole\"\r\n        :class=\"wrapperClasses\"\r\n        :data-id=\"identifier\"\r\n        data-oruga=\"menu-item\"\r\n        aria-roledescription=\"item\">\r\n        <component\r\n            :is=\"tag\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"itemClasses\"\r\n            @click=\"onClick()\">\r\n            <o-icon\r\n                v-if=\"icon\"\r\n                :icon=\"icon\"\r\n                :pack=\"iconPack\"\r\n                :size=\"iconSize\" />\r\n            <!-- \r\n                @slot Override label\r\n                @binding {boolean} expanded - item expanded state\r\n                @binding {boolean} active - item active state\r\n            -->\r\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\r\n                <span>{{ label }}</span>\r\n            </slot>\r\n        </component>\r\n\r\n        <!-- sub menu items -->\r\n        <template v-if=\"$slots.default\">\r\n            <transition :name=\"animation\">\r\n                <ul v-show=\"isExpanded\" :class=\"submenuClasses\">\r\n                    <!--\r\n                        @slot Place menu items here \r\n                    -->\r\n                    <slot />\r\n                </ul>\r\n            </transition>\r\n        </template>\r\n    </li>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Menu from \"./Menu.vue\";\r\nimport MenuItem from \"./MenuItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export menu plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Menu);\r\n        registerComponent(app, MenuItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export menu components */\r\nexport { Menu as OMenu, MenuItem as OMenuItem };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    watch,\r\n    nextTick,\r\n    onBeforeUnmount,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { vTrapFocus } from \"@/directives/trapFocus\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport { removeElement, toCssDimension } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useMatchMedia,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * Classic modal overlay to include any content you may need\r\n * @displayName Modal\r\n * @style _modal.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OModal\",\r\n    configField: \"modal\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: false },\r\n    /** Display modal as full screen */\r\n    fullScreen: { type: Boolean, default: false },\r\n    /** Text content, unnecessary when default slot is used */\r\n    content: { type: String, default: undefined },\r\n    /** Width of the Modal */\r\n    width: {\r\n        type: [String, Number],\r\n        default: () => getOption(\"modal.width\", 960),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"modal.animation\", \"zoom-out\"),\r\n    },\r\n    /**\r\n     * Is Modal cancleable by clicking 'X', pressing escape or clicking outside\r\n     * @values escape, x, outside, button, true, false\r\n     */\r\n    cancelable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"modal.cancelable\", [\"escape\", \"x\", \"outside\", \"button\"]),\r\n    },\r\n    /** Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside) */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled) */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\r\n     * but will set body to position fixed, might break some layouts.\r\n     * @values keep, clip\r\n     */\r\n    scroll: {\r\n        type: String,\r\n        default: () => getOption(\"modal.scroll\", \"keep\"),\r\n        validator: (value: string) => [\"keep\", \"clip\"].indexOf(value) >= 0,\r\n    },\r\n    /** Trap focus inside the modal */\r\n    trapFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.trapFocus\", true),\r\n    },\r\n    /**\r\n     * Role attribute to be passed to the div wrapper for better accessibility.\r\n     * @values dialog, alertdialog\r\n     */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"modal.ariaRole\"),\r\n        validator: (value: string) =>\r\n            [\"dialog\", \"alertdialog\"].indexOf(value) >= 0,\r\n    },\r\n    /** Accessibility aria-label to be passed to the div wrapper element */\r\n    ariaLabel: { type: String, default: () => getOption(\"modal.ariaLabel\") },\r\n    /** Destroy modal on hide */\r\n    destroyOnHide: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.destroyOnHide\", false),\r\n    },\r\n    /** Automatically focus modal when active */\r\n    autoFocus: {\r\n        type: Boolean,\r\n        default: () => getOption(\"modal.autoFocus\", true),\r\n    },\r\n    /** Close icon name */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"modal.closeIcon\", \"close\"),\r\n    },\r\n    /**\r\n     * Size of close icon\r\n     * @values small, medium, large\r\n     */\r\n    closeIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"modal.closeIconSize\", \"medium\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"modal.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"modal.teleport\", false),\r\n    },\r\n    /**\r\n     * Component to be injected, used to open a component modal programmatically.\r\n     * Close modal within the component by emitting a 'close' event — emits('close')\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component */\r\n    events: { type: Object, default: () => ({}) },\r\n    /** DOM element where the modal component will be created on (for programmatic usage) */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"modal.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of modal component when its active */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when fullscreen */\r\n    fullScreenClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of modal component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when scroll is clip */\r\n    scrollClipClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the modal when scroll is not clip */\r\n    noScrollClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        destroyOnHide: props.destroyOnHide,\r\n        cancelOptions: getOption(\"modal.cancelable\", [\r\n            \"escape\",\r\n            \"x\",\r\n            \"outside\",\r\n            \"button\",\r\n        ]),\r\n    },\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst _teleport = computed(() =>\r\n    typeof props.teleport === \"boolean\"\r\n        ? { to: \"body\", disabled: !props.teleport }\r\n        : { to: props.teleport, disabled: false },\r\n);\r\n\r\nconst savedScrollTop = ref(null);\r\nconst isAnimating = ref(!props.active);\r\n\r\nwatch(isActive, (value) => {\r\n    handleScroll();\r\n    if (value && rootRef.value && props.autoFocus)\r\n        nextTick(() => rootRef.value.focus());\r\n    // mark the modal as destoyed after it get closed\r\n    if (!value && props.destroyOnHide)\r\n        // wait for transition finish\r\n        setTimeout(() => removeElement(rootRef.value));\r\n});\r\n\r\nconst showX = computed(() =>\r\n    Array.isArray(props.cancelable)\r\n        ? props.cancelable.indexOf(\"x\") >= 0\r\n        : props.cancelable,\r\n);\r\n\r\nconst customStyle = computed(() =>\r\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\r\n);\r\n\r\nonBeforeUnmount(() => {\r\n    if (isClient) {\r\n        // reset scroll\r\n        const scrollto = savedScrollTop.value\r\n            ? savedScrollTop.value\r\n            : document.documentElement.scrollTop;\r\n        if (scrollClass.value) {\r\n            document.body.classList.remove(...scrollClass.value);\r\n            document.documentElement.classList.remove(...scrollClass.value);\r\n        }\r\n        document.documentElement.scrollTop = scrollto;\r\n        document.body.style.top = null;\r\n    }\r\n});\r\n\r\nfunction handleScroll(): void {\r\n    if (!isClient) return;\r\n\r\n    if (props.scroll === \"clip\") {\r\n        if (scrollClass.value) {\r\n            if (isActive.value)\r\n                document.documentElement.classList.add(...scrollClass.value);\r\n            else\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n        }\r\n        return;\r\n    }\r\n\r\n    savedScrollTop.value = savedScrollTop.value\r\n        ? savedScrollTop.value\r\n        : document.documentElement.scrollTop;\r\n\r\n    if (scrollClass.value) {\r\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\r\n        else document.body.classList.remove(...scrollClass.value);\r\n    }\r\n\r\n    if (isActive.value) {\r\n        document.body.style.top = `-${savedScrollTop.value}px`;\r\n        return;\r\n    }\r\n\r\n    document.documentElement.scrollTop = savedScrollTop.value;\r\n    document.body.style.top = null;\r\n    savedScrollTop.value = null;\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isAnimating.value = false;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isAnimating.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-modal\"],\r\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\r\n    [\"activeClass\", \"o-modal--active\", null, isActive],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-modal__content\"],\r\n    [\r\n        \"fullScreenClass\",\r\n        \"o-modal__content--full-screen\",\r\n        null,\r\n        computed(() => props.fullScreen),\r\n    ],\r\n);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\r\n\r\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\r\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\r\n\r\nconst scrollClass = computed(() =>\r\n    getActiveClasses(\r\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\r\n    ),\r\n);\r\n\r\n// computed ref must be computed at least once for programmatic usage\r\nscrollClass.value;\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\r\n        <transition\r\n            :name=\"animation\"\r\n            @after-enter=\"afterEnter\"\r\n            @before-leave=\"beforeLeave\">\r\n            <div\r\n                v-show=\"isActive\"\r\n                v-bind=\"$attrs\"\r\n                ref=\"rootRef\"\r\n                v-trap-focus=\"trapFocus\"\r\n                data-oruga=\"modal\"\r\n                :class=\"rootClasses\"\r\n                :tabindex=\"-1\"\r\n                :role=\"ariaRole\"\r\n                :aria-label=\"ariaLabel\"\r\n                :aria-modal=\"isActive\">\r\n                <div\r\n                    :class=\"overlayClasses\"\r\n                    tabindex=\"-1\"\r\n                    aria-hidden=\"true\"\r\n                    @click=\"cancel('outside')\" />\r\n\r\n                <div :class=\"contentClasses\" :style=\"customStyle\">\r\n                    <!-- injected component for programmatic usage -->\r\n                    <component\r\n                        v-bind=\"$props.props\"\r\n                        :is=\"component\"\r\n                        v-if=\"component\"\r\n                        v-on=\"$props.events\"\r\n                        @close=\"close\" />\r\n                    <!--\r\n                        @slot Modal default content, default is content prop\r\n                        @binding {(...args): void} close - function to close the component\r\n                    -->\r\n                    <slot v-else :close=\"close\">\r\n                        <div v-if=\"content\">{{ content }}</div>\r\n                    </slot>\r\n\r\n                    <o-icon\r\n                        v-if=\"showX\"\r\n                        v-show=\"!isAnimating\"\r\n                        clickable\r\n                        both\r\n                        :class=\"closeClasses\"\r\n                        :icon=\"closeIcon\"\r\n                        :size=\"closeIconSize\"\r\n                        @click=\"cancel('x')\" />\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </Teleport>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Modal from \"./Modal.vue\";\r\nimport type { ModalProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        modal: typeof ModalProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Modal>();\r\n\r\ntype ModalProgrammaticProps = Readonly<\r\n    string | (ModalProps & OrugaOptions[\"modal\"])\r\n>;\r\n\r\nconst ModalProgrammatic = {\r\n    open(params: ModalProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      content: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.content)) {\r\n            slot = componentParams.content;\r\n            delete componentParams.content;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Modal, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default ModalProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Modal from \"./Modal.vue\";\r\nimport ModalProgrammatic from \"./ModalProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export modal specific types */\r\nexport type { ModalProps } from \"./types\";\r\n\r\n/** export modal plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Modal);\r\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export modal components */\r\nexport { ModalProgrammatic, Modal as OModal };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Bold notification blocks to alert your users of something\r\n * @displayName Notification\r\n * @requires ./NotificationNotice.vue\r\n * @style _notification.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ONotification\",\r\n    configField: \"notification\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: true },\r\n    /**\r\n     * Type (color) of the notification\r\n     * @values info, success, warning, danger\r\n     */\r\n    type: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"info\", \"success\", \"warning\", \"danger\", undefined].indexOf(value) >\r\n            -1,\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"notification.variant\"),\r\n    },\r\n    /**\r\n     * Which position the notification will appear when programmatically\r\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"notification.position\", \"top\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"top-right\",\r\n                \"top\",\r\n                \"top-left\",\r\n                \"bottom-right\",\r\n                \"bottom\",\r\n                \"bottom-left\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Message text (can contain HTML), unnecessary when default slot is used */\r\n    message: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: undefined,\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"notification.animation\", \"fade\"),\r\n    },\r\n    /** Accessibility label for the close button */\r\n    ariaCloseLabel: {\r\n        type: String,\r\n        default: () => getOption(\"notification.ariaCloseLabel\", \"Close\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"notification.iconPack\"),\r\n    },\r\n    /** Icon name to use */\r\n    icon: { type: String, default: undefined },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"notification.iconSize\", \"large\"),\r\n    },\r\n    /** Add close button to the item that closes the notification */\r\n    closable: { type: Boolean, default: false },\r\n    /** Close icon name */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"notification.closeIcon\", \"close\"),\r\n    },\r\n    /**\r\n     * Size of close icon\r\n     * @values small, medium, large\r\n     */\r\n    closeIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"notification.closeIconSize\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button container */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the content element */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the icon on the left */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the element when positioned */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the notification variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the wrapper element */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\n/** Icon name (MDI) based on type. */\r\nconst computedIcon = computed(() => {\r\n    if (props.icon) return props.icon;\r\n\r\n    switch (props.type) {\r\n        case \"info\":\r\n            return \"information\";\r\n        case \"success\":\r\n            return \"check-circle\";\r\n        case \"warning\":\r\n            return \"alert\";\r\n        case \"danger\":\r\n            return \"alert-circle\";\r\n        default:\r\n            return null;\r\n    }\r\n});\r\n\r\n/** Close the Message and emit events. */\r\nfunction close(...args: any[]): void {\r\n    isActive.value = false;\r\n    emits(\"close\", ...args);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-notification\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-notification--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-notification--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n);\r\n\r\nconst wrapperClasses = defineClasses([\r\n    \"wrapperClass\",\r\n    \"o-notification__wrapper\",\r\n]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\r\n\r\nconst contentClasses = defineClasses([\r\n    \"contentClass\",\r\n    \"o-notification__content\",\r\n]);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\r\n</script>\r\n\r\n<template>\r\n    <transition :name=\"animation\">\r\n        <article\r\n            v-show=\"isActive\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"rootClasses\"\r\n            data-oruga=\"notification\">\r\n            <button\r\n                v-if=\"closable\"\r\n                :class=\"closeClasses\"\r\n                type=\"button\"\r\n                :aria-label=\"ariaCloseLabel\"\r\n                @click=\"close({ action: 'close', method: 'x' })\">\r\n                <o-icon\r\n                    clickable\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    :icon=\"closeIcon\"\r\n                    :size=\"closeIconSize\" />\r\n            </button>\r\n\r\n            <!--\r\n                @slot Notification inner content, outside of the message container\r\n                @binding {(...args): void} close - function to close the notification\r\n            -->\r\n            <slot name=\"inner\" :close=\"close\" />\r\n\r\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\r\n                <o-icon\r\n                    v-if=\"computedIcon\"\r\n                    :icon=\"computedIcon\"\r\n                    :pack=\"iconPack\"\r\n                    :class=\"iconClasses\"\r\n                    both\r\n                    :size=\"iconSize\"\r\n                    aria-hidden />\r\n                <div :class=\"contentClasses\">\r\n                    <!--\r\n                        @slot Notification default content, default is message prop\r\n                        @binding {(...args): void} close - function to close the notification\r\n                    -->\r\n                    <slot :close=\"close\">\r\n                        <span v-if=\"message\" v-html=\"message\" />\r\n                    </slot>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </transition>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    onMounted,\r\n    onBeforeMount,\r\n    watch,\r\n    type PropType,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { NotifcationProps } from \"./types\";\r\nimport type { ProgrammaticInstance, ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage\r\n * @displayName Notification Notice\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ONotificationNotice\",\r\n    configField: \"notification\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether notification is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: true },\r\n    /**\r\n     * Which position the notification will appear when programmatically.\r\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"notification.position\", \"top\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"top-right\",\r\n                \"top\",\r\n                \"top-left\",\r\n                \"bottom-right\",\r\n                \"bottom\",\r\n                \"bottom-left\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Hide notification after duration (in miliseconds) */\r\n    duration: {\r\n        type: Number,\r\n        default: () => getOption(\"notification.duration\", 2000),\r\n    },\r\n    /** Show the Notification infinitely until it is dismissed. */\r\n    infinite: { type: Boolean, default: false },\r\n    /** If notice should queue with others notices (snackbar/toast/notification). */\r\n    queue: {\r\n        type: Boolean,\r\n        default: () => getOption(\"notification.queue\"),\r\n    },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled). */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Component to be injected.\r\n     * Close notification within the component by emitting a 'close' event — $emit('close').\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component. */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component. */\r\n    events: { type: Object, default: () => ({}) },\r\n    /**\r\n     * DOM element the toast will be created on (for programmatic usage).\r\n     * Note that this also changes the position of the toast from fixed to absolute.\r\n     * Meaning that the container should be fixed.\r\n     */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"notification.container\", \"body\"),\r\n    },\r\n    /**\r\n     * Props passed to the internal notification component.\r\n     * @ignore\r\n     */\r\n    notification: {\r\n        type: Object as PropType<NotifcationProps>,\r\n        default: () => ({}),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Root class of the notice */\r\n    noticeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the notice when positioned */\r\n    noticePositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the custom container element */\r\n    noticeCustomContainerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst notificationRef = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, container } = useProgrammaticComponent(\r\n    () => notificationRef.value.$el,\r\n    props,\r\n    emits,\r\n    {\r\n        cancelOptions: [\"escape\", \"x\"],\r\n    },\r\n);\r\n\r\nconst parentTop = ref(null);\r\nconst parentBottom = ref(null);\r\n\r\nconst timer = ref();\r\n\r\nwatch(\r\n    () => isActive,\r\n    (value) => {\r\n        if (value) setAutoClose();\r\n        else if (timer.value) clearTimeout(timer.value);\r\n    },\r\n);\r\n\r\n/** Create or inject notice dom container elements. */\r\nonBeforeMount(() => {\r\n    if (\r\n        noticeClasses.value &&\r\n        positionBottomClasses.value &&\r\n        positionTopClasses.value\r\n    ) {\r\n        const rootClasses = getActiveClasses(noticeClasses.value);\r\n        const topClasses = getActiveClasses(positionTopClasses.value);\r\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\r\n\r\n        parentTop.value = container.value.querySelector(\r\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\r\n        );\r\n        parentBottom.value = container.value.querySelector(\r\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\r\n        );\r\n\r\n        if (parentTop.value && parentBottom.value) return;\r\n\r\n        if (!parentTop.value) {\r\n            parentTop.value = document.createElement(\"div\");\r\n            parentTop.value.className = `${rootClasses.join(\r\n                \" \",\r\n            )} ${topClasses.join(\" \")}`;\r\n        }\r\n\r\n        if (!parentBottom.value) {\r\n            parentBottom.value = document.createElement(\"div\");\r\n            parentBottom.value.className = `${rootClasses.join(\r\n                \" \",\r\n            )} ${bottomClasses.join(\" \")}`;\r\n        }\r\n\r\n        container.value.appendChild(parentTop.value);\r\n        container.value.appendChild(parentBottom.value);\r\n\r\n        if (container.value.tagName !== \"BODY\") {\r\n            const classes = getActiveClasses(\r\n                noticeCustomContainerClasses.value,\r\n            );\r\n            if (classes?.length)\r\n                classes\r\n                    .filter((c) => !!c)\r\n                    .forEach((c: string) => {\r\n                        parentTop.value.classList.add(c);\r\n                        parentBottom.value.classList.add(c);\r\n                    });\r\n        }\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    showNotice();\r\n    setAutoClose();\r\n});\r\n\r\nconst correctParent = computed(() => {\r\n    switch (props.position) {\r\n        case \"top-right\":\r\n        case \"top\":\r\n        case \"top-left\":\r\n            return parentTop.value;\r\n\r\n        case \"bottom-right\":\r\n        case \"bottom\":\r\n        case \"bottom-left\":\r\n            return parentBottom.value;\r\n        default:\r\n            return null;\r\n    }\r\n});\r\n\r\nconst shouldQueue = computed(() =>\r\n    props.queue\r\n        ? parentTop.value.childElementCount > 0 ||\r\n          parentBottom.value.childElementCount > 0\r\n        : false,\r\n);\r\n\r\nfunction showNotice(): void {\r\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\r\n    correctParent.value.insertAdjacentElement(\r\n        \"afterbegin\",\r\n        notificationRef.value.$el,\r\n    );\r\n    isActive.value = true;\r\n}\r\n\r\n/** Set timer to auto close message */\r\nfunction setAutoClose(): void {\r\n    if (!props.infinite) {\r\n        // clear old timer\r\n        if (timer.value) clearTimeout(timer.value);\r\n        // set new timer\r\n        timer.value = setTimeout(() => {\r\n            if (isActive.value)\r\n                handleClose({ action: \"close\", method: \"timeout\" });\r\n        }, props.duration);\r\n    }\r\n}\r\n\r\nfunction handleClose(...args: any[]): void {\r\n    clearTimeout(timer.value);\r\n    close(...args);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\r\n\r\nconst positionTopClasses = defineClasses([\r\n    \"noticePositionClass\",\r\n    \"o-notices--\",\r\n    \"top\",\r\n]);\r\nconst positionBottomClasses = defineClasses([\r\n    \"noticePositionClass\",\r\n    \"o-notices--\",\r\n    \"bottom\",\r\n]);\r\n\r\nconst noticeCustomContainerClasses = defineClasses([\r\n    \"noticeCustomContainerClass\",\r\n    \"o-notices__custom-container\",\r\n]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close: handleClose, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <o-notification\r\n        v-bind=\"notification\"\r\n        ref=\"notificationRef\"\r\n        v-model:active=\"isActive\"\r\n        :position=\"position\"\r\n        @close=\"handleClose\">\r\n        <template #inner=\"{ close }\">\r\n            <!-- injected component for programmatic usage -->\r\n            <component\r\n                v-bind=\"$props.props\"\r\n                :is=\"component\"\r\n                v-if=\"component\"\r\n                v-on=\"$props.events\"\r\n                @close=\"close\" />\r\n        </template>\r\n        <slot />\r\n    </o-notification>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport NotificationNotice from \"./NotificationNotice.vue\";\r\nimport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport { getOption } from \"@/utils/config\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        notification: typeof NotificationProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof NotificationNotice>();\r\n\r\ntype NotifcationProgrammaticProps = Readonly<\r\n    | string\r\n    | (NotifcationNoticeProps &\r\n          NotifcationProps &\r\n          OrugaOptions[\"notification\"] &\r\n          Record<string, unknown>)\r\n>;\r\n\r\nconst NotificationProgrammatic = {\r\n    open(params: NotifcationProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      message: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.message)) {\r\n            slot = componentParams.message;\r\n            delete componentParams.message;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n            position: getOption(\"notification.position\", \"top-right\"),\r\n        };\r\n\r\n        const notificationParams = componentParams.notification\r\n            ? componentParams.notification\r\n            : componentParams;\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.notification = merge({}, notificationParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(NotificationNotice, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default NotificationProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Notification from \"./Notification.vue\";\r\nimport NotificationProgrammatic from \"./NotificationProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export notification specific types */\r\nexport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\r\n\r\n/** export notification plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Notification);\r\n        registerComponentProgrammatic(\r\n            app,\r\n            \"notification\",\r\n            NotificationProgrammatic,\r\n        );\r\n    },\r\n} as Plugin;\r\n\r\n/** export notification components */\r\nexport { Notification as ONotification, NotificationProgrammatic };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport type { ClassBind, DynamicComponent } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OPaginationButton\",\r\n    configField: \"pagination\",\r\n});\r\n\r\nconst props = defineProps({\r\n    number: { type: Number, default: undefined },\r\n    isCurrent: { type: Boolean, default: false },\r\n    click: {\r\n        type: Function as PropType<(event: Event) => void>,\r\n        required: true,\r\n    },\r\n    ariaLabel: { type: String, default: undefined },\r\n    disabled: { type: Boolean, default: false },\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: \"button\" as DynamicComponent,\r\n    },\r\n    class: { type: String, default: undefined },\r\n    linkClass: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    linkCurrentClass: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n});\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst linkClasses = computed(() => [\r\n    ...props.linkClass,\r\n    props.class,\r\n    ...(props.isCurrent ? props.linkCurrentClass : []),\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"tag\"\r\n        role=\"button\"\r\n        :tabindex=\"disabled ? null : 0\"\r\n        :disabled=\"disabled\"\r\n        :class=\"linkClasses\"\r\n        v-bind=\"$attrs\"\r\n        :aria-label=\"ariaLabel\"\r\n        :aria-current=\"isCurrent\"\r\n        @click.prevent=\"click\"\r\n        @keydown.enter.prevent=\"click\">\r\n        <slot>{{ number }}</slot>\r\n    </component>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, nextTick, type PropType } from \"vue\";\r\n\r\nimport OPaginationButton from \"./PaginationButton.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useMatchMedia, usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * A responsive and flexible pagination\r\n * @displayName Pagination\r\n * @style _pagination.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OPagination\",\r\n    configField: \"pagination\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Total count of items */\r\n    total: { type: Number, default: undefined },\r\n    /** Items count for each page */\r\n    perPage: {\r\n        type: [Number, String],\r\n        default: () => getOption(\"pagination.perPage\", 20),\r\n    },\r\n    /** Current page number, use v-model:current to make it two-way binding. */\r\n    current: { type: Number, default: 1 },\r\n    /** Number of pagination items to show before current page. */\r\n    rangeBefore: { type: Number, default: 1 },\r\n    /** Number of pagination items to show after current page. */\r\n    rangeAfter: { type: Number, default: 1 },\r\n    /**\r\n     * Pagination size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.size\"),\r\n    },\r\n    /** Simple style */\r\n    simple: {\r\n        type: Boolean,\r\n        default: () => getOption(\"pagination.simple\", false),\r\n    },\r\n    /** Rounded button style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"pagination.rounded\", false),\r\n    },\r\n    /**\r\n     * Buttons order\r\n     * @values centered, right, left\r\n     */\r\n    order: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.order\", \"right\"),\r\n        validator: (value: string) =>\r\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\r\n    },\r\n    /** Pagination button tag name */\r\n    buttonTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () =>\r\n            getOption<DynamicComponent>(\"pagination.buttonTag\", \"button\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconPack\"),\r\n    },\r\n    /** Icon to use for previous button */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon to use for next button */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility label for the next page button. */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaNextLabel\", \"Next page\"),\r\n    },\r\n    /** Accessibility label for the previous page button. */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () =>\r\n            getOption(\"pagination.ariaPreviousLabel\", \"Previous page\"),\r\n    },\r\n    /** Accessibility label for the page button. */\r\n    ariaPageLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaPageLabel\", \"page\"),\r\n    },\r\n    /** Accessibility label for the current page button. */\r\n    ariaCurrentLabel: {\r\n        type: String,\r\n        default: () => getOption(\"pagination.ariaCurrentLabel\", \"Current page\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the prev button */\r\n    prevButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the next button */\r\n    nextButtonClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination list */\r\n    listClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination list items */\r\n    listItemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the link button */\r\n    linkClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the current link */\r\n    linkCurrentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination ellipsis */\r\n    ellipsisClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the info in `simple` mode */\r\n    infoClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination order */\r\n    orderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination in `simple` mode */\r\n    simpleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the pagination when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the disabled link */\r\n    linkDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class for the pagination size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of pagination component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * current prop two-way binding\r\n     * @param value {number} updated current prop\r\n     */\r\n    (e: \"update:current\", value: number): void;\r\n    /**\r\n     * on current change event\r\n     * @param value {number} current value\r\n     */\r\n    (e: \"change\", event: number): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst current = usePropBinding(\"current\", props, emits);\r\n\r\n/** Total page size (count). */\r\nconst pageCount = computed(() =>\r\n    Math.ceil(props.total / Number(props.perPage)),\r\n);\r\n\r\n/** If current page is trying to be greater than page count, set to last. */\r\nwatch(\r\n    () => pageCount.value,\r\n    (value) => {\r\n        if (props.current > value) last();\r\n    },\r\n);\r\n\r\n/** First item of the page (count). */\r\nconst firstItem = computed(() => {\r\n    const perPage = Number(props.perPage);\r\n    const firstItem = props.current * perPage - perPage + 1;\r\n    return firstItem >= 0 ? firstItem : 0;\r\n});\r\n\r\n/** Check if previous button is available. */\r\nconst hasPrev = computed(() => props.current > 1);\r\n\r\n/** Check if first page button should be visible. */\r\nconst hasFirst = computed(() => props.current >= 2 + props.rangeBefore);\r\n\r\n/** Check if first ellipsis should be visible. */\r\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\r\n\r\n/** Check if last page button should be visible. */\r\nconst hasLast = computed(\r\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\r\n);\r\n\r\n/** Check if last ellipsis should be visible. */\r\nconst hasLastEllipsis = computed(\r\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\r\n);\r\n\r\n/** Check if next button is available. */\r\nconst hasNext = computed(() => props.current < pageCount.value);\r\n\r\n/**\r\n * Get near pages, 1 before and 1 after the current.\r\n * Also add the click event to the array.\r\n */\r\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\r\n    if (props.simple) return;\r\n\r\n    let left = Math.max(1, props.current - props.rangeBefore);\r\n    if (left - 1 === 2) {\r\n        left--; // Do not show the ellipsis if there is only one to hide\r\n    }\r\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\r\n    if (pageCount.value - right === 2) {\r\n        right++; // Do not show the ellipsis if there is only one to hide\r\n    }\r\n\r\n    const pages = [];\r\n    for (let i = left; i <= right; i++) {\r\n        pages.push(getPage(i));\r\n    }\r\n    return pages;\r\n});\r\n\r\n/** Get properties for a page */\r\nfunction getPage(\r\n    num: number,\r\n    ariaLabel?: string,\r\n): {\r\n    number: number;\r\n    isCurrent: boolean;\r\n    click: (event: Event) => void;\r\n    ariaLabel: string;\r\n    tag: DynamicComponent;\r\n} {\r\n    return {\r\n        number: num,\r\n        isCurrent: props.current === num,\r\n        click: (event: Event): void => changePage(num, event),\r\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\r\n        tag: props.buttonTag,\r\n    };\r\n}\r\n\r\n/** Get text for aria-label according to page number. */\r\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\r\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\r\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\r\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\r\n        return (\r\n            props.ariaCurrentLabel +\r\n            \", \" +\r\n            props.ariaPageLabel +\r\n            \" \" +\r\n            pageNumber +\r\n            \".\"\r\n        );\r\n    return null;\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction prev(event?: Event): void {\r\n    changePage(props.current - 1, event);\r\n}\r\n\r\n/** Next button click listener. */\r\nfunction next(event?: Event): void {\r\n    changePage(props.current + 1, event);\r\n}\r\n\r\n/** First button click listener. */\r\nfunction first(event?: Event): void {\r\n    changePage(1, event);\r\n}\r\n\r\n/** Last button click listener. */\r\nfunction last(event?: Event): void {\r\n    changePage(pageCount.value, event);\r\n}\r\n\r\nfunction changePage(page: number, event: Event): void {\r\n    if (props.current === page || page < 1 || page > pageCount.value) return;\r\n    emits(\"change\", page);\r\n    current.value = page;\r\n\r\n    // Set focus on element to keep tab order\r\n    if (event && event.target)\r\n        nextTick(() => (event.target as HTMLElement).focus());\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-pag\"],\r\n    [\r\n        \"orderClass\",\r\n        \"o-pag--\",\r\n        computed(() => props.order),\r\n        computed(() => !!props.order),\r\n    ],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-pag--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\"simpleClass\", \"o-pag--simple\", null, computed(() => props.simple)],\r\n    [\"mobileClass\", \"o-pag--mobile\", null, isMobile],\r\n);\r\n\r\nconst prevBtnClasses = defineClasses(\r\n    [\"prevButtonClass\", \"o-pag__previous\"],\r\n    [\r\n        \"linkDisabledClass\",\r\n        \"o-pag__link--disabled\",\r\n        null,\r\n        computed(() => !hasPrev.value),\r\n    ],\r\n);\r\n\r\nconst nextBtnClasses = defineClasses(\r\n    [\"nextButtonClass\", \"o-pag__next\"],\r\n    [\r\n        \"linkDisabledClass\",\r\n        \"o-pag__link--disabled\",\r\n        null,\r\n        computed(() => !hasNext.value),\r\n    ],\r\n);\r\n\r\nconst infoClasses = defineClasses([\"infoClass\", \"o-pag__info\"]);\r\n\r\nconst ellipsisClasses = defineClasses([\"ellipsisClass\", \"o-pag__ellipsis\"]);\r\n\r\nconst listClasses = defineClasses([\"listClass\", \"o-pag__list\"]);\r\n\r\nconst linkClasses = defineClasses(\r\n    [\"linkClass\", \"o-pag__link\"],\r\n    [\r\n        \"roundedClass\",\r\n        \"o-pag__link--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst linkCurrentClasses = defineClasses([\r\n    \"linkCurrentClass\",\r\n    \"o-pag__link--current\",\r\n]);\r\n\r\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pag__item\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ last, first, prev, next });\r\n</script>\r\n\r\n<template>\r\n    <nav :class=\"rootClasses\" data-oruga=\"pagination\">\r\n        <!-- \r\n            @slot Previous button slot\r\n            @binding {number} number - page number \r\n            @binding {boolean} isCurrent - if page is current\r\n            @binding {(event:Event): void} click - onClick handler\r\n            @binding {string} ariaLabel - aria-label attribute\r\n        -->\r\n        <slot name=\"previous\" v-bind=\"getPage(current - 1, ariaPreviousLabel)\">\r\n            <o-pagination-button\r\n                v-bind=\"getPage(current - 1, ariaPreviousLabel)\"\r\n                :class=\"prevBtnClasses\"\r\n                :link-class=\"linkClasses\"\r\n                :link-current-class=\"linkCurrentClasses\">\r\n                <o-icon\r\n                    :icon=\"iconPrev\"\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    aria-hidden=\"true\" />\r\n            </o-pagination-button>\r\n        </slot>\r\n        <!-- \r\n            @slot Next button slot\r\n            @binding {number} number - page number \r\n            @binding {boolean} isCurrent - if page is current\r\n            @binding {(event:Event): void} click - onClick handler\r\n            @binding {string} ariaLabel - aria-label attribute\r\n        -->\r\n        <slot name=\"next\" v-bind=\"getPage(current + 1, ariaNextLabel)\">\r\n            <o-pagination-button\r\n                v-bind=\"getPage(current + 1, ariaNextLabel)\"\r\n                :class=\"nextBtnClasses\"\r\n                :link-class=\"linkClasses\"\r\n                :link-current-class=\"linkCurrentClasses\">\r\n                <o-icon\r\n                    :icon=\"iconNext\"\r\n                    :pack=\"iconPack\"\r\n                    both\r\n                    aria-hidden=\"true\" />\r\n            </o-pagination-button>\r\n        </slot>\r\n\r\n        <small v-if=\"simple\" :class=\"infoClasses\">\r\n            <template v-if=\"perPage == 1\">\r\n                {{ firstItem }} / {{ total }}\r\n            </template>\r\n            <template v-else>\r\n                {{ firstItem }}-{{ Math.min(current * Number(perPage), total) }}\r\n                /\r\n                {{ total }}\r\n            </template>\r\n        </small>\r\n\r\n        <ul v-else :class=\"listClasses\">\r\n            <!--First-->\r\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\r\n                <slot v-bind=\"getPage(1)\">\r\n                    <o-pagination-button\r\n                        v-bind=\"getPage(1)\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\r\n                <span :class=\"ellipsisClasses\">&hellip;</span>\r\n            </li>\r\n\r\n            <!--Pages-->\r\n            <li\r\n                v-for=\"page in pagesInRange\"\r\n                :key=\"page.number\"\r\n                :class=\"listItemClasses\">\r\n                <slot v-bind=\"page\">\r\n                    <o-pagination-button\r\n                        v-bind=\"page\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n\r\n            <!--Last-->\r\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\r\n                <span :class=\"ellipsisClasses\">&hellip;</span>\r\n            </li>\r\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\r\n                <!-- \r\n                    @slot Pagination button slot\r\n                    @binding {number} number - page number \r\n                    @binding {boolean} isCurrent - if page is current\r\n                    @binding {(event:Event): void} click - onClick handler\r\n                    @binding {string} ariaLabel - aria-label attribute\r\n                -->\r\n                <slot v-bind=\"getPage(pageCount)\">\r\n                    <o-pagination-button\r\n                        v-bind=\"getPage(pageCount)\"\r\n                        :link-class=\"linkClasses\"\r\n                        :link-current-class=\"linkCurrentClasses\" />\r\n                </slot>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Pagination from \"./Pagination.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export pagination plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Pagination);\r\n    },\r\n} as Plugin;\r\n\r\n/** export pagination components */\r\nexport { Pagination as OPagination };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select an option from a set\r\n * @displayName Radio\r\n * @style _radio.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"ORadio\",\r\n    configField: \"radio\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"radio.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"radio.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Same as native name */\r\n    name: { type: String, default: undefined },\r\n    /** Accessibility label to establish relationship between the checkbox and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when radio is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element when checked */\r\n    checkedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the radio variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string, number, boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number | boolean): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number | boolean, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\r\n\r\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-radio\"],\r\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-radio--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-radio--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-radio--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-radio__input\"],\r\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"radio\"\r\n        role=\"radio\"\r\n        :aria-checked=\"isChecked\"\r\n        @click.stop=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"radio\"\r\n            data-oruga-input=\"radio\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Override the label, default is label prop \r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Radio from \"./Radio.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export radio plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Radio);\r\n    },\r\n} as Plugin;\r\n\r\n/** export radio components */\r\nexport { Radio as ORadio };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Select from \"./Select.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export select specific types */\r\nexport type { OptionsItem } from \"./types\";\r\n\r\n/** export select plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Select);\r\n    },\r\n} as Plugin;\r\n\r\n/** export select components */\r\nexport { Select as OSelect };\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { toCssDimension } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A placeholder for content to load\r\n * @displayName Skeleton\r\n * @style _skeleton.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSkeleton\",\r\n    configField: \"skeleton\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Show or hide loader\t */\r\n    active: { type: Boolean, default: true },\r\n    /** Show a loading animation */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.animated\", true),\r\n    },\r\n    /** Custom width */\r\n    width: { type: [Number, String], default: undefined },\r\n    /** Custom height */\r\n    height: { type: [Number, String], default: undefined },\r\n    /** Show a circle shape */\r\n    circle: { type: Boolean, default: false },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.rounded\", true),\r\n    },\r\n    /** Number of shapes to display */\r\n    count: { type: Number, default: 1 },\r\n    /**\r\n     * Size of skeleton\r\n     * @values small, medium, large\r\n     */\r\n    size: { type: String, default: undefined },\r\n    /**\r\n     * Skeleton position in relation to the element\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\r\n        default: \"left\",\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton animation */\r\n    animationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item rounded */\r\n    itemRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst itemStyle = computed(() => ({\r\n    height: toCssDimension(props.height),\r\n    width: toCssDimension(props.width),\r\n    borderRadius: props.circle ? \"50%\" : null,\r\n}));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-sklt\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-sklt--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n);\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-sklt__item\"],\r\n    [\r\n        \"itemRoundedClass\",\r\n        \"o-sklt__item--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n    [\r\n        \"animationClass\",\r\n        \"o-sklt__item--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sklt__item--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\r\n        <div\r\n            v-for=\"i in count\"\r\n            :key=\"i\"\r\n            :class=\"itemClasses\"\r\n            :style=\"itemStyle\" />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Skeleton from \"./Skeleton.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export skeleton plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Skeleton);\r\n    },\r\n} as Plugin;\r\n\r\n/** export skeleton components */\r\nexport { Skeleton as OSkeleton };\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    watch,\r\n    onMounted,\r\n    onBeforeUnmount,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useClickOutside,\r\n    useMatchMedia,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * A sidebar to use as left/right overlay or static\r\n * @displayName Sidebar\r\n * @style _sidebar.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSidebar\",\r\n    configField: \"sidebar\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the sidebar\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.variant\"),\r\n    },\r\n    /** Show an overlay like modal */\r\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\r\n    /** Display the Sidebear inline */\r\n    inline: { type: Boolean, default: false },\r\n    /**\r\n     * Sidebar position\r\n     * @values top, right, bottom, left\r\n     */\r\n    position: {\r\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\r\n        default: () => getOption(\"sidebar.position\", \"left\"),\r\n    },\r\n    /** Show sidebar in fullheight */\r\n    fullheight: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullheight\", false),\r\n    },\r\n    /** Show sidebar in fullwidth */\r\n    fullwidth: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullwidth\", false),\r\n    },\r\n    /** Show a small sidebar */\r\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\r\n    /**\r\n     * Custom layout on mobile\r\n     * @values fullwidth, reduced, hidden\r\n     */\r\n    mobile: {\r\n        type: String,\r\n        default: getOption(\"sidebar.mobile\"),\r\n        validator: (value: string) =>\r\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\r\n    },\r\n    /** Expand sidebar on hover when reduced or mobile is reduce */\r\n    expandOnHover: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.expandOnHover\", false),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.animation\"),\r\n    },\r\n    /**\r\n     * Is Sidebar cancleable by pressing escape or clicking outside.\r\n     * @values escape, outside, true, false\r\n     */\r\n    cancelable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled) */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\r\n     * but will set body to position fixed, might break some layouts.\r\n     * @values keep, clip\r\n     */\r\n    scroll: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\r\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\r\n    },\r\n    /** Destroy sidebar on hide */\r\n    destroyOnHide: {\r\n        type: Boolean,\r\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"sidebar.teleport\", false),\r\n    },\r\n    /**\r\n     * Component to be injected, used to open a component sidebar programmatically.\r\n     * Close sidebar within the component by emitting a 'close' event — emits('close')\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component. */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component. */\r\n    events: { type: Object, default: () => ({}) },\r\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"sidebar.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when its active */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar when teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullheight */\r\n    fullheightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullwidth */\r\n    fullwidthClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when its inlined */\r\n    inlineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when reduced */\r\n    reduceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when expanded on hover */\r\n    expandOnHoverClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar clipped */\r\n    crollClipClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar is not clipped */\r\n    noScrollClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is hidden */\r\n    hiddenClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is visible */\r\n    visibleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\nconst sidebarContent = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        destroyOnHide: props.destroyOnHide,\r\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst savedScrollTop = ref(null);\r\nconst isAnimating = ref(!props.active);\r\n\r\nwatch(isActive, (value) => {\r\n    if (props.overlay) handleScroll();\r\n    if (value) addHandler();\r\n    else removeHandler();\r\n});\r\n\r\nconst _teleport = computed(() =>\r\n    typeof props.teleport === \"boolean\"\r\n        ? { to: \"body\", disabled: !props.teleport }\r\n        : { to: props.teleport, disabled: false },\r\n);\r\n\r\nconst transitionName = computed(() => {\r\n    if (props.animation) return props.animation;\r\n\r\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\r\n    const right = props.position === \"right\";\r\n    const open = right ? !isActive.value : isActive.value;\r\n\r\n    return open\r\n        ? vertical\r\n            ? \"slide-down\"\r\n            : \"slide-next\"\r\n        : vertical\r\n          ? \"slide-up\"\r\n          : \"slide-prev\";\r\n});\r\n\r\nconst hideOnMobile = computed(\r\n    () => props.mobile === \"hidden\" && isMobile.value,\r\n);\r\n\r\nonMounted(() => {\r\n    if (props.active) addHandler();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    removeHandler();\r\n    if (isClient) {\r\n        if (props.overlay) {\r\n            // reset scroll\r\n            const scrollto = savedScrollTop.value\r\n                ? savedScrollTop.value\r\n                : document.documentElement.scrollTop;\r\n            if (scrollClass.value) {\r\n                document.body.classList.remove(...scrollClass.value);\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n            document.documentElement.scrollTop = scrollto;\r\n            document.body.style.top = null;\r\n        }\r\n    }\r\n});\r\n\r\nlet removeOutsideListener = null;\r\n\r\n/** add outside click event listener */\r\nfunction addHandler(): void {\r\n    if (isClient && !props.overlay) {\r\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\r\n    }\r\n}\r\n\r\n/** remove outside click event listener */\r\nfunction removeHandler(): void {\r\n    if (removeOutsideListener !== null) removeOutsideListener();\r\n}\r\n\r\n/** Close fixed sidebar if clicked outside. */\r\nfunction clickedOutside(event: Event): void {\r\n    if (props.inline || !isActive.value || isAnimating.value) return;\r\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\r\n        event.preventDefault();\r\n    cancel(\"outside\");\r\n}\r\n\r\nfunction handleScroll(): void {\r\n    if (!isClient) return;\r\n\r\n    if (props.scroll === \"clip\") {\r\n        if (scrollClass.value?.length) {\r\n            if (isActive.value) {\r\n                document.documentElement.classList.add(...scrollClass.value);\r\n            } else {\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    savedScrollTop.value = savedScrollTop.value\r\n        ? savedScrollTop.value\r\n        : document.documentElement.scrollTop;\r\n\r\n    if (scrollClass.value) {\r\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\r\n        else document.body.classList.remove(...scrollClass.value);\r\n    }\r\n\r\n    if (isActive.value) {\r\n        document.body.style.top = `-${savedScrollTop.value}px`;\r\n        return;\r\n    }\r\n\r\n    document.documentElement.scrollTop = savedScrollTop.value;\r\n    document.body.style.top = null;\r\n    savedScrollTop.value = null;\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isAnimating.value = false;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isAnimating.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-side\"],\r\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\r\n    [\"activeClass\", \"o-side--active\", null, isActive],\r\n    [\r\n        \"teleportClass\",\r\n        \"o-side--teleport\",\r\n        null,\r\n        computed(() => !!props.teleport),\r\n    ],\r\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-side__content\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"fullheightClass\",\r\n        \"o-side__content--fullheight\",\r\n        null,\r\n        computed(() => props.fullheight),\r\n    ],\r\n    [\r\n        \"fullwidthClass\",\r\n        \"o-side__content--fullwidth\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.fullwidth ||\r\n                (props.mobile === \"fullwidth\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"reduceClass\",\r\n        \"o-side__content--reduced\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"expandOnHoverClass\",\r\n        \"o-side__content--reduced-expand\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.expandOnHover &&\r\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\r\n        ),\r\n    ],\r\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\r\n    [\r\n        \"hiddenClass\",\r\n        \"o-side__content--hidden\",\r\n        null,\r\n        computed(() => !isActive.value),\r\n    ],\r\n);\r\n\r\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\r\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\r\n\r\nconst scrollClass = computed(() =>\r\n    getActiveClasses(\r\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\r\n    ),\r\n);\r\n\r\n// computed ref must be computed at least once for programmatic usage\r\nscrollClass.value;\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\r\n        <div\r\n            v-show=\"!hideOnMobile\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"rootClasses\"\r\n            data-oruga=\"sidebar\">\r\n            <div\r\n                v-if=\"overlay && isActive\"\r\n                :class=\"overlayClasses\"\r\n                :tabindex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                @click=\"(evt) => clickedOutside(evt)\" />\r\n            <transition\r\n                :name=\"transitionName\"\r\n                @after-enter=\"afterEnter\"\r\n                @before-leave=\"beforeLeave\">\r\n                <div\r\n                    v-show=\"isActive\"\r\n                    ref=\"sidebarContent\"\r\n                    :class=\"contentClasses\">\r\n                    <!--\r\n                        @slot Sidebar default content, default is component prop\r\n                        @binding {(...args):void} close - function to close the component\r\n                    -->\r\n                    <slot :close=\"close\">\r\n                        <!-- injected component for programmatic usage -->\r\n                        <component\r\n                            v-bind=\"$props.props\"\r\n                            :is=\"component\"\r\n                            v-if=\"component\"\r\n                            v-on=\"$props.events\"\r\n                            @close=\"close\" />\r\n                    </slot>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </Teleport>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport type { SidebarProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        sidebar: typeof SidebarProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Sidebar>();\r\n\r\ntype SidebarProgrammaticProps = Readonly<\r\n    SidebarProps & OrugaOptions[\"sidebar\"]\r\n>;\r\n\r\nconst SidebarProgrammatic = {\r\n    open(params: SidebarProgrammaticProps): ProgrammaticExpose {\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, params);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Sidebar, propsData);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default SidebarProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export sidebar specific types */\r\nexport type { SidebarProps } from \"./types\";\r\n\r\n/** export sidebar plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Sidebar);\r\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export sidebar components */\r\nexport { SidebarProgrammatic, Sidebar as OSidebar };\r\n","<script setup lang=\"ts\">\r\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\r\n\r\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    usePropBinding,\r\n    useEventListener,\r\n    useClickOutside,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * Display a brief helper text to your user\r\n * @displayName Tooltip\r\n * @style _tooltip.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTooltip\",\r\n    configField: \"tooltip\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\r\n    active: { type: Boolean, default: false },\r\n    /** Tooltip text, unnecessary when content slot is used */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Color of the tooltip\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.variant\"),\r\n    },\r\n    /**\r\n     * Position of the Tooltip relative to the trigger\r\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.position\", \"auto\"),\r\n        validator: (value: string) =>\r\n            [\r\n                \"auto\",\r\n                \"top\",\r\n                \"bottom\",\r\n                \"left\",\r\n                \"right\",\r\n                \"top-right\",\r\n                \"top-left\",\r\n                \"bottom-left\",\r\n                \"bottom-right\",\r\n            ].indexOf(value) > -1,\r\n    },\r\n    /** Tooltip will be always active */\r\n    always: { type: Boolean, default: false },\r\n    /** Tooltip will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Tooltip default animation */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\r\n    },\r\n    /** Tooltip will be multilined */\r\n    multiline: { type: Boolean, default: false },\r\n    /** Tooltip trigger tag name */\r\n    triggerTag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\r\n    },\r\n    /**\r\n     * Tooltip trigger events\r\n     * @values hover, click, focus, contextmenu\r\n     */\r\n    triggers: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\r\n        validator: (values: string[]) =>\r\n            values.filter(\r\n                (value) =>\r\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\r\n                    -1,\r\n            ).length === values.length,\r\n    },\r\n    /** Tooltip delay before it appears (number in ms) */\r\n    delay: { type: Number, default: undefined },\r\n    /**\r\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\r\n     * @values true, false, content, outside, escape\r\n     */\r\n    closeable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () =>\r\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"dropdown.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the dropdown is teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger */\r\n    triggerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip content when is multiline */\r\n    multilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger when is always visible */\r\n    alwaysClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip arrow */\r\n    arrowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip arrow position */\r\n    arrowPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /** on active change to false event */\r\n    (e: \"close\"): void;\r\n    /** on active change to true event */\r\n    (e: \"open\"): void;\r\n}>();\r\n\r\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\nwatch(isActive, (value) => {\r\n    if (value) emits(\"open\");\r\n    else emits(\"close\");\r\n});\r\n\r\nconst timer = ref();\r\n\r\nconst autoPosition = ref(props.position);\r\n\r\n/** update autoPosition on prop change */\r\nwatch(\r\n    () => props.position,\r\n    (v) => (autoPosition.value = v),\r\n);\r\n\r\n// --- Event Handler ---\r\n\r\nconst contentRef = ref<HTMLElement>();\r\nconst triggerRef = ref<HTMLElement>();\r\n\r\nconst eventCleanups = ref([]);\r\n\r\nwatch(isActive, (value) => {\r\n    // on active set event handler\r\n    if (value && isClient) {\r\n        setTimeout(() => {\r\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\r\n                // set outside handler\r\n                eventCleanups.value.push(\r\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\r\n                );\r\n            }\r\n\r\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\r\n                // set keyup handler\r\n                eventCleanups.value.push(\r\n                    useEventListener(\"keyup\", onKeyPress, document, {\r\n                        immediate: true,\r\n                    }),\r\n                );\r\n            }\r\n        });\r\n    } else if (!value) {\r\n        // on close cleanup event handler\r\n        eventCleanups.value.forEach((fn) => fn());\r\n        eventCleanups.value.length = 0;\r\n    }\r\n});\r\n\r\nconst cancelOptions = computed<string[]>(() =>\r\n    typeof props.closeable === \"boolean\"\r\n        ? props.closeable\r\n            ? [\"escape\", \"outside\", \"content\"]\r\n            : []\r\n        : props.closeable,\r\n);\r\n\r\n/** Close tooltip if clicked outside. */\r\nfunction onClickedOutside(): void {\r\n    if (!isActive.value || props.always) return;\r\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\r\n    isActive.value = false;\r\n}\r\n\r\n/** Keypress event that is bound to the document */\r\nfunction onKeyPress(event: KeyboardEvent): void {\r\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\r\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\r\n        isActive.value = false;\r\n    }\r\n}\r\n\r\nfunction onClick(): void {\r\n    if (props.triggers.indexOf(\"click\") < 0) return;\r\n    // if not active, toggle after clickOutside event\r\n    // this fixes toggling programmatic\r\n    nextTick(() => setTimeout(() => open()));\r\n}\r\n\r\nfunction onContextMenu(event: Event): void {\r\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\r\n    event.preventDefault();\r\n    open();\r\n}\r\n\r\nfunction onFocus(): void {\r\n    if (props.triggers.indexOf(\"focus\") < 0) return;\r\n    open();\r\n}\r\n\r\nfunction onHover(): void {\r\n    if (props.triggers.indexOf(\"hover\") < 0) return;\r\n    open();\r\n}\r\n\r\nfunction open(): void {\r\n    if (props.disabled) return;\r\n    if (props.delay) {\r\n        timer.value = setTimeout(() => {\r\n            isActive.value = true;\r\n            timer.value = null;\r\n        }, props.delay);\r\n    } else {\r\n        isActive.value = true;\r\n    }\r\n}\r\n\r\nfunction onClose(): void {\r\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\r\n    isActive.value = !props.closeable;\r\n    if (timer.value && props.closeable) clearTimeout(timer.value);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tip\"],\r\n    [\r\n        \"teleportClass\",\r\n        \"o-tip--teleport\",\r\n        null,\r\n        computed(() => !!props.teleport),\r\n    ],\r\n);\r\n\r\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\r\n\r\nconst arrowClasses = defineClasses(\r\n    [\"arrowClass\", \"o-tip__arrow\"],\r\n    [\r\n        \"arrowPositionClass\",\r\n        \"o-tip__arrow--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"variantArrowClass\",\r\n        \"o-tip__arrow--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-tip__content\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-tip__content--\",\r\n        autoPosition,\r\n        computed(() => !!autoPosition.value),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-tip__content--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"multilineClass\",\r\n        \"o-tip__content--multiline\",\r\n        null,\r\n        computed(() => props.multiline),\r\n    ],\r\n    [\r\n        \"alwaysClass\",\r\n        \"o-tip__content--always\",\r\n        null,\r\n        computed(() => props.always),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\r\n        <PositionWrapper\r\n            v-slot=\"{ setContent }\"\r\n            v-model:position=\"autoPosition\"\r\n            :teleport=\"teleport\"\r\n            :class=\"rootClasses\"\r\n            :trigger=\"triggerRef\"\r\n            default-position=\"top\"\r\n            :disabled=\"!isActive\">\r\n            <transition :name=\"animation\">\r\n                <div\r\n                    v-show=\"isActive || (always && !disabled)\"\r\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\r\n                    :class=\"contentClasses\">\r\n                    <span :class=\"arrowClasses\"></span>\r\n\r\n                    <!--\r\n                        @slot Tooltip content, default is label prop\r\n                    -->\r\n                    <slot name=\"content\">{{ label }}</slot>\r\n                </div>\r\n            </transition>\r\n        </PositionWrapper>\r\n\r\n        <component\r\n            :is=\"triggerTag\"\r\n            ref=\"triggerRef\"\r\n            :class=\"triggerClasses\"\r\n            aria-haspopup=\"true\"\r\n            @click=\"onClick\"\r\n            @contextmenu=\"onContextMenu\"\r\n            @mouseenter=\"onHover\"\r\n            @focus.capture=\"onFocus\"\r\n            @blur.capture=\"onClose\"\r\n            @mouseleave=\"onClose\">\r\n            <!--\r\n                @slot Tooltip trigger slot\r\n                @binding {boolean} active - tooltip active state\r\n            -->\r\n            <slot :active=\"isActive\" />\r\n        </component>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport OTooltip from \"../tooltip/Tooltip.vue\";\r\n\r\nimport { isClient } from \"@/utils/ssr\";\r\n\r\nimport type { SliderProps } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Thumb\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderThumb\",\r\n    configField: \"slider\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** parent slider component props  */\r\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\r\n    modelValue: { type: Number, required: true },\r\n    sliderSize: { type: Function as PropType<() => number>, required: true },\r\n    thumbWrapperClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    thumbClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /** on value change event */\r\n    (e: \"change\"): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\r\nconst slider = computed<SliderProps>(() => props.sliderProps);\r\n\r\nconst isFocused = ref(false);\r\nconst dragging = ref(false);\r\nconst startX = ref(0);\r\nconst startPosition = ref(0);\r\nconst newPosition = ref(null);\r\nconst oldValue = ref(props.modelValue);\r\n\r\nconst tooltip = computed(() => slider.value.tooltip);\r\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\r\nconst disabled = computed(() => slider.value.disabled);\r\nconst max = computed(() => slider.value.max);\r\nconst min = computed(() => slider.value.min);\r\nconst step = computed(() => slider.value.step);\r\nconst indicator = computed(() => slider.value.indicator);\r\n\r\nconst ariaLabel = computed(() =>\r\n    Array.isArray(slider.value.ariaLabel)\r\n        ? slider.value.ariaLabel[0]\r\n        : slider.value.ariaLabel,\r\n);\r\n\r\nconst precision = computed(() => {\r\n    const precisions = [min.value, max.value, step.value].map((item) => {\r\n        const decimal = (\"\" + item).split(\".\")[1];\r\n        return decimal ? decimal.length : 0;\r\n    });\r\n    return Math.max(...precisions);\r\n});\r\n\r\nconst computedTooltipVariant = computed(() =>\r\n    slider.value.tooltipVariant\r\n        ? slider.value.tooltipVariant\r\n        : slider.value.variant,\r\n);\r\n\r\nconst currentPosition = computed(\r\n    () =>\r\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\r\n);\r\n\r\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\r\n\r\nconst formattedValue = computed(() => {\r\n    if (typeof slider.value.customFormatter !== \"undefined\")\r\n        return slider.value.customFormatter(props.modelValue);\r\n\r\n    if (slider.value.format === \"percent\")\r\n        return new Intl.NumberFormat(slider.value.locale, {\r\n            style: \"percent\",\r\n        }).format((props.modelValue - min.value) / (max.value - min.value));\r\n\r\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\r\n});\r\n\r\nfunction onFocus(): void {\r\n    isFocused.value = true;\r\n}\r\n\r\nfunction onBlur(): void {\r\n    isFocused.value = false;\r\n}\r\n\r\nfunction onButtonDown(event): void {\r\n    if (disabled.value) return;\r\n    event.preventDefault();\r\n    onDragStart(event);\r\n\r\n    if (isClient) {\r\n        document.addEventListener(\"mousemove\", onDragging);\r\n        document.addEventListener(\"touchmove\", onDragging);\r\n        document.addEventListener(\"mouseup\", onDragEnd);\r\n        document.addEventListener(\"touchend\", onDragEnd);\r\n        document.addEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction onLeftKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) -\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onRightKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) +\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onHomeKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value = 0;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onEndKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value = 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onDragStart(event): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\r\n\r\n    startX.value = event.clientX;\r\n    startPosition.value = parseFloat(currentPosition.value);\r\n    newPosition.value = startPosition.value;\r\n}\r\n\r\nfunction onDragging(event): void {\r\n    if (dragging.value) {\r\n        if (event.type === \"touchmove\")\r\n            event.clientX = event.touches[0].clientX;\r\n\r\n        const diff =\r\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\r\n        newPosition.value = startPosition.value + diff;\r\n        setPosition(newPosition.value);\r\n    }\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.modelValue !== oldValue.value) emits(\"change\");\r\n\r\n    setPosition(newPosition.value);\r\n    if (isClient) {\r\n        document.removeEventListener(\"mousemove\", onDragging);\r\n        document.removeEventListener(\"touchmove\", onDragging);\r\n        document.removeEventListener(\"mouseup\", onDragEnd);\r\n        document.removeEventListener(\"touchend\", onDragEnd);\r\n        document.removeEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction setPosition(percent: number): void {\r\n    if (percent === null || isNaN(percent)) return;\r\n    if (percent < 0) percent = 0;\r\n    else if (percent > 100) percent = 100;\r\n\r\n    const stepLength = 100 / ((max.value - min.value) / step.value);\r\n    const steps = Math.round(percent / stepLength);\r\n    let value =\r\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\r\n    value = parseFloat(value.toFixed(precision.value));\r\n    emits(\"update:modelValue\", value);\r\n\r\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\r\n}\r\n\r\ndefineExpose({ setPosition });\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"thumbWrapperClasses\"\r\n        :style=\"wrapperStyle\"\r\n        data-oruga=\"slider-thumb\">\r\n        <o-tooltip\r\n            :label=\"formattedValue\"\r\n            :variant=\"computedTooltipVariant\"\r\n            :disabled=\"disabled || !tooltip\"\r\n            :always=\"tooltipAlways || dragging || isFocused\">\r\n            <div\r\n                v-bind=\"$attrs\"\r\n                :class=\"thumbClasses\"\r\n                :tabindex=\"disabled ? null : 0\"\r\n                role=\"slider\"\r\n                :aria-label=\"ariaLabel\"\r\n                :aria-valuenow=\"modelValue\"\r\n                :aria-valuemin=\"min\"\r\n                :aria-valuemax=\"max\"\r\n                :aria-disabled=\"disabled\"\r\n                aria-orientation=\"horizontal\"\r\n                @mousedown=\"onButtonDown\"\r\n                @touchstart=\"onButtonDown\"\r\n                @focus=\"onFocus\"\r\n                @blur=\"onBlur\"\r\n                @keydown.left.prevent=\"onLeftKeyDown\"\r\n                @keydown.right.prevent=\"onRightKeyDown\"\r\n                @keydown.down.prevent=\"onLeftKeyDown\"\r\n                @keydown.up.prevent=\"onRightKeyDown\"\r\n                @keydown.home.prevent=\"onHomeKeyDown\"\r\n                @keydown.end.prevent=\"onEndKeyDown\">\r\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\r\n            </div>\r\n        </o-tooltip>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Tick\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderTick\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Value of single tick */\r\n    value: { type: Number, required: true },\r\n    /** Tick label */\r\n    label: { type: String, default: undefined },\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent } = useProviderChild<SliderComponent>();\r\n\r\nconst position = computed(() => {\r\n    const pos =\r\n        ((props.value - parent.value.min) /\r\n            (parent.value.max - parent.value.min)) *\r\n        100;\r\n    return pos >= 0 && pos <= 100 ? pos : 0;\r\n});\r\n\r\nconst hidden = computed(\r\n    () => props.value === parent.value.min || props.value === parent.value.max,\r\n);\r\n\r\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"tickClass\", \"o-slide__tick\"],\r\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\r\n);\r\n\r\nconst tickLabelClasses = defineClasses([\r\n    \"tickLabelClass\",\r\n    \"o-slide__tick-label\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\r\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\r\n            <!-- \r\n                @slot Override tick content, default is label prop\r\n             -->\r\n            <slot> {{ label }} </slot>\r\n        </span>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OSliderThumb from \"./SliderThumb.vue\";\r\nimport OSliderTick from \"./SliderTick.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderParent } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A slider to select a value or range from a given range\r\n * @displayName Slider\r\n * @requires ./SliderTick.vue\r\n * @style _slider.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSlider\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Number, Array] as PropType<number | number[]>,\r\n        default: 0,\r\n    },\r\n    /** Minimum value */\r\n    min: { type: Number, default: 0 },\r\n    /** Maximum  value */\r\n    max: { type: Number, default: 100 },\r\n    /** Step interval of ticks */\r\n    step: { type: Number, default: 1 },\r\n    /**\r\n     * Color of the slider\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.variant\"),\r\n    },\r\n    /**\r\n     * Vertical size of slider\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"slider.size\"),\r\n    },\r\n    /** Show tick marks */\r\n    ticks: { type: Boolean, default: false },\r\n    /** Show tooltip when thumb is being dragged */\r\n    tooltip: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.tooltip\", true),\r\n    },\r\n    /**\r\n     * Color of the tooltip\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    tooltipVariant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.tooltipVariant\"),\r\n    },\r\n    /** Tooltip displays always */\r\n    tooltipAlways: { type: Boolean, default: false },\r\n    /** Rounded thumb */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.rounded\", false),\r\n    },\r\n    /** Slider will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Update v-model only when dragging is finished */\r\n    lazy: { type: Boolean, default: false },\r\n    /** Function to format the tooltip label for display */\r\n    customFormatter: { type: Function, default: undefined },\r\n    /** Increases slider size on focus */\r\n    biggerSliderFocus: { type: Boolean, default: false },\r\n    /** Show indicators */\r\n    indicator: { type: Boolean, default: false },\r\n    /**\r\n     * Define v-model format\r\n     * @values row, percent\r\n     */\r\n    format: {\r\n        type: String,\r\n        default: () => getOption(\"slider.format\", \"raw\"),\r\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\r\n    ariaLabel: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"slider.ariaLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the vertical slider size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider track */\r\n    trackClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the filled part of the slider */\r\n    fillClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the slider is rounded */\r\n    thumbRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the thumb gets dragged */\r\n    thumbDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb wrapper */\r\n    thumbWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb */\r\n    thumbClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider tick */\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to display on the wrapper element when the slider is dragged */\r\n    thumbWrapperDraggingClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /**\r\n     * on value change event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"change\", value: number | number[]): void;\r\n    /**\r\n     * on dragging event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     * */\r\n    (e: \"dragging\", value: number | number[]): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\nfunction emitValue(event: any): void {\r\n    const val = isRange.value\r\n        ? [minValue.value, maxValue.value]\r\n        : valueStart.value || 0;\r\n    emits(event, val);\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<SliderComponent>(() => ({\r\n    max: props.max,\r\n    min: props.min,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(undefined, { data: provideData });\r\n\r\nconst sliderRef = ref();\r\nconst thumbStartRef = ref();\r\nconst thumbEndRef = ref();\r\n\r\nconst valueStart = ref<number>(null);\r\nconst valueEnd = ref<number>(null);\r\nconst dragging = ref(false);\r\nconst isRange = ref(false);\r\n\r\nconst isThumbReversed = ref();\r\nconst isTrackClickDisabled = ref();\r\n\r\nsetValues(props.modelValue);\r\n\r\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\r\n\r\n/** When min, max or v-model is changed set the new active step. */\r\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\r\n    setValues(props.modelValue),\r\n);\r\n\r\nconst tickValues = computed(() => {\r\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\r\n    const result = [];\r\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n});\r\n\r\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\r\n\r\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\r\n\r\nconst barSize = computed(() =>\r\n    isRange.value\r\n        ? `${\r\n              (100 * (maxValue.value - minValue.value)) /\r\n              (props.max - props.min)\r\n          }%`\r\n        : `${\r\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\r\n          }%`,\r\n);\r\n\r\nconst barStart = computed(() =>\r\n    isRange.value\r\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\r\n        : \"0%\",\r\n);\r\n\r\nconst barStyle = computed(() => ({\r\n    width: barSize.value,\r\n    left: barStart.value,\r\n}));\r\n\r\nfunction setValues(newValue: number | number[]): void {\r\n    if (props.min > props.max) return;\r\n\r\n    if (Array.isArray(newValue)) {\r\n        isRange.value = true;\r\n        const smallValue =\r\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\r\n                ? props.min\r\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\r\n        const largeValue =\r\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\r\n                ? props.max\r\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\r\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\r\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\r\n    } else {\r\n        isRange.value = false;\r\n        valueStart.value = isNaN(newValue)\r\n            ? props.min\r\n            : Math.min(props.max, Math.max(props.min, newValue));\r\n        valueEnd.value = null;\r\n    }\r\n}\r\n\r\nfunction onInternalValueUpdate(): void {\r\n    if (isRange.value)\r\n        isThumbReversed.value = valueStart.value > valueEnd.value;\r\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\r\n    if (dragging.value) emitValue(\"dragging\");\r\n}\r\n\r\nfunction sliderSize(): number {\r\n    return sliderRef.value.getBoundingClientRect().width;\r\n}\r\n\r\nfunction onSliderClick(event: MouseEvent): void {\r\n    if (props.disabled || isTrackClickDisabled.value) return;\r\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\r\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\r\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\r\n    const diffFirst = Math.abs(targetValue - valueStart.value);\r\n    if (!isRange.value) {\r\n        if (diffFirst < props.step / 2) return;\r\n        thumbStartRef.value.setPosition(percent);\r\n    } else {\r\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\r\n        if (diffFirst <= diffSecond) {\r\n            if (diffFirst < props.step / 2) return;\r\n            thumbStartRef.value.setPosition(percent);\r\n        } else {\r\n            if (diffSecond < props.step / 2) return;\r\n            thumbEndRef.value.setPosition(percent);\r\n        }\r\n    }\r\n    emitValue(\"change\");\r\n}\r\n\r\nfunction onDragStart(): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    isTrackClickDisabled.value = true;\r\n    // avoid triggering onSliderClick after dragend\r\n    setTimeout(() => (isTrackClickDisabled.value = false));\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.lazy) emitValue(\"update:modelValue\");\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-slide\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-slide--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-slide--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n);\r\n\r\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\r\n\r\nconst fillClasses = defineClasses(\r\n    [\"fillClass\", \"o-slide__fill\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-slide__fill--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst thumbClasses = defineClasses(\r\n    [\"thumbClass\", \"o-slide__thumb\"],\r\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\r\n    [\r\n        \"thumbRoundedClass\",\r\n        \"o-slide__thumb--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst thumbWrapperClasses = defineClasses(\r\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\r\n    [\r\n        \"thumbWrapperDraggingClass\",\r\n        \"o-slide__thumb-wrapper--dragging\",\r\n        null,\r\n        dragging,\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\r\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\r\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\r\n            <template v-if=\"ticks\">\r\n                <o-slider-tick\r\n                    v-for=\"(val, key) in tickValues\"\r\n                    :key=\"key\"\r\n                    :value=\"val\"\r\n                    :tick-class=\"tickClass\"\r\n                    :tick-hidden-class=\"tickHiddenClass\"\r\n                    :tick-label-class=\"tickLabelClass\" />\r\n            </template>\r\n\r\n            <!--\r\n                @slot Define additional slider ticks here\r\n             -->\r\n            <slot />\r\n\r\n            <o-slider-thumb\r\n                ref=\"thumbStartRef\"\r\n                v-model=\"valueStart\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n\r\n            <o-slider-thumb\r\n                v-if=\"isRange\"\r\n                ref=\"thumbEndRef\"\r\n                v-model=\"valueEnd\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Slider from \"./Slider.vue\";\r\nimport SliderTick from \"./SliderTick.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export slider specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export slider plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Slider);\r\n        registerComponent(app, SliderTick);\r\n    },\r\n} as Plugin;\r\n\r\n/** export slider components */\r\nexport { Slider as OSlider, SliderTick as OSliderTick };\r\n","<script setup lang=\"ts\">\r\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\r\n\r\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Responsive horizontal process steps\r\n * @displayName Steps\r\n * @requires ./StepItem.vue\r\n * @style _steps.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSteps\",\r\n    configField: \"steps\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"steps.variant\"),\r\n    },\r\n    /**\r\n     * Tab size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"steps.size\"),\r\n    },\r\n    /** Show tab in vertical layout */\r\n    vertical: { type: Boolean, default: false },\r\n    /**\r\n     * Position of the tab\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Icon pack to use for the navigation\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\r\n    },\r\n    /**\r\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\r\n     */\r\n    hasNavigation: { type: Boolean, default: true },\r\n    /** Step navigation is animated */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animated\", true),\r\n    },\r\n    /**\r\n     * Transition animation name\r\n     * @values [next, prev], [right, left, down, up]\r\n     */\r\n    animation: {\r\n        type: Array as PropType<Array<string>>,\r\n        default: () =>\r\n            getOption(\"tabs.animation\", [\r\n                \"slide-next\",\r\n                \"slide-prev\",\r\n                \"slide-down\",\r\n                \"slide-up\",\r\n            ]),\r\n        validator: (value: Array<string>) =>\r\n            value.length === 2 || value.length === 4,\r\n    },\r\n    /** Apply animation on the initial render */\r\n    animateInitially: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animateInitially\", false),\r\n    },\r\n    /**\r\n     * Position of the marker label\r\n     * @values bottom, right, left\r\n     */\r\n    labelPosition: {\r\n        type: String,\r\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\r\n        validator: (value: string) =>\r\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\r\n    },\r\n    /** Rounded step markers */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"steps.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility next button aria label */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaNextLabel\"),\r\n    },\r\n    /** Accessibility previous button aria label  */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Size of the steps */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger */\r\n    verticalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component when is vertical and its position changes */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the steps container */\r\n    stepsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Steps component when animation gets triggered */\r\n    animatedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps markers trigger when are rounded */\r\n    stepMarkerRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component dividers */\r\n    stepDividerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component marker */\r\n    stepMarkerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content */\r\n    stepContentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content when transition is happening */\r\n    stepContentTransitioningClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component navigation element */\r\n    stepNavigationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link */\r\n    stepLinkClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link when clickable */\r\n    stepLinkClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label */\r\n    stepLinkLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label when positioned */\r\n    stepLinkLabelPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of steps component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on tab change event\r\n     * @param value {string | number} new tab value\r\n     * @param value {string | number} old tab value\r\n     */\r\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<StepsComponent>(() => ({\r\n    activeValue: vmodel.value,\r\n    vertical: props.vertical,\r\n    animated: props.animated,\r\n    animation: props.animation,\r\n    animateInitially: props.animateInitially,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nconst items = computed<StepItem[]>(() =>\r\n    sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n    })),\r\n);\r\n\r\nconst vmodel = defineModel<string | number>();\r\n\r\n/** When v-model is changed set the new active tab. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (vmodel.value !== value) performAction(value);\r\n    },\r\n);\r\n\r\nconst activeItem = computed(() =>\r\n    isDefined(vmodel.value)\r\n        ? items.value.find((item) => item.value === vmodel.value) ||\r\n          items.value[0]\r\n        : items.value[0],\r\n);\r\n\r\nconst isTransitioning = computed(() =>\r\n    items.value.some((item) => item.isTransitioning),\r\n);\r\n\r\n/** Check if previous button is available. */\r\nconst hasPrev = computed(() => !!prevItem.value);\r\n\r\n/** Check if next button is available. */\r\nconst hasNext = computed(() => !!nextItem.value);\r\n\r\n/** Retrieves the previous visible item */\r\nconst prevItem = computed(() => {\r\n    if (!activeItem.value) return null;\r\n\r\n    let prevItem = null;\r\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\r\n        if (items.value[idx].visible) {\r\n            prevItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return prevItem;\r\n});\r\n\r\n/** Retrieves the next visible item */\r\nconst nextItem = computed(() => {\r\n    let nextItem = null;\r\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\r\n    for (; idx < items.value.length; idx++) {\r\n        if (items.value[idx].visible) {\r\n            nextItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return nextItem;\r\n});\r\n\r\n/**\r\n * Return if the step should be clickable or not.\r\n */\r\nfunction isItemClickable(item: StepItem): boolean {\r\n    if (item.clickable === undefined)\r\n        return item.index < activeItem.value?.index;\r\n    return item.clickable;\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction prev(): void {\r\n    if (hasPrev.value) itemClick(prevItem.value);\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction next(): void {\r\n    if (hasNext.value) itemClick(nextItem.value);\r\n}\r\n\r\n/** Item click listener, emit input event and change active child. */\r\nfunction itemClick(item: StepItem): void {\r\n    if (vmodel.value !== item.value) performAction(item.value);\r\n}\r\n\r\n/** Activate next child and deactivate prev child */\r\nfunction performAction(newId: number | string): void {\r\n    const oldId = activeItem.value.value;\r\n    const oldItem = activeItem.value;\r\n    const newItem =\r\n        items.value.find((item) => item.value === newId) || items.value[0];\r\n\r\n    if (oldItem && newItem) {\r\n        oldItem.deactivate(newItem.index);\r\n        newItem.activate(oldItem.index);\r\n    }\r\n\r\n    nextTick(() => {\r\n        vmodel.value = newId;\r\n        emits(\"change\", newId, oldId);\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-steps__wrapper\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-steps--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"verticalClass\",\r\n        \"o-steps__wrapper-vertical\",\r\n        null,\r\n        computed(() => props.vertical),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-steps__wrapper-position-\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && props.vertical),\r\n    ],\r\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\r\n);\r\n\r\nconst wrapperClasses = defineClasses(\r\n    [\"stepsClass\", \"o-steps\"],\r\n    [\r\n        \"animatedClass\",\r\n        \"o-steps--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n);\r\n\r\nconst stepDividerClasses = defineClasses([\r\n    \"stepDividerClass\",\r\n    \"o-steps__divider\",\r\n]);\r\n\r\nconst stepMarkerClasses = defineClasses(\r\n    [\"stepMarkerClass\", \"o-steps__marker\"],\r\n    [\r\n        \"stepMarkerRoundedClass\",\r\n        \"o-steps__marker--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst stepContentClasses = defineClasses(\r\n    [\"stepContentClass\", \"o-steps__content\"],\r\n    [\r\n        \"stepContentTransitioningClass\",\r\n        \"o-steps__content-transitioning\",\r\n        null,\r\n        isTransitioning,\r\n    ],\r\n);\r\n\r\nconst stepNavigationClasses = defineClasses([\r\n    \"stepNavigationClass\",\r\n    \"o-steps__navigation\",\r\n]);\r\n\r\nconst stepLinkLabelClasses = defineClasses([\r\n    \"stepLinkLabelClass\",\r\n    \"o-steps__title\",\r\n]);\r\n\r\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"stepLinkClass\", \"o-steps__link\"],\r\n        [\r\n            \"stepLinkLabelPositionClass\",\r\n            \"o-steps__link-label-\",\r\n            props.labelPosition,\r\n            !!props.labelPosition,\r\n        ],\r\n        [\r\n            \"stepLinkClickableClass\",\r\n            \"o-steps__link-clickable\",\r\n            null,\r\n            isItemClickable(childItem),\r\n        ],\r\n    );\r\n\r\n    return classes.value;\r\n}\r\n\r\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\r\n        [\r\n            \"itemHeaderVariantClass\",\r\n            \"o-steps__nav-item--\",\r\n            childItem.variant || props.variant,\r\n            !!childItem.variant || !!props.variant,\r\n        ],\r\n        [\r\n            \"itemHeaderActiveClass\",\r\n            \"o-steps__nav-item-active\",\r\n            null,\r\n            childItem.value === activeItem.value.value,\r\n        ],\r\n        [\r\n            \"itemHeaderPreviousClass\",\r\n            \"o-steps__nav-item-previous\",\r\n            null,\r\n            activeItem.value.index > childItem.index,\r\n        ],\r\n    );\r\n\r\n    const headerClass = { [childItem.headerClass || \"\"]: true };\r\n    return [headerClass, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\r\n        <ol :class=\"wrapperClasses\">\r\n            <li\r\n                v-for=\"(childItem, index) in items\"\r\n                v-show=\"childItem.visible\"\r\n                :key=\"childItem.value\"\r\n                :aria-current=\"\r\n                    childItem.value === activeItem.value ? 'step' : undefined\r\n                \"\r\n                :class=\"itemClasses(childItem)\">\r\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\r\n\r\n                <component\r\n                    :is=\"childItem.tag\"\r\n                    role=\"button\"\r\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\r\n                    :class=\"stepLinkClasses(childItem)\"\r\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\r\n                    @keydown.enter=\"\r\n                        isItemClickable(childItem) && itemClick(childItem)\r\n                    \">\r\n                    <div :class=\"stepMarkerClasses\">\r\n                        <o-icon\r\n                            v-if=\"childItem.icon\"\r\n                            :icon=\"childItem.icon\"\r\n                            :pack=\"childItem.iconPack\"\r\n                            :size=\"size\" />\r\n                        <span v-else-if=\"childItem.step\">\r\n                            {{ childItem.step }}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div :class=\"stepLinkLabelClasses\">\r\n                        {{ childItem.label }}\r\n                    </div>\r\n                </component>\r\n            </li>\r\n        </ol>\r\n\r\n        <section :class=\"stepContentClasses\">\r\n            <!--\r\n                @slot Place step items here\r\n            -->\r\n            <slot />\r\n        </section>\r\n\r\n        <!--\r\n            @slot Override step navigation\r\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\r\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\r\n        -->\r\n        <slot\r\n            name=\"navigation\"\r\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\r\n            :next=\"{ disabled: !hasNext, action: next }\">\r\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconPrev\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasPrev\"\r\n                    :aria-label=\"ariaPreviousLabel\"\r\n                    @click.prevent=\"prev\" />\r\n\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconNext\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasNext\"\r\n                    :aria-label=\"ariaNextLabel\"\r\n                    @click.prevent=\"next\" />\r\n            </nav>\r\n        </slot>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isEqual, uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { StepsComponent, StepItemComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Step Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OStepItem\",\r\n    configField: \"steps\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Item value (it will be used as v-model of wrapper component) */\r\n    value: { type: [String, Number], default: () => uuid() },\r\n    /** Item label */\r\n    label: { type: String, default: undefined },\r\n    /** Step marker content (when there is no icon) */\r\n    step: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Default style for the step.\r\n     * This will override parent type.\r\n     * Could be used to set a completed step to \"success\" for example\r\n     */\r\n    variant: { type: String, default: undefined },\r\n    /**\r\n     * Item can be used directly to navigate.\r\n     * If undefined, previous steps are clickable while the others are not\r\n     */\r\n    clickable: { type: Boolean, default: undefined },\r\n    /** Show/hide item */\r\n    visible: { type: Boolean, default: true },\r\n    /** Icon on the left */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"steps.icon\"),\r\n    },\r\n    /** Icon pack */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Step item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\r\n    },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\r\n    },\r\n    /** Sets a class to the item header */\r\n    headerClass: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the content item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item when active */\r\n    itemHeaderActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item behind the active one */\r\n    itemHeaderPreviousClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item with variant (default value by parent steps component) */\r\n    itemHeaderVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** on tab item activate event */\r\n    (e: \"activate\"): void;\r\n    /** on tab item deactivate event */\r\n    (e: \"deactivate\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\n\r\nconst providedData = computed<StepItemComponent>(() => ({\r\n    ...props,\r\n    $slots: slots,\r\n    isTransitioning: isTransitioning.value,\r\n    activate,\r\n    deactivate,\r\n}));\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<StepsComponent>({\r\n    data: providedData,\r\n});\r\n\r\nconst transitionName = ref();\r\n\r\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\r\n\r\nconst isTransitioning = ref(false);\r\n\r\nconst nextAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\nconst prevAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\n/** Activate element, alter animation name based on the index. */\r\nfunction activate(oldIndex: number): void {\r\n    transitionName.value =\r\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"activate\");\r\n}\r\n\r\n/** Deactivate element, alter animation name based on the index. */\r\nfunction deactivate(newIndex: number): void {\r\n    transitionName.value =\r\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"deactivate\");\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\r\n</script>\r\n\r\n<template>\r\n    <Transition\r\n        :css=\"parent.animated\"\r\n        :name=\"transitionName\"\r\n        :appear=\"parent.animateInitially\"\r\n        @after-enter=\"afterEnter\"\r\n        @before-leave=\"beforeLeave\">\r\n        <div\r\n            v-show=\"isActive && visible\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"elementClasses\"\r\n            :data-id=\"`steps-${item.identifier}`\"\r\n            data-oruga=\"steps-item\"\r\n            :tabindex=\"isActive ? 0 : -1\"\r\n            :role=\"ariaRole\"\r\n            aria-roledescription=\"item\">\r\n            <!-- \r\n                @slot Step item content\r\n            -->\r\n            <slot />\r\n        </div>\r\n    </Transition>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Steps from \"./Steps.vue\";\r\nimport StepItem from \"./StepItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export steps specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export steps plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Steps);\r\n        registerComponent(app, StepItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export steps components */\r\nexport { Steps as OSteps, StepItem as OStepItem };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Switch between two opposing states\r\n * @displayName Switch\r\n * @style _switch.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSwitch\",\r\n    configField: \"switch\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.variant\"),\r\n    },\r\n    /**\r\n     * Color of the switch when is passive\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    passiveVariant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.passiveVariant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"switch.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Name attribute on native checkbox */\r\n    name: { type: String, default: undefined },\r\n    /** Overrides the returned value when it's checked */\r\n    trueValue: { type: [String, Number, Boolean], default: true },\r\n    /** Overrides the returned value when it's not checked */\r\n    falseValue: { type: [String, Number, Boolean], default: false },\r\n    /** Rounded style */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Label position */\r\n    position: { type: String, default: \"right\" },\r\n    /** Accessibility label to establish relationship between the switch and control label' */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when switch is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check */\r\n    switchClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check when checked */\r\n    switchCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the inner switch check */\r\n    switchCheckClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch passive variant */\r\n    passiveVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of switch label position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Root class of the native input checkbox */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number | boolean): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number | boolean, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\r\n    passive: true,\r\n});\r\n\r\nconst isChecked = computed(\r\n    () =>\r\n        vmodel.value === props.trueValue ||\r\n        (Array.isArray(vmodel.value) &&\r\n            vmodel.value.includes(props.nativeValue)),\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-switch\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-switch--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"passiveVariantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.passiveVariant + \"-passive\"),\r\n        computed(() => !!props.passiveVariant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-switch__input\"],\r\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\r\n);\r\n\r\nconst switchClasses = defineClasses(\r\n    [\"switchClass\", \"o-switch__check\"],\r\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst switchCheckClasses = defineClasses(\r\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"switch\"\r\n        role=\"switch\"\r\n        :aria-checked=\"isChecked\"\r\n        @click=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            data-oruga-input=\"switch\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :true-value=\"trueValue\"\r\n            :false-value=\"falseValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span :class=\"switchClasses\">\r\n            <span :class=\"switchCheckClasses\"></span>\r\n        </span>\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Override the label, default is label prop \r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Switch from \"./Switch.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export switch plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Switch);\r\n    },\r\n} as Plugin;\r\n\r\n/** export switch components */\r\nexport { Switch as OSwitch };\r\n","import type { DefineComponent, PropType } from \"vue\";\r\nimport { defineComponent, h } from \"vue\";\r\nimport type { DynamicComponent } from \"@/types\";\r\n\r\n/** This components renders a specific slot and only the slot of another component */\r\nexport default defineComponent({\r\n    name: \"OSlotComponent\",\r\n    props: {\r\n        /** Component to be get the slot from */\r\n        component: { type: Object, required: true },\r\n        /** Slot name */\r\n        name: { type: String, default: \"default\" },\r\n        /** Props passed to the slot */\r\n        props: { type: Object, default: () => {} },\r\n        /** Tag name of the slot wrapper element */\r\n        tag: {\r\n            type: [String, Object, Function] as PropType<DynamicComponent>,\r\n            default: \"div\" as DynamicComponent,\r\n        },\r\n    },\r\n    render() {\r\n        const slot = (this.component as DefineComponent).$slots[this.name]\r\n            ? (this.component as DefineComponent).$slots[this.name](this.props)\r\n            : {};\r\n\r\n        return h(this.tag, {}, slot);\r\n    },\r\n});\r\n","<script setup lang=\"ts\">\r\nimport { computed, watch, ref, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OSelect from \"../select/Select.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OField from \"../field/Field.vue\";\r\n\r\nimport { getValueByPath } from \"@/utils/helpers\";\r\n\r\nimport type { TableColumn } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTableMobileSort\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    currentSortColumn: {\r\n        type: Object as PropType<TableColumn>,\r\n        default: undefined,\r\n    },\r\n    columns: {\r\n        type: Array as PropType<TableColumn[]>,\r\n        default: undefined,\r\n    },\r\n    placeholder: { type: String, default: undefined },\r\n    iconPack: { type: String, default: undefined },\r\n    sortIcon: { type: String, default: \"arrow-up\" },\r\n    sortIconSize: { type: String, default: \"small\" },\r\n    isAsc: { type: Boolean, default: false },\r\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    (e: \"sort\", column: TableColumn, event: Event);\r\n}>();\r\n\r\nconst mobileSort = ref<string>(\r\n    getValueByPath(props.currentSortColumn, \"identifier\"),\r\n);\r\n\r\nconst showPlaceholder = computed(\r\n    () =>\r\n        !props.columns ||\r\n        !props.columns.some(\r\n            (column) =>\r\n                getValueByPath(column, \"identifier\") === mobileSort.value,\r\n        ),\r\n);\r\n\r\nconst sortableColumns = computed(() =>\r\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\r\n);\r\n\r\nconst isCurrentSort = computed(\r\n    () =>\r\n        getValueByPath(props.currentSortColumn, \"identifier\") ===\r\n        mobileSort.value,\r\n);\r\n\r\nwatch(mobileSort, (value) => {\r\n    if (props.currentSortColumn.identifier === value) return;\r\n    sort();\r\n});\r\n\r\nwatch(\r\n    () => props.currentSortColumn,\r\n    (column) => {\r\n        mobileSort.value = getValueByPath(column, \"identifier\");\r\n    },\r\n);\r\n\r\nfunction sort(event?: Event): void {\r\n    const column = sortableColumns.value.filter(\r\n        (c) => getValueByPath(c, \"identifier\") === mobileSort.value,\r\n    )[0];\r\n    emits(\"sort\", column, event);\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"mobileSortClasses\">\r\n        <o-field>\r\n            <o-select v-model=\"mobileSort\" expanded>\r\n                <template v-if=\"placeholder\">\r\n                    <option\r\n                        v-show=\"showPlaceholder\"\r\n                        :value=\"{}\"\r\n                        selected\r\n                        disabled\r\n                        hidden>\r\n                        {{ placeholder }}\r\n                    </option>\r\n                </template>\r\n                <option\r\n                    v-for=\"(column, index) in sortableColumns\"\r\n                    :key=\"index\"\r\n                    :value=\"column.identifier\">\r\n                    {{ column.label }}\r\n                </option>\r\n            </o-select>\r\n            <o-button @click=\"sort($event)\">\r\n                <o-icon\r\n                    v-show=\"isCurrentSort\"\r\n                    :icon=\"sortIcon\"\r\n                    :pack=\"iconPack\"\r\n                    :size=\"sortIconSize\"\r\n                    both\r\n                    :rotation=\"!isAsc ? 180 : 0\" />\r\n            </o-button>\r\n        </o-field>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { toRaw, computed, getCurrentInstance, type PropType } from \"vue\";\r\n\r\nimport { useProviderChild } from \"@/composables\";\r\nimport { toCssDimension } from \"@/utils/helpers\";\r\n\r\nimport type { TableColumnComponent } from \"./types\";\r\n\r\n/**\r\n * @displayName Table Column\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTableColumn\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Define the column label */\r\n    label: { type: String, default: undefined },\r\n    /** Define an object property key if data is an object */\r\n    field: { type: String, default: undefined },\r\n    /** Define a column sub heading  */\r\n    subheading: { type: String, default: undefined },\r\n    /** Add addtional meta information for the column for custom purpose*/\r\n    meta: {\r\n        type: [String, Number, Boolean, Function, Object, Array],\r\n        default: undefined,\r\n    },\r\n    /** Column fixed width */\r\n    width: { type: [Number, String], default: undefined },\r\n    /** Define column value as number */\r\n    numeric: { type: Boolean, default: false },\r\n    /**\r\n     * Position of the column content\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\r\n    },\r\n    /** Enable an additional searchbar below the column header */\r\n    searchable: { type: Boolean, default: false },\r\n    /** Enable column sortability */\r\n    sortable: { type: Boolean, default: false },\r\n    /** Define whether the column is visible or not */\r\n    visible: { type: Boolean, default: true },\r\n    /** Define a custom sort function */\r\n    customSort: {\r\n        type: Function as PropType<\r\n            (a: unknown, b: unknown, isAsc: boolean) => number\r\n        >,\r\n        default: undefined,\r\n    },\r\n    /** Define a custom funtion for the filter search */\r\n    customSearch: {\r\n        type: Function as PropType<(row: unknown, filter: string) => boolean>,\r\n        default: undefined,\r\n    },\r\n    /** Whether the column is sticky or not */\r\n    sticky: { type: Boolean, default: false },\r\n    /** Make header selectable */\r\n    headerSelectable: { type: Boolean, default: false },\r\n    /**\r\n     * Adds native attributes to th\r\n     * @deprecated will be moved to table component in v0.9\r\n     */\r\n    thAttrs: {\r\n        type: Function as PropType<(column: typeof props) => object>,\r\n        default: () => ({}),\r\n    },\r\n    /**\r\n     * Adds native attributes to td\r\n     * @deprecated will be moved to table component in v0.9\r\n     */\r\n    tdAttrs: {\r\n        type: Function as PropType<\r\n            (row: unknown, column: typeof props) => object\r\n        >,\r\n        default: () => ({}),\r\n    },\r\n});\r\n\r\nconst style = computed(() => ({\r\n    width: toCssDimension(props.width),\r\n}));\r\n\r\nconst isHeaderUnselectable = computed(\r\n    () => !props.headerSelectable && props.sortable,\r\n);\r\n\r\nconst vm = getCurrentInstance();\r\n\r\nconst providedData = computed<TableColumnComponent>(() => ({\r\n    ...toRaw(props), // TODO: remove toRaw when tdAttrs/thAttrs are moved to table component\r\n    label: props.label,\r\n    field: props.field,\r\n    subheading: props.subheading,\r\n    meta: props.meta,\r\n    width: props.width,\r\n    numeric: props.numeric,\r\n    position: props.position,\r\n    searchable: props.searchable,\r\n    sortable: props.sortable,\r\n    visible: props.visible,\r\n    customSort: props.customSort,\r\n    customSearch: props.customSearch,\r\n    sticky: props.sticky,\r\n    headerSelectable: props.headerSelectable,\r\n    $el: vm.proxy,\r\n    $slots: vm.slots,\r\n    style: style.value,\r\n    isHeaderUnselectable: isHeaderUnselectable.value,\r\n}));\r\n\r\nconst { item } = useProviderChild({ data: providedData });\r\n</script>\r\n\r\n<template>\r\n    <span :data-id=\"item.identifier\" data-oruga=\"table-column\">\r\n        {{ label }}\r\n\r\n        <!--\r\n            Do not render these slots here.\r\n            These are only for documentation purposes.\r\n            Slots are defined in table component.\r\n        -->\r\n        <template v-if=\"false\">\r\n            <!--\r\n                @slot Default Slot\r\n                @binding {unknown} row - row data \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - row index \r\n                @binding {number} colindex - column index \r\n                @binding {(row): void} toggle-details - toggle details function \r\n            -->\r\n            <slot\r\n                :row=\"null\"\r\n                :column=\"null\"\r\n                :index=\"null\"\r\n                :colindex=\"null\"\r\n                :toggle-details=\"null\" />\r\n            <!--\r\n                @slot Override header label \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n            -->\r\n            <slot name=\"header\" :column=\"null\" :index=\"null\" />\r\n            <!--\r\n                @slot Override subheading label \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n            -->\r\n            <slot name=\"subheading\" :column=\"null\" :index=\"null\" />\r\n\r\n            <!--\r\n                @slot Override searchable input \r\n                @binding {Column} column - column definition \r\n                @binding {number} index - column index \r\n                @binding {Record<string,string>} filters - active filters object\r\n            -->\r\n            <slot\r\n                name=\"searchable\"\r\n                :column=\"null\"\r\n                :index=\"null\"\r\n                :filters=\"null\" />\r\n        </template>\r\n    </span>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\nimport OPagination from \"../pagination/Pagination.vue\";\r\n\r\nimport { usePropBinding } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTablePagination\",\r\n    configField: \"table\",\r\n});\r\n\r\nconst props = defineProps({\r\n    current: { type: Number, default: undefined },\r\n    paginated: { type: Boolean, default: false },\r\n    rootClass: {\r\n        type: [String, Array, Object] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * current prop two-way binding\r\n     * @param value {number} updated current prop\r\n     */\r\n    (e: \"update:current\", value: number): void;\r\n    /**\r\n     * on current change event\r\n     * @param value {number} current value\r\n     */\r\n    (e: \"change\", event: number): void;\r\n}>();\r\n\r\nconst currentPage = usePropBinding(\"current\", props, emits);\r\n\r\n/** Paginator change listener. */\r\nfunction pageChanged(page: number): void {\r\n    const newPage = page > 0 ? page : 1;\r\n    currentPage.value = newPage;\r\n    emits(\"change\", newPage);\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClass\">\r\n        <div>\r\n            <slot />\r\n        </div>\r\n        <div>\r\n            <o-pagination\r\n                v-if=\"paginated\"\r\n                v-bind=\"$attrs\"\r\n                :current=\"currentPage\"\r\n                @change=\"pageChanged\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    ref,\r\n    watch,\r\n    onMounted,\r\n    nextTick,\r\n    useSlots,\r\n    toValue,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OCheckbox from \"../checkbox/Checkbox.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OInput from \"../input/Input.vue\";\r\nimport OLoading from \"../loading/Loading.vue\";\r\nimport OSlotComponent from \"../utils/SlotComponent\";\r\n\r\nimport OTableMobileSort from \"./TableMobileSort.vue\";\r\nimport OTableColumn from \"./TableColumn.vue\";\r\nimport OTablePagination from \"./TablePagination.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport {\r\n    getValueByPath,\r\n    indexOf,\r\n    toCssDimension,\r\n    escapeRegExpChars,\r\n    removeDiacriticsFromString,\r\n    uuid,\r\n} from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useProviderParent,\r\n    usePropBinding,\r\n    useMatchMedia,\r\n    useDebounce,\r\n    getActiveClasses,\r\n} from \"@/composables\";\r\n\r\nimport type { Column, TableColumn, TableColumnComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Tabulated data are sometimes needed, it's even better when it's responsive\r\n * @displayName Table\r\n * @requires ./TableColumn.vue\r\n * @style _table.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTable\",\r\n    configField: \"table\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Table data */\r\n    data: { type: Array as PropType<unknown[]>, default: () => [] },\r\n    /** Table columns */\r\n    columns: { type: Array as PropType<Column[]>, default: () => [] },\r\n    /** Border to all cells */\r\n    bordered: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.bordered\", false),\r\n    },\r\n    /** Whether table is striped */\r\n    striped: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.striped\", false),\r\n    },\r\n    /** Makes the cells narrower */\r\n    narrowed: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.narrowed\", false),\r\n    },\r\n    /** Rows are highlighted when hovering */\r\n    hoverable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.hoverable\", false),\r\n    },\r\n    /** Enable loading state */\r\n    loading: { type: Boolean, default: false },\r\n    /** Allow row details  */\r\n    detailed: { type: Boolean, default: false },\r\n    /** Rows can be checked (multiple) */\r\n    checkable: { type: Boolean, default: false },\r\n    /** Show check/uncheck all checkbox in table header when checkable */\r\n    headerCheckable: { type: Boolean, default: true },\r\n    /**\r\n     * Position of the checkbox when checkable\r\n     * @values left, right\r\n     */\r\n    checkboxPosition: {\r\n        type: String,\r\n        default: () => getOption(\"table.checkboxPosition\", \"left\"),\r\n        validator: (value: string) => [\"left\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Color of the checkbox when checkable\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    checkboxVariant: {\r\n        type: String,\r\n        default: () => getOption(\"table.checkboxVariant\"),\r\n    },\r\n    /** Set which row is selected, use v-model:selected to make it two-way binding */\r\n    selected: { type: Object, default: undefined },\r\n    /** Custom method to verify if a row is selectable, works when is selected. */\r\n    isRowSelectable: { type: Function, default: () => true },\r\n    /** Table can be focused and user can navigate with keyboard arrows (require selected) and rows are highlighted when hovering */\r\n    focusable: { type: Boolean, default: false },\r\n    /** Custom method to verify if row is checked, works when is checkable. Useful for backend pagination */\r\n    customIsChecked: {\r\n        type: Function as PropType<(row: unknown, data: unknown[]) => boolean>,\r\n        default: undefined,\r\n    },\r\n    /** Custom method to verify if a row is checkable, works when is checkable */\r\n    isRowCheckable: {\r\n        type: Function as PropType<(row: unknown) => boolean>,\r\n        default: (row: unknown) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.isRowCheckable\", (row) => true)(row),\r\n    },\r\n    /** Set which rows are checked, use v-model:checkedRows to make it two-way binding */\r\n    checkedRows: { type: Array, default: () => [] },\r\n    /** Rows appears as cards on mobile (collapse rows) */\r\n    mobileCards: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.mobileCards\", true),\r\n    },\r\n    /** Sets the default sort column and order — e.g. ['first_name', 'desc'] */\r\n    defaultSort: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"table.defaultSort\"),\r\n    },\r\n    /**\r\n     * Sets the default sort column direction on the first click\r\n     * @values asc, desc\r\n     */\r\n    defaultSortDirection: {\r\n        type: String,\r\n        default: () => getOption(\"table.defaultSortDirection\", \"asc\"),\r\n    },\r\n    /** Sets the header sorting icon */\r\n    sortIcon: {\r\n        type: String,\r\n        default: () => getOption(\"table.sortIcon\", \"arrow-up\"),\r\n    },\r\n    /**\r\n     * Sets the size of the sorting icon\r\n     * @values small, medium, large\r\n     */\r\n    sortIconSize: {\r\n        type: String,\r\n        default: () => getOption(\"table.sortIconSize\", \"small\"),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"table.iconPack\"),\r\n    },\r\n    /** Columns won't be sorted with Javascript, use with sort event to sort in your backend */\r\n    backendSorting: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.backendSorting\", false),\r\n    },\r\n    /** Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend */\r\n    backendFiltering: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.backendFiltering\", false),\r\n    },\r\n    /** Add a class to row based on the return */\r\n    rowClass: {\r\n        type: Function as PropType<(row: unknown, index: number) => string>,\r\n        default: (row: unknown, index: number) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.rowClass\", (row, index) => \"\")(row, index),\r\n    },\r\n    /** Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop) */\r\n    openedDetailed: { type: Array, default: () => [] },\r\n    /** Controls the visibility of the trigger that toggles the detailed rows. */\r\n    hasDetailedVisible: {\r\n        type: Function as PropType<(row: unknown) => boolean>,\r\n        default: (row: unknown) =>\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            getOption(\"table.hasDetailedVisible\", (row) => true)(row),\r\n    },\r\n    /** Use a unique key of your data Object when use detailed or opened detailed. (id recommended) */\r\n    detailKey: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailKey\"),\r\n    },\r\n    /** Allow chevron icon and column to be visible */\r\n    showDetailIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.showDetailIcon\", true),\r\n    },\r\n    /** Icon name of detail action */\r\n    detailIcon: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailIcon\", \"chevron-right\"),\r\n    },\r\n    /** Custom style on details */\r\n    customDetailRow: { type: Boolean, default: false },\r\n    /* Transition name to use when toggling row details. */\r\n    detailTransition: {\r\n        type: String,\r\n        default: () => getOption(\"table.detailTransition\", \"slide\"),\r\n    },\r\n    /** Text when nothing is selected */\r\n    mobileSortPlaceholder: {\r\n        type: String,\r\n        default: () => getOption(\"table.mobileSortPlaceholder\"),\r\n    },\r\n    /** Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended) */\r\n    customRowKey: {\r\n        type: String,\r\n        default: () => getOption(\"table.customRowKey\"),\r\n    },\r\n    /** Allows rows to be draggable */\r\n    draggable: { type: Boolean, default: false },\r\n    /** Allows columns to be draggable */\r\n    draggableColumn: { type: Boolean, default: false },\r\n    /** Add a horizontal scrollbar when table is too wide */\r\n    scrollable: { type: Boolean, default: undefined },\r\n    /** Show a sticky table header */\r\n    stickyHeader: { type: Boolean, default: false },\r\n    /** Table fixed height */\r\n    height: { type: [Number, String], default: undefined },\r\n    /** Add a native event to filter */\r\n    filtersEvent: { type: String, default: \"\" },\r\n    /** Filtering debounce time (in milliseconds) */\r\n    debounceSearch: { type: Number, default: undefined },\r\n    /** Show header */\r\n    showHeader: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.showHeader\", true),\r\n    },\r\n    /** Make the checkbox column sticky when checkable */\r\n    stickyCheckbox: { type: Boolean, default: false },\r\n    /** Adds pagination to the table */\r\n    paginated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginated\", false),\r\n    },\r\n    /** Rows won't be paginated with Javascript, use with page-change event to paginate in your backend */\r\n    backendPagination: { type: Boolean, default: false },\r\n    /** Total number of table data if backend-pagination is enabled */\r\n    total: { type: Number, default: 0 },\r\n    /** Current page of table data (if paginated), use v-model:currentPage to make it two-way binding */\r\n    currentPage: { type: Number, default: 1 },\r\n    /** How many rows per page (if paginated) */\r\n    perPage: {\r\n        type: [Number, String],\r\n        default: () => getOption(\"table.perPage\", 20),\r\n    },\r\n    /**\r\n     * Pagination position (if paginated)\r\n     * @values bottom, top, both\r\n     */\r\n    paginationPosition: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationPosition\", \"bottom\"),\r\n        validator: (value: string) =>\r\n            [\"bottom\", \"top\", \"both\"].indexOf(value) >= 0,\r\n    },\r\n    /** Rounded pagination if paginated */\r\n    paginationRounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginationRounded\", false),\r\n    },\r\n    /** Size of pagination if paginated */\r\n    paginationSize: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationSize\", \"small\"),\r\n    },\r\n    /** Enable simple style pagination if paginated */\r\n    paginationSimple: {\r\n        type: Boolean,\r\n        default: () => getOption(\"table.paginationSimple\", false),\r\n    },\r\n    /**\r\n     * Pagination buttons order if paginated\r\n     * @values centered, right, left\r\n     */\r\n    paginationOrder: {\r\n        type: String,\r\n        default: () => getOption(\"table.paginationOrder\"),\r\n        validator: (value: string) =>\r\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"table.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility label for the pagination next page button. */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaNextLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination previous page button. */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaPreviousLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination page button. */\r\n    ariaPageLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaPageLabel\"),\r\n    },\r\n    /** Accessibility label for the pagination current page button. */\r\n    ariaCurrentLabel: {\r\n        type: String,\r\n        default: () => getOption(\"table.ariaCurrentLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table */\r\n    tableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table footer */\r\n    footerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when it is empty */\r\n    emptyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row detail */\r\n    detailedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when is bordered */\r\n    borderedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when rows are striped */\r\n    stripedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when rows are narrowed */\r\n    narrowedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table when is hoverable */\r\n    hoverableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper when header is sticky */\r\n    stickyHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table wrapper when its content is scrollable */\r\n    scrollableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row when selected */\r\n    trSelectedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table row when checkable and checked */\r\n    trCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element */\r\n    thClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when component is positioned */\r\n    thPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when component is sticky\" */\r\n    thStickyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element when is checkable */\r\n    thCheckboxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element currently sorted */\r\n    thCurrentSortClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sortable Table `th` element */\r\n    thSortableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element that is unsortable */\r\n    thUnselectableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table sort icon in the header */\r\n    thSortIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` element of the detail column of triggers */\r\n    thDetailedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `th` subheading element */\r\n    thSubheadingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element */\r\n    tdClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when component is positioned */\r\n    tdPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when component is sticky */\r\n    tdStickyClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element when is checkable */\r\n    tdCheckboxClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table `td` element that contains the chevron to trigger details */\r\n    tdDetailedChevronClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sortable form wrapper on mobile */\r\n    mobileSortClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table pagination wrapper */\r\n    paginationWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Table component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * currentPage prop two-way binding\r\n     * @param value {number} updated currentPage prop\r\n     */\r\n    (e: \"update:currentPage\", value: number): void;\r\n    /**\r\n     * on pagination page change event\r\n     * @param page {number} updated page\r\n     */\r\n    (e: \"page-change\", page: number): void;\r\n    /**\r\n     * select prop two-way binding\r\n     * @param value {typeof data} updated select prop\r\n     */\r\n    (e: \"update:selected\", value: unknown): void;\r\n    /**\r\n     * on row select event\r\n     * @param newRow {typeof data} new select value\r\n     * @param oldRow {typeof data} old select value\r\n     */\r\n    (e: \"select\", newrow: unknown, oldrow: unknown): void;\r\n    /**\r\n     * on row checked event\r\n     * @param value {Array<typeof data>} all checked rows\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"check\", value: Array<unknown>, row?: unknown): void;\r\n    /**\r\n     * on all rows checked event\r\n     * @param value {Array<typeof data>} all checked rows\r\n     */\r\n    (e: \"check-all\", value: Array<unknown>): void;\r\n    /**\r\n     * checkedRows prop two-way binding\r\n     * @param value {Array<typeof data>} updated checkedRows prop\r\n     */\r\n    (e: \"update:checkedRows\", value: Array<unknown>): void;\r\n    /**\r\n     * on column sort change event\r\n     * @param column {Column} column data\r\n     * @param direction {string}  'asc' or 'desc'\r\n     *\r\n     * @param event {Event} native  event\r\n     */\r\n    (e: \"sort\", column: Column, direction: \"asc\" | \"desc\", event: Event): void;\r\n    /**\r\n     * on filter change event\r\n     * @param filters {Record<string, string>} filter object\r\n     */\r\n    (e: \"filters-change\", value: Record<string, string>): void;\r\n    /**\r\n     * on natvie filter event based on props filtersEvent\r\n     * @param filtersEvent {string} props filtersEvent value\r\n     * @param filters {Record<string, string>} filter object\r\n     * @param event {Event} native  event\r\n     */\r\n    (\r\n        e: \"filters-event\",\r\n        filtersEvent: string,\r\n        filters: Record<string, string>,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * openedDetailed prop two-way binding\r\n     * @param value {Array<typeof data>} updated openedDetailed prop\r\n     */\r\n    (e: \"update:openedDetailed\", value: Array<unknown>): void;\r\n    /**\r\n     * on details open event\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"details-open\", row: unknown): void;\r\n    /**\r\n     * on details close event\r\n     * @param row {typeof data} row data\r\n     */\r\n    (e: \"details-close\", row: unknown): void;\r\n    /**\r\n     * on row click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native click event\r\n     */\r\n    (e: \"click\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row double click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native click event\r\n     */\r\n    (e: \"dblclick\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row right click event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native contextmenu event\r\n     */\r\n    (e: \"contextmenu\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row mouseenter event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native mouseenter event\r\n     */\r\n    (e: \"mouseenter\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on row mouseleave event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of clicked row\r\n     * @param event {Event} native mouseleave event\r\n     */\r\n    (e: \"mouseleave\", row: unknown, index: number, event: Event): void;\r\n    /**\r\n     * on cell click event\r\n     * @param row {typeof data} row data\r\n     * @param column {Column} column data\r\n     * @param index {number} row index\r\n     * @param colindex {number} column index\r\n     * @param event {Event} native click event\r\n     */\r\n    (\r\n        e: \"cell-click\",\r\n        row: unknown,\r\n        column: Column,\r\n        index: number,\r\n        colindex: number,\r\n        event: Event,\r\n    ): void;\r\n    /**\r\n     * on row dragstart event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragstart event\r\n     */\r\n    (e: \"dragstart\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row dragend event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragend event\r\n     */\r\n    (e: \"dragend\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row drop event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native drop event\r\n     */\r\n    (e: \"drop\", row: unknown, index: number, event: DragEvent): void;\r\n\r\n    /**\r\n     * on row dragleave event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragleave event\r\n     */\r\n    (e: \"dragleave\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on row dragover event\r\n     * @param row {typeof data} row data\r\n     * @param index {number} index of draged row\r\n     * @param event {DragEvent} native dragover event\r\n     */\r\n    (e: \"dragover\", row: unknown, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndragstart event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragstart event\r\n     */\r\n    (\r\n        e: \"columndragstart\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n    /**\r\n     * on column columndragend event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragend event\r\n     */\r\n    (e: \"columndragend\", column: Column, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndrop event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndrop event\r\n     */\r\n    (e: \"columndrop\", column: Column, index: number, event: DragEvent): void;\r\n    /**\r\n     * on column columndragleave event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragleave event\r\n     */\r\n    (\r\n        e: \"columndragleave\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n    /**\r\n     * on column columndragover event\r\n     * @param column {Column} column data\r\n     * @param index {number} index of draged column\r\n     * @param event {DragEvent} native columndragover event\r\n     */\r\n    (\r\n        e: \"columndragover\",\r\n        column: Column,\r\n        index: number,\r\n        event: DragEvent,\r\n    ): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\r\n\r\nconst rootRef = ref<HTMLElement>();\r\nconst slotRef = ref<HTMLElement>();\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst provider = useProviderParent<TableColumnComponent>(slotRef);\r\n\r\nconst tableColumns = computed<TableColumn[]>(() =>\r\n    provider.sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n        thAttrsData: {},\r\n        tdAttrsData: [],\r\n    })),\r\n);\r\n\r\nconst tableData = computed(() => {\r\n    if (!props.data?.length) return [...props.data];\r\n    // if no customRowKey is given and data are objects, create unique row id for each row\r\n    return props.data.map((row) =>\r\n        !props.customRowKey && typeof row === \"object\"\r\n            ? Object.assign({ __rowKey: uuid() }, row)\r\n            : row,\r\n    );\r\n});\r\n\r\nconst tableRows = ref(tableData.value);\r\nconst dataTotal = ref(\r\n    props.backendPagination ? props.total : tableData.value.length,\r\n);\r\n\r\nconst tableCurrentPage = usePropBinding<number>(\"currentPage\", props, emits, {\r\n    passive: true,\r\n});\r\n\r\n/**\r\n * When table rows data change:\r\n *   1. Update internal value.\r\n *   2. Filter data if it's not backend-filtered.\r\n *   3. Sort again if it's not backend-sorted.\r\n *   4. Set new total if it's not backend-paginated.\r\n */\r\nwatch(\r\n    () => tableData.value,\r\n    (value) => {\r\n        // if not backend filtered, filter rows\r\n        if (!props.backendFiltering)\r\n            tableRows.value = value.filter((row) => isRowFiltered(row));\r\n        else tableRows.value = [...value];\r\n        // if not backend sorted, sort rows\r\n        if (!props.backendSorting) sort(currentSortColumn.value, true);\r\n        // if not backend paginated, set pagination total\r\n        if (!props.backendPagination) dataTotal.value = tableRows.value.length;\r\n    },\r\n    { deep: true },\r\n);\r\n\r\n/**\r\n * When Pagination total change, update internal total\r\n * only if it's backend-paginated.\r\n */\r\nwatch(\r\n    () => props.total,\r\n    (newTotal) => {\r\n        if (!props.backendPagination) return;\r\n        dataTotal.value = newTotal;\r\n    },\r\n);\r\n\r\nconst tableWrapperStyle = computed(() => ({\r\n    height: toCssDimension(props.height),\r\n}));\r\n\r\n/** Splitted data based on the pagination. */\r\nconst visibleRows = computed(() => {\r\n    if (!props.paginated) return tableRows.value;\r\n\r\n    const currentPage = tableCurrentPage.value;\r\n    const perPage = Number(props.perPage);\r\n\r\n    if (tableRows.value.length <= perPage) {\r\n        return tableRows.value;\r\n    } else {\r\n        const start = (currentPage - 1) * perPage;\r\n        const end = start + perPage;\r\n        return tableRows.value.slice(start, end);\r\n    }\r\n});\r\n\r\nconst visibleColumns = computed(() => {\r\n    if (!tableColumns.value) return [];\r\n    return tableColumns.value.filter(\r\n        (column) => column.visible || column.visible === undefined,\r\n    );\r\n});\r\n\r\n/** process thAttrs & tdAttrs when row or columns got changed */\r\nwatch([visibleRows, visibleColumns], () => {\r\n    if (visibleColumns.value.length && visibleRows.value.length) {\r\n        for (let i = 0; i < visibleColumns.value.length; i++) {\r\n            const col = visibleColumns.value[i];\r\n            col.thAttrsData =\r\n                typeof col.thAttrs === \"function\" ? col.thAttrs(col) : {};\r\n            col.tdAttrsData = visibleRows.value.map((data) =>\r\n                typeof col.tdAttrs === \"function\" ? col.tdAttrs(data, col) : {},\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\n/** Return total column count based if it's checkable or expanded */\r\nconst columnCount = computed(() => {\r\n    let count = visibleColumns.value.length;\r\n    count += props.checkable ? 1 : 0;\r\n    count += props.detailed && props.showDetailIcon ? 1 : 0;\r\n    return count;\r\n});\r\n\r\n/** Check if has any searchable column. */\r\nconst hasSearchablenewColumns = computed(() =>\r\n    tableColumns.value.some((column) => column.searchable),\r\n);\r\n\r\n/** return if scrollable table */\r\nconst isScrollable = computed(() => {\r\n    if (props.scrollable) return true;\r\n    if (!tableColumns.value) return false;\r\n    return tableColumns.value.some((column) => column.sticky);\r\n});\r\n\r\nconst slots = useSlots();\r\n\r\nconst hasCustomSubheadings = computed(() => {\r\n    if (slots.subheading) return true;\r\n    return tableColumns.value.some((column) => !!column.subheading);\r\n});\r\n\r\n/** Check if footer slot has custom content. */\r\nfunction hasCustomFooterSlot(): boolean {\r\n    if (slots.footer) {\r\n        // [Vue warn]: Slot \"footer\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\r\n        const footer = slots.footer();\r\n        if (footer.length > 1) return true;\r\n\r\n        const tag = footer[0][\"tag\"];\r\n        if (tag !== \"th\" && tag !== \"td\") return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/** Table arrow keys listener, change selection. */\r\nfunction onArrowPressed(pos: number, event: KeyboardEvent): void {\r\n    if (!visibleRows.value.length) return;\r\n\r\n    let index = visibleRows.value.indexOf(props.selected) + pos;\r\n\r\n    // Prevent from going up from first and down from last\r\n    index =\r\n        index < 0\r\n            ? 0\r\n            : index > visibleRows.value.length - 1\r\n              ? visibleRows.value.length - 1\r\n              : index;\r\n\r\n    const row = visibleRows.value[index];\r\n\r\n    if (!props.isRowSelectable(row)) {\r\n        let newIndex = null;\r\n        if (pos > 0) {\r\n            for (\r\n                let i = index;\r\n                i < visibleRows.value.length && newIndex === null;\r\n                i++\r\n            ) {\r\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\r\n            }\r\n        } else {\r\n            for (let i = index; i >= 0 && newIndex === null; i--) {\r\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\r\n            }\r\n        }\r\n        if (newIndex >= 0) {\r\n            selectRow(visibleRows.value[newIndex], index, event);\r\n        }\r\n    } else {\r\n        selectRow(row, index, event);\r\n    }\r\n}\r\n\r\n/**\r\n * Row click listener.\r\n * Emit all necessary events.\r\n */\r\nfunction selectRow(row: unknown, index: number, event: Event): void {\r\n    emits(\"click\", row, index, event);\r\n\r\n    if (props.selected === row) return;\r\n    if (!props.isRowSelectable(row)) return;\r\n\r\n    // emit new and old row\r\n    emits(\"select\", row, props.selected);\r\n\r\n    // emit new row to update user variable\r\n    emits(\"update:selected\", row);\r\n}\r\n\r\nfunction isRowSelected(row: unknown, selectedRow: unknown): boolean {\r\n    return selectedRow ? getRowKey(row) === getRowKey(selectedRow) : false;\r\n}\r\n\r\nfunction getRowKey(row: unknown): unknown {\r\n    if (props.customRowKey) return row[props.customRowKey];\r\n    if (typeof row === \"object\") return row[\"__rowKey\"];\r\n    return row;\r\n}\r\n\r\n// --- Filter Feature ---\r\n\r\nconst filters = ref<Record<string, string>>({});\r\n\r\nwatch(\r\n    filters.value,\r\n    (value) => {\r\n        if (props.debounceSearch)\r\n            useDebounce(() => handleFiltersChange(value), props.debounceSearch);\r\n        else handleFiltersChange(value);\r\n    },\r\n    { deep: true },\r\n);\r\n\r\nfunction onFiltersEvent(event: Event): void {\r\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\r\n}\r\n\r\nfunction handleFiltersChange(value: Record<string, string>): void {\r\n    if (props.backendFiltering) {\r\n        emits(\"filters-change\", value);\r\n    } else {\r\n        tableRows.value = props.data.filter((row) => isRowFiltered(row));\r\n        if (!props.backendPagination) {\r\n            dataTotal.value = tableRows.value.length;\r\n        }\r\n        if (!props.backendSorting) {\r\n            if (Object.keys(currentSortColumn.value).length > 0) {\r\n                doSortSingleColumn(currentSortColumn.value);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isRowFiltered(row: unknown): boolean {\r\n    for (const key in filters.value) {\r\n        if (!filters.value[key]) continue;\r\n        const input = filters.value[key];\r\n        const column = tableColumns.value.filter((c) => c.field === key)[0];\r\n        if (typeof column?.customSearch === \"function\") {\r\n            if (!column.customSearch(row, input)) return false;\r\n        } else {\r\n            const value = getValueByPath(row, key);\r\n            if (value == null) return false;\r\n            if (Number.isInteger(value)) {\r\n                if (value !== Number(input)) return false;\r\n            } else {\r\n                const re = new RegExp(escapeRegExpChars(input), \"i\");\r\n                if (Array.isArray(value)) {\r\n                    const valid = value.some(\r\n                        (val) =>\r\n                            re.test(removeDiacriticsFromString(val)) ||\r\n                            re.test(val),\r\n                    );\r\n                    if (!valid) return false;\r\n                } else {\r\n                    if (\r\n                        !re.test(removeDiacriticsFromString(value)) &&\r\n                        !re.test(value)\r\n                    ) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// --- Sort Feature ---\r\n\r\nconst currentSortColumn = ref<TableColumn>();\r\nconst isAsc = ref(true);\r\n\r\nonMounted(() => nextTick(() => checkSort()));\r\n\r\n/** Check if has any sortable column. */\r\nconst hasSortablenewColumns = computed(() =>\r\n    tableColumns.value.some((column) => column.sortable),\r\n);\r\n\r\n/** Check if the column is the current sort column. */\r\nfunction isColumnSorted(column: TableColumn): boolean {\r\n    return currentSortColumn.value?.identifier === column.identifier;\r\n}\r\n\r\n/** Call initSort only first time (For example async data). */\r\nfunction checkSort(): void {\r\n    if (tableColumns.value.length && !currentSortColumn.value) {\r\n        // is first time sort\r\n        initSort();\r\n    } else if (tableColumns.value.length) {\r\n        if (\r\n            currentSortColumn.value &&\r\n            Object.keys(currentSortColumn.value).length > 0\r\n        ) {\r\n            for (let i = 0; i < tableColumns.value.length; i++) {\r\n                if (\r\n                    currentSortColumn.value.field ===\r\n                    tableColumns.value[i].field\r\n                ) {\r\n                    currentSortColumn.value = tableColumns.value[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** Initial sorted column based on the default-sort prop. */\r\nfunction initSort(): void {\r\n    if (!props.defaultSort) return;\r\n    let sortField = \"\";\r\n    let sortDirection = props.defaultSortDirection;\r\n    if (Array.isArray(props.defaultSort)) {\r\n        sortField = props.defaultSort[0];\r\n        if (props.defaultSort[1]) {\r\n            sortDirection = props.defaultSort[1];\r\n        }\r\n    } else {\r\n        sortField = props.defaultSort;\r\n    }\r\n    const sortColumn = tableColumns.value.filter(\r\n        (column) => column.field === sortField,\r\n    )[0];\r\n    if (sortColumn) {\r\n        isAsc.value = sortDirection.toLowerCase() !== \"desc\";\r\n        sort(sortColumn, true);\r\n    }\r\n}\r\n\r\n/**\r\n * Sort the column.\r\n * Toggle current direction on column if it's sortable\r\n * and not just updating the prop.\r\n */\r\nfunction sort(\r\n    column: TableColumn,\r\n    updateDirection = false,\r\n    event?: Event,\r\n): void {\r\n    if (!column || !column.sortable) return;\r\n\r\n    if (!updateDirection)\r\n        isAsc.value = isColumnSorted(column)\r\n            ? !isAsc.value\r\n            : props.defaultSortDirection.toLowerCase() !== \"desc\";\r\n\r\n    // if not first time sort\r\n    if (currentSortColumn.value)\r\n        emits(\"sort\", column, isAsc.value ? \"asc\" : \"desc\", event);\r\n\r\n    if (!props.backendSorting) doSortSingleColumn(column);\r\n\r\n    currentSortColumn.value = column;\r\n}\r\n\r\nfunction doSortSingleColumn(column: Column): void {\r\n    tableRows.value = sortBy(\r\n        tableRows.value,\r\n        column.field,\r\n        column.customSort,\r\n        isAsc.value,\r\n    );\r\n}\r\n\r\n/**\r\n * Sort an array by key without mutating original data.\r\n * Call the user sort function if it was passed.\r\n */\r\nfunction sortBy(\r\n    array: unknown[],\r\n    key: string,\r\n    fn: (a: unknown, b: unknown, asc: boolean) => number,\r\n    isAsc: boolean,\r\n): unknown[] {\r\n    let sorted = [];\r\n    // Sorting without mutating original data\r\n    if (fn && typeof fn === \"function\") {\r\n        sorted = [...array].sort((a, b) => fn(a, b, isAsc));\r\n    } else {\r\n        sorted = [...array].sort((a, b) => {\r\n            // Get nested values from objects\r\n            let newA = getValueByPath(a, key);\r\n            let newB = getValueByPath(b, key);\r\n\r\n            // sort boolean type\r\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\r\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\r\n            }\r\n\r\n            if (!newA && newA !== 0) return 1;\r\n            if (!newB && newB !== 0) return -1;\r\n            if (newA === newB) return 0;\r\n\r\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\r\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\r\n\r\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\r\n        });\r\n    }\r\n\r\n    return sorted;\r\n}\r\n\r\n// --- Checkable Feature ---\r\n\r\nconst newCheckedRows = ref([...props.checkedRows]);\r\nconst lastCheckedRowIndex = ref(null);\r\n\r\n/**\r\n * When checkedRows prop change, update internal value without\r\n * mutating original data.\r\n */\r\nwatch(\r\n    () => props.checkedRows,\r\n    (rows) => {\r\n        newCheckedRows.value = [...rows];\r\n    },\r\n    { deep: true },\r\n);\r\n\r\n/** Check if all rows in the page are checked. */\r\nconst isAllChecked = computed(() => {\r\n    const validVisibleData = visibleRows.value.filter((row) =>\r\n        props.isRowCheckable(row),\r\n    );\r\n    if (validVisibleData.length === 0) return false;\r\n    const isAllChecked = validVisibleData.some(\r\n        (currentVisibleRow) =>\r\n            indexOf(\r\n                newCheckedRows.value,\r\n                currentVisibleRow,\r\n                props.customIsChecked,\r\n            ) < 0,\r\n    );\r\n    return !isAllChecked;\r\n});\r\n\r\n/** Check if all rows in the page are checkable. */\r\nconst isAllUncheckable = computed(() => {\r\n    const validVisibleData = visibleRows.value.filter((row) =>\r\n        props.isRowCheckable(row),\r\n    );\r\n    return validVisibleData.length === 0;\r\n});\r\n\r\n/** Check if the row is checked (is added to the array). */\r\nfunction isRowChecked(row: unknown): boolean {\r\n    return indexOf(newCheckedRows.value, row, props.customIsChecked) >= 0;\r\n}\r\n\r\n/** Remove a checked row from the array. */\r\nfunction removeCheckedRow(row: unknown): void {\r\n    const index = indexOf(newCheckedRows.value, row, props.customIsChecked);\r\n    if (index >= 0) newCheckedRows.value.splice(index, 1);\r\n}\r\n\r\n/**\r\n * Header checkbox click listener.\r\n * Add or remove all rows in current page.\r\n */\r\nfunction checkAll(): void {\r\n    const allChecked = isAllChecked.value;\r\n    visibleRows.value.forEach((currentRow) => {\r\n        if (props.isRowCheckable(currentRow)) removeCheckedRow(currentRow);\r\n\r\n        if (!allChecked) {\r\n            if (props.isRowCheckable(currentRow))\r\n                newCheckedRows.value.push(currentRow);\r\n        }\r\n    });\r\n\r\n    emits(\"check\", newCheckedRows.value);\r\n    emits(\"check-all\", newCheckedRows.value);\r\n\r\n    // Emit checked rows to update user variable\r\n    emits(\"update:checkedRows\", newCheckedRows.value);\r\n}\r\n\r\n/** Row checkbox click listener. */\r\nfunction checkRow(row: unknown, index: number): void {\r\n    if (!props.isRowCheckable(row)) return;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const lastIndex = lastCheckedRowIndex.value;\r\n    lastCheckedRowIndex.value = index;\r\n\r\n    // if (event.shiftKey && lastIndex !== null && index !== lastIndex) {\r\n    //         shiftCheckRow(row, index, lastIndex);\r\n\r\n    if (!isRowChecked(row)) newCheckedRows.value.push(row);\r\n    else removeCheckedRow(row);\r\n\r\n    emits(\"check\", newCheckedRows.value, row);\r\n\r\n    // Emit checked rows to update user variable\r\n    emits(\"update:checkedRows\", newCheckedRows.value);\r\n}\r\n\r\n/** Check row when shift is pressed. */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nfunction shiftCheckRow(\r\n    row: unknown,\r\n    index: number,\r\n    lastCheckedRowIndex: number,\r\n): void {\r\n    // Get the subset of the list between the two indicies\r\n    const subset = visibleRows.value.slice(\r\n        Math.min(index, lastCheckedRowIndex),\r\n        Math.max(index, lastCheckedRowIndex) + 1,\r\n    );\r\n\r\n    // Determine the operation based on the state of the clicked checkbox\r\n    const shouldCheck = !isRowChecked(row);\r\n\r\n    subset.forEach((item) => {\r\n        removeCheckedRow(item);\r\n        if (shouldCheck && props.isRowCheckable(item))\r\n            newCheckedRows.value.push(item);\r\n    });\r\n}\r\n\r\n// --- Detail Row Feature ---\r\n\r\nconst visibleDetailRows = ref(props.openedDetailed);\r\n\r\n/**\r\n * return if detailed row tabled\r\n * will be with chevron column & icon or not\r\n */\r\nconst showDetailRowIcon = computed(\r\n    () => props.detailed && props.showDetailIcon,\r\n);\r\n\r\n/**\r\n * When the user wants to control the detailed rows via props.\r\n * Or wants to open the details of certain row with the router for example.\r\n */\r\nwatch(\r\n    () => props.openedDetailed,\r\n    (expandedRows) => {\r\n        visibleDetailRows.value = expandedRows;\r\n    },\r\n);\r\n\r\n/** Toggle to show/hide details slot */\r\nfunction toggleDetails(row: unknown): void {\r\n    const found = isVisibleDetailRow(row);\r\n\r\n    if (found) {\r\n        closeDetailRow(row);\r\n        emits(\"details-close\", row);\r\n    } else {\r\n        openDetailRow(row);\r\n        emits(\"details-open\", row);\r\n    }\r\n\r\n    // Syncs the detailed rows with the parent component\r\n    emits(\"update:openedDetailed\", visibleDetailRows.value);\r\n}\r\n\r\nfunction openDetailRow(row: unknown): void {\r\n    const index = handleDetailKey(row);\r\n    visibleDetailRows.value.push(index);\r\n}\r\n\r\nfunction closeDetailRow(row: unknown): void {\r\n    const index = handleDetailKey(row);\r\n    const i = visibleDetailRows.value.indexOf(index);\r\n    if (i >= 0) visibleDetailRows.value.splice(i, 1);\r\n}\r\n\r\nfunction isVisibleDetailRow(row: unknown): boolean {\r\n    const index = handleDetailKey(row);\r\n    return visibleDetailRows.value.indexOf(index) >= 0;\r\n}\r\n\r\nfunction isActiveDetailRow(row: unknown): boolean {\r\n    return props.detailed && !props.customDetailRow && isVisibleDetailRow(row);\r\n}\r\n\r\nfunction isActiveCustomDetailRow(row: unknown): boolean {\r\n    return props.detailed && props.customDetailRow && isVisibleDetailRow(row);\r\n}\r\n\r\n/**\r\n * When the detailKey is defined we use the object[detailKey] as index.\r\n * If not, use the object reference by default.\r\n */\r\nfunction handleDetailKey(row: unknown): string {\r\n    const key = props.detailKey;\r\n    return !key?.length || !row ? row : row[key];\r\n}\r\n\r\n// --- Drag&Drop Feature ---\r\n\r\nconst isDraggingRow = ref(false);\r\nconst isDraggingColumn = ref(false);\r\n\r\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\r\n\r\nconst canDragColumn = computed(\r\n    () => props.draggableColumn && !isDraggingRow.value,\r\n);\r\n\r\n/** Emits drag start event*/\r\nfunction handleDragStart(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragstart\", row, index, event);\r\n}\r\n\r\n/** Emits drag leave event */\r\nfunction handleDragEnd(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragend\", row, index, event);\r\n}\r\n\r\n/** Emits drop event */\r\nfunction handleDrop(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"drop\", row, index, event);\r\n}\r\n\r\n/** Emits drag over event */\r\nfunction handleDragOver(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragover\", row, index, event);\r\n}\r\n\r\n/** Emits drag leave event */\r\nfunction handleDragLeave(row: unknown, index: number, event: DragEvent): void {\r\n    if (!props.draggable) return;\r\n    emits(\"dragleave\", row, index, event);\r\n}\r\n\r\n/** Emits drag start event (column) */\r\nfunction handleColumnDragStart(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    isDraggingColumn.value = true;\r\n    emits(\"columndragstart\", column, index, event);\r\n}\r\n\r\n/** Emits drag leave event (column) */\r\nfunction handleColumnDragEnd(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    isDraggingColumn.value = false;\r\n    emits(\"columndragend\", column, index, event);\r\n}\r\n\r\n/** Emits drop event (column) */\r\nfunction handleColumnDrop(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndrop\", column, index, event);\r\n}\r\n\r\n/** Emits drag over event (column) */\r\nfunction handleColumnDragOver(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndragover\", column, index, event);\r\n}\r\n\r\n/** Emits drag leave event (column) */\r\nfunction handleColumnDragLeave(\r\n    column: Column,\r\n    index: number,\r\n    event: DragEvent,\r\n): void {\r\n    if (!canDragColumn.value) return;\r\n    emits(\"columndragleave\", column, index, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-table__root\"],\r\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\r\n);\r\n\r\nconst tableClasses = defineClasses(\r\n    [\"tableClass\", \"o-table\"],\r\n    [\r\n        \"borderedClass\",\r\n        \"o-table--bordered\",\r\n        null,\r\n        computed(() => props.bordered),\r\n    ],\r\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\r\n    [\r\n        \"narrowedClass\",\r\n        \"o-table--narrowed\",\r\n        null,\r\n        computed(() => props.narrowed),\r\n    ],\r\n    [\r\n        \"hoverableClass\",\r\n        \"o-table--hoverable\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                (props.hoverable || props.focusable) &&\r\n                !!visibleRows.value.length,\r\n        ),\r\n    ],\r\n    [\r\n        \"emptyClass\",\r\n        \"o-table--table__empty\",\r\n        null,\r\n        computed(() => !visibleRows.value.length),\r\n    ],\r\n);\r\n\r\nconst tableWrapperClasses = defineClasses(\r\n    [\"wrapperClass\", \"o-table__wrapper\"],\r\n    [\r\n        \"stickyHeaderClass\",\r\n        \"o-table__wrapper--sticky-header\",\r\n        null,\r\n        computed(() => props.stickyHeader),\r\n    ],\r\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\r\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\r\n);\r\n\r\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\r\n\r\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\r\n\r\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\r\n\r\nconst thCheckboxClasses = defineClasses([\r\n    \"thCheckboxClass\",\r\n    \"o-table__th-checkbox\",\r\n]);\r\n\r\nconst thDetailedClasses = defineClasses([\r\n    \"thDetailedClass\",\r\n    \"o-table__th--detailed\",\r\n]);\r\n\r\nconst thSubheadingClasses = defineClasses([\"thSubheadingClass\", \"o-table__th\"]);\r\n\r\nconst tdCheckboxClasses = defineClasses(\r\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\r\n    [\r\n        \"thStickyClass\",\r\n        \"o-table__th--sticky\",\r\n        null,\r\n        computed(() => props.stickyCheckbox),\r\n    ],\r\n);\r\n\r\nconst detailedClasses = defineClasses([\"detailedClass\", \"o-table__detail\"]);\r\n\r\nconst tdDetailedChevronClasses = defineClasses([\r\n    \"tdDetailedChevronClass\",\r\n    \"o-table__td-chevron\",\r\n]);\r\n\r\nconst mobileSortClasses = defineClasses([\r\n    \"mobileSortClass\",\r\n    \"o-table__mobile-sort\",\r\n]);\r\n\r\nconst paginationWrapperClasses = defineClasses([\r\n    \"paginationWrapperClass\",\r\n    \"o-table__pagination\",\r\n]);\r\n\r\nconst paginationWrapperRootClasses = computed(() =>\r\n    getActiveClasses(paginationWrapperClasses.value),\r\n);\r\n\r\nconst thSortIconClasses = defineClasses([\r\n    \"thSortIconClass\",\r\n    \"o-table__th__sort-icon\",\r\n]);\r\n\r\nfunction thClasses(column: TableColumn): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"thCurrentSortClass\",\r\n            \"o-table__th-current-sort\",\r\n            null,\r\n            isColumnSorted(column),\r\n        ],\r\n        [\"thSortableClass\", \"o-table__th--sortable\", null, column.sortable],\r\n        [\r\n            \"thUnselectableClass\",\r\n            \"o-table__th--unselectable\",\r\n            null,\r\n            column.isHeaderUnselectable,\r\n        ],\r\n        [\r\n            \"thPositionClass\",\r\n            \"o-table__th--\",\r\n            column.position,\r\n            !!column.position,\r\n        ],\r\n        [\"thStickyClass\", \"o-table__th--sticky\", null, column.sticky],\r\n    );\r\n\r\n    return [...thBaseClasses.value, ...classes.value];\r\n}\r\n\r\nfunction rowClasses(row: unknown, index: number): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"trSelectedClass\",\r\n            \"o-table__tr--selected\",\r\n            null,\r\n            isRowSelected(row, props.selected),\r\n        ],\r\n        [\"trCheckedClass\", \"o-table__tr--checked\", null, isRowChecked(row)],\r\n    );\r\n\r\n    const rowClass = props.rowClass(row, index);\r\n\r\n    return [...classes.value, { [rowClass]: true }];\r\n}\r\n\r\nfunction tdClasses(row: unknown, column: TableColumnComponent): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\r\n            \"tdPositionClass\",\r\n            \"o-table__td--\",\r\n            column.position,\r\n            !!column.position,\r\n        ],\r\n\r\n        [\"tdStickyClass\", \"o-table__td--sticky\", null, column.sticky],\r\n    );\r\n\r\n    return [...tdBaseClasses.value, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"table\">\r\n        <div ref=\"slotRef\" style=\"display: none\">\r\n            <!--\r\n                @slot Place o-table-column here\r\n            -->\r\n            <slot>\r\n                <template v-if=\"columns?.length\">\r\n                    <o-table-column\r\n                        v-for=\"(column, idx) in columns\"\r\n                        :key=\"idx\"\r\n                        v-slot=\"{ row }\"\r\n                        v-bind=\"column\">\r\n                        {{ column.field ? row[column.field] : row }}\r\n                    </o-table-column>\r\n                </template>\r\n            </slot>\r\n        </div>\r\n\r\n        <o-table-mobile-sort\r\n            v-if=\"isMobileActive && hasSortablenewColumns\"\r\n            :current-sort-column=\"currentSortColumn\"\r\n            :columns=\"tableColumns\"\r\n            :placeholder=\"mobileSortPlaceholder\"\r\n            :icon-pack=\"iconPack\"\r\n            :sort-icon=\"sortIcon\"\r\n            :sort-icon-size=\"sortIconSize\"\r\n            :is-asc=\"isAsc\"\r\n            :mobile-sort-classes=\"mobileSortClasses\"\r\n            @sort=\"(column, event) => sort(column, null, event)\" />\r\n\r\n        <template\r\n            v-if=\"\r\n                paginated &&\r\n                (paginationPosition === 'top' || paginationPosition === 'both')\r\n            \">\r\n            <!--\r\n                @slot Override pagination label\r\n                @binding {number} current - current page\r\n                @binding {number} per-page - rows per page\r\n                @binding {number} total - total rows count\r\n                @binding {(page: number): void } change - on page change event\r\n            -->\r\n            <slot\r\n                name=\"pagination\"\r\n                :current=\"tableCurrentPage\"\r\n                :per-page=\"perPage\"\r\n                :total=\"dataTotal\"\r\n                :change=\"(page) => (tableCurrentPage = page)\">\r\n                <o-table-pagination\r\n                    v-bind=\"$attrs\"\r\n                    v-model:current=\"tableCurrentPage\"\r\n                    :paginated=\"paginated\"\r\n                    :per-page=\"perPage\"\r\n                    :total=\"dataTotal\"\r\n                    :rounded=\"paginationRounded\"\r\n                    :size=\"paginationSize\"\r\n                    :order=\"paginationOrder\"\r\n                    :simple=\"paginationSimple\"\r\n                    :icon-pack=\"iconPack\"\r\n                    :aria-next-label=\"ariaNextLabel\"\r\n                    :aria-previous-label=\"ariaPreviousLabel\"\r\n                    :aria-page-label=\"ariaPageLabel\"\r\n                    :aria-current-label=\"ariaCurrentLabel\"\r\n                    :root-class=\"paginationWrapperRootClasses\"\r\n                    @change=\"(page) => $emit('page-change', page)\">\r\n                    <!--\r\n                        @slot Additional slot if table is paginated\r\n                    -->\r\n                    <slot name=\"top-left\" />\r\n                </o-table-pagination>\r\n            </slot>\r\n        </template>\r\n\r\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\r\n            <table\r\n                :class=\"tableClasses\"\r\n                :tabindex=\"!focusable ? null : 0\"\r\n                @keydown.self.prevent.up=\"onArrowPressed(-1, $event)\"\r\n                @keydown.self.prevent.down=\"onArrowPressed(1, $event)\">\r\n                <caption v-if=\"$slots.caption\">\r\n                    <!--\r\n                        @slot Define a table caption here\r\n                    -->\r\n                    <slot name=\"caption\" />\r\n                </caption>\r\n                <thead v-if=\"tableColumns.length && showHeader\">\r\n                    <!--\r\n                        @slot Define preheader content here\r\n                    -->\r\n                    <slot name=\"preheader\" />\r\n                    <tr>\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th\r\n                            v-if=\"checkable && checkboxPosition === 'left'\"\r\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\r\n                            <!--\r\n                                @slot Override check all checkbox\r\n                                @binding {boolean} is-all-checked - if all rows are checked\r\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\r\n                                @binding {(): void} check-all - check all function\r\n                            -->\r\n                            <slot\r\n                                name=\"check-all\"\r\n                                :is-all-checked=\"isAllChecked\"\r\n                                :is-all-uncheckable=\"isAllUncheckable\"\r\n                                :check-all=\"checkAll\">\r\n                                <o-checkbox\r\n                                    v-if=\"headerCheckable\"\r\n                                    :model-value=\"isAllChecked\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"isAllUncheckable\"\r\n                                    @update:model-value=\"checkAll\" />\r\n                            </slot>\r\n                        </th>\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"column.identifier + ':' + index + 'header'\"\r\n                            v-bind=\"column.thAttrsData\"\r\n                            :class=\"thClasses(column)\"\r\n                            :style=\"isMobileActive ? {} : column.style\"\r\n                            :draggable=\"canDragColumn\"\r\n                            @click.stop=\"sort(column, null, $event)\"\r\n                            @dragstart=\"\r\n                                handleColumnDragStart(column, index, $event)\r\n                            \"\r\n                            @dragend=\"\r\n                                handleColumnDragEnd(column, index, $event)\r\n                            \"\r\n                            @drop=\"handleColumnDrop(column, index, $event)\"\r\n                            @dragover=\"\r\n                                handleColumnDragOver(column, index, $event)\r\n                            \"\r\n                            @dragleave=\"\r\n                                handleColumnDragLeave(column, index, $event)\r\n                            \">\r\n                            <template v-if=\"column.$slots?.header\">\r\n                                <o-slot-component\r\n                                    :component=\"column.$el\"\r\n                                    name=\"header\"\r\n                                    tag=\"span\"\r\n                                    :props=\"{ column, index }\" />\r\n                            </template>\r\n                            <template v-else>\r\n                                <span>\r\n                                    {{ column.label }}\r\n                                    <span\r\n                                        v-show=\"\r\n                                            column.sortable &&\r\n                                            isColumnSorted(column)\r\n                                        \"\r\n                                        :class=\"thSortIconClasses\">\r\n                                        <o-icon\r\n                                            :icon=\"sortIcon\"\r\n                                            :pack=\"iconPack\"\r\n                                            both\r\n                                            :size=\"sortIconSize\"\r\n                                            :rotation=\"!isAsc ? 180 : 0\" />\r\n                                    </span>\r\n                                </span>\r\n                            </template>\r\n                        </th>\r\n                        <th\r\n                            v-if=\"checkable && checkboxPosition === 'right'\"\r\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\r\n                            <template v-if=\"headerCheckable\">\r\n                                <!--\r\n                                    @slot Override check all checkbox\r\n                                    @binding {boolean} is-all-checked - if all rows are checked\r\n                                    @binding {boolean} is-all-uncheckable - if check all is uncheckable\r\n                                    @binding {(): void} check-all - check all function\r\n                                -->\r\n                                <slot\r\n                                    name=\"check-all\"\r\n                                    :is-all-checked=\"isAllChecked\"\r\n                                    :is-all-uncheckable=\"isAllUncheckable\"\r\n                                    :check-all=\"checkAll\">\r\n                                    <o-checkbox\r\n                                        :model-value=\"isAllChecked\"\r\n                                        autocomplete=\"off\"\r\n                                        :variant=\"checkboxVariant\"\r\n                                        :disabled=\"isAllUncheckable\"\r\n                                        @update:model-value=\"checkAll\" />\r\n                                </slot>\r\n                            </template>\r\n                        </th>\r\n                    </tr>\r\n                    <tr v-if=\"hasSearchablenewColumns\">\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"\r\n                                column.identifier + ':' + index + 'searchable'\r\n                            \"\r\n                            v-bind=\"column.thAttrsData\"\r\n                            :class=\"thClasses(column)\"\r\n                            :style=\"isMobileActive ? {} : column.style\">\r\n                            <template v-if=\"column.searchable\">\r\n                                <template v-if=\"column.$slots?.searchable\">\r\n                                    <o-slot-component\r\n                                        :component=\"column.$el\"\r\n                                        name=\"searchable\"\r\n                                        tag=\"span\"\r\n                                        :props=\"{ column, index, filters }\" />\r\n                                </template>\r\n                                <o-input\r\n                                    v-else\r\n                                    v-model=\"filters[column.field]\"\r\n                                    :type=\"column.numeric ? 'number' : 'text'\"\r\n                                    @[filtersEvent]=\"onFiltersEvent\" />\r\n                            </template>\r\n                        </th>\r\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\r\n                    </tr>\r\n                    <tr v-if=\"hasCustomSubheadings\">\r\n                        <th\r\n                            v-if=\"showDetailRowIcon\"\r\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\r\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\r\n                        <th\r\n                            v-for=\"(column, index) in visibleColumns\"\r\n                            :key=\"\r\n                                column.identifier + ':' + index + 'subheading'\r\n                            \"\r\n                            :style=\"isMobileActive ? {} : column.style\"\r\n                            :class=\"[...thBaseClasses, ...thSubheadingClasses]\">\r\n                            <template v-if=\"column.$slots?.subheading\">\r\n                                <o-slot-component\r\n                                    :component=\"column.$el\"\r\n                                    name=\"subheading\"\r\n                                    tag=\"span\"\r\n                                    :props=\"{ column, index }\" />\r\n                            </template>\r\n                            <template v-else>\r\n                                {{ column.subheading }}\r\n                            </template>\r\n                        </th>\r\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <template\r\n                        v-for=\"(row, index) in visibleRows\"\r\n                        :key=\"getRowKey(row) + 'row'\">\r\n                        <tr\r\n                            :class=\"rowClasses(row, index)\"\r\n                            :draggable=\"canDragRow\"\r\n                            @click=\"selectRow(row, index, $event)\"\r\n                            @dblclick=\"$emit('dblclick', row, index, $event)\"\r\n                            @mouseenter=\"\r\n                                $emit('mouseenter', row, index, $event)\r\n                            \"\r\n                            @mouseleave=\"\r\n                                $emit('mouseleave', row, index, $event)\r\n                            \"\r\n                            @contextmenu=\"\r\n                                $emit('contextmenu', row, index, $event)\r\n                            \"\r\n                            @dragstart=\"handleDragStart(row, index, $event)\"\r\n                            @dragend=\"handleDragEnd(row, index, $event)\"\r\n                            @drop=\"handleDrop(row, index, $event)\"\r\n                            @dragover=\"handleDragOver(row, index, $event)\"\r\n                            @dragleave=\"handleDragLeave(row, index, $event)\">\r\n                            <!-- detailed toggle column -->\r\n                            <td\r\n                                v-if=\"showDetailRowIcon\"\r\n                                :class=\"[\r\n                                    ...tdBaseClasses,\r\n                                    ...tdDetailedChevronClasses,\r\n                                ]\">\r\n                                <o-icon\r\n                                    v-if=\"hasDetailedVisible(row)\"\r\n                                    :icon=\"detailIcon\"\r\n                                    :pack=\"iconPack\"\r\n                                    :rotation=\"isVisibleDetailRow(row) ? 90 : 0\"\r\n                                    role=\"button\"\r\n                                    clickable\r\n                                    both\r\n                                    @click.stop=\"toggleDetails(row)\" />\r\n                            </td>\r\n\r\n                            <!-- checkable column left -->\r\n                            <td\r\n                                v-if=\"checkable && checkboxPosition === 'left'\"\r\n                                :class=\"[\r\n                                    ...thBaseClasses,\r\n                                    ...tdCheckboxClasses,\r\n                                ]\">\r\n                                <o-checkbox\r\n                                    :model-value=\"isRowChecked(row)\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"!isRowCheckable(row)\"\r\n                                    @update:model-value=\"\r\n                                        checkRow(row, index)\r\n                                    \" />\r\n                            </td>\r\n\r\n                            <!-- row data columns -->\r\n                            <o-slot-component\r\n                                v-for=\"(column, colindex) in visibleColumns\"\r\n                                :key=\"\r\n                                    column.identifier + index + ':' + colindex\r\n                                \"\r\n                                v-bind=\"column.tdAttrsData[index]\"\r\n                                :component=\"column.$el\"\r\n                                name=\"default\"\r\n                                tag=\"td\"\r\n                                :class=\"tdClasses(row, column)\"\r\n                                :style=\"isMobileActive ? {} : column.style\"\r\n                                :data-label=\"column.label\"\r\n                                :props=\"{\r\n                                    row,\r\n                                    column,\r\n                                    index,\r\n                                    colindex,\r\n                                    toggleDetails,\r\n                                }\"\r\n                                @click=\"\r\n                                    $emit(\r\n                                        'cell-click',\r\n                                        row,\r\n                                        column,\r\n                                        index,\r\n                                        colindex,\r\n                                        $event,\r\n                                    )\r\n                                \" />\r\n\r\n                            <!-- checkable column right -->\r\n                            <td\r\n                                v-if=\"checkable && checkboxPosition === 'right'\"\r\n                                :class=\"[\r\n                                    ...thBaseClasses,\r\n                                    ...tdCheckboxClasses,\r\n                                ]\">\r\n                                <o-checkbox\r\n                                    :model-value=\"isRowChecked(row)\"\r\n                                    autocomplete=\"off\"\r\n                                    :variant=\"checkboxVariant\"\r\n                                    :disabled=\"!isRowCheckable(row)\"\r\n                                    @update:model-value=\"\r\n                                        checkRow(row, index)\r\n                                    \" />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <transition :name=\"detailTransition\">\r\n                            <tr\r\n                                v-if=\"isActiveDetailRow(row)\"\r\n                                :key=\"getRowKey(row) + 'detail'\"\r\n                                :class=\"detailedClasses\">\r\n                                <td :colspan=\"columnCount\">\r\n                                    <!--\r\n                                        @slot Place row detail content here\r\n                                        @binding {unknown} row - row conent\r\n                                        @binding {number} index - row index\r\n                                    -->\r\n                                    <slot\r\n                                        name=\"detail\"\r\n                                        :row=\"row\"\r\n                                        :index=\"index\" />\r\n                                </td>\r\n                            </tr>\r\n                        </transition>\r\n                        <!--\r\n                            @slot Place row detail content here\r\n                            @binding {unknown} row - row conent\r\n                            @binding {number} index - row index\r\n                        -->\r\n                        <slot\r\n                            v-if=\"isActiveCustomDetailRow(row)\"\r\n                            name=\"detail\"\r\n                            :row=\"row\"\r\n                            :index=\"index\" />\r\n                    </template>\r\n\r\n                    <tr v-if=\"!visibleRows.length\">\r\n                        <td :colspan=\"columnCount\">\r\n                            <!--\r\n                                @slot Define content if table is empty\r\n                            -->\r\n                            <slot name=\"empty\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n                <tfoot v-if=\"$slots.footer\">\r\n                    <tr :class=\"footerClasses\">\r\n                        <!--\r\n                            @slot Define a custom footer\r\n                            @binding {number} column-count - counts of visible columns\r\n                            @binding {number} row-count - counts of visible rows\r\n                        -->\r\n                        <slot\r\n                            v-if=\"hasCustomFooterSlot()\"\r\n                            name=\"footer\"\r\n                            :column-count=\"columnCount\"\r\n                            :row-count=\"visibleRows?.length\" />\r\n                        <th v-else :colspan=\"columnCount\">\r\n                            <!--\r\n                                @slot Define a custom footer\r\n                                @binding {number} column-count - counts of visible columns\r\n                                @binding {number} row-count - counts of visible rows\r\n                            -->\r\n                            <slot\r\n                                name=\"footer\"\r\n                                :column-count=\"columnCount\"\r\n                                :row-count=\"visibleRows?.length\" />\r\n                        </th>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <!--\r\n                @slot Override loading component\r\n                @binding {boolean} loading - is loading enabled\r\n            -->\r\n            <slot name=\"loading\" :loading=\"loading\">\r\n                <o-loading :full-page=\"false\" :active=\"loading\" />\r\n            </slot>\r\n        </div>\r\n\r\n        <template\r\n            v-if=\"\r\n                (checkable && $slots['bottom-left']) ||\r\n                (paginated &&\r\n                    (paginationPosition === 'bottom' ||\r\n                        paginationPosition === 'both'))\r\n            \">\r\n            <!--\r\n                @slot Override pagination label\r\n                @binding {number} current - current page\r\n                @binding {number} per-page - rows per page\r\n                @binding {number} total - total rows count\r\n                @binding {(page: number): void } change - on page change event\r\n            -->\r\n            <slot\r\n                name=\"pagination\"\r\n                :current=\"tableCurrentPage\"\r\n                :per-page=\"perPage\"\r\n                :total=\"dataTotal\"\r\n                :change=\"(page) => (tableCurrentPage = page)\">\r\n                <o-table-pagination\r\n                    v-bind=\"$attrs\"\r\n                    v-model:current=\"tableCurrentPage\"\r\n                    :paginated=\"paginated\"\r\n                    :per-page=\"perPage\"\r\n                    :total=\"dataTotal\"\r\n                    :rounded=\"paginationRounded\"\r\n                    :size=\"paginationSize\"\r\n                    :order=\"paginationOrder\"\r\n                    :simple=\"paginationSimple\"\r\n                    :icon-pack=\"iconPack\"\r\n                    :aria-next-label=\"ariaNextLabel\"\r\n                    :aria-previous-label=\"ariaPreviousLabel\"\r\n                    :aria-page-label=\"ariaPageLabel\"\r\n                    :aria-current-label=\"ariaCurrentLabel\"\r\n                    :root-class=\"paginationWrapperRootClasses\"\r\n                    @change=\"(page) => $emit('page-change', page)\">\r\n                    <!--\r\n                        @slot Additional slot if table is paginated\r\n                    -->\r\n                    <slot name=\"bottom-left\" />\r\n                </o-table-pagination>\r\n            </slot>\r\n        </template>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Table from \"./Table.vue\";\r\nimport TableColumn from \"./TableColumn.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export table specific types */\r\nexport type { Column } from \"./types\";\r\n\r\n/** export table plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Table);\r\n        registerComponent(app, TableColumn);\r\n    },\r\n} as Plugin;\r\n\r\n/** export table components */\r\nexport { Table as OTable, TableColumn as OTableColumn };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OSlotComponent from \"../utils/SlotComponent\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { mod, isDefined } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useProviderParent,\r\n} from \"@/composables\";\r\n\r\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Responsive horizontal navigation tabs, switch between contents with ease\r\n * @displayName Tabs\r\n * @requires ./TabItem.vue\r\n * @style _tabs.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTabs\",\r\n    configField: \"tabs\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: 0 },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.variant\"),\r\n    },\r\n    /**\r\n     * Tab size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.size\"),\r\n    },\r\n    /** Show tab in vertical layout */\r\n    vertical: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.vertical\", false),\r\n    },\r\n    /**\r\n     * Position of the tabs\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Tab type\r\n     * @values boxed, toggle\r\n     */\r\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\r\n    /** Tabs will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Tab will have an animation */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.animated\", true),\r\n    },\r\n    /**\r\n     * Transition animation name\r\n     * @values [next, prev], [right, left, down, up]\r\n     */\r\n    animation: {\r\n        type: Array as PropType<Array<string>>,\r\n        default: () =>\r\n            getOption(\"tabs.animation\", [\r\n                \"slide-next\",\r\n                \"slide-prev\",\r\n                \"slide-down\",\r\n                \"slide-up\",\r\n            ]),\r\n        validator: (value: Array<string>) =>\r\n            value.length === 2 || value.length === 4,\r\n    },\r\n    /** Apply animation on the initial render */\r\n    animateInitially: {\r\n        type: Boolean,\r\n        default: () => getOption(\"tabs.animateInitially\", false),\r\n    },\r\n    /** Show tab items multiline when there is no space */\r\n    multiline: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when when is vertical and its position changes */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when vertical */\r\n    verticalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Tabs component when multiline */\r\n    multilineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Tabs component nav tabs */\r\n    navTabsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Size of the navigation */\r\n    navSizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Tabs component nav position */\r\n    navPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Type of the navigation */\r\n    navTypeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab content when transitioning */\r\n    transitioningClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item wrapper */\r\n    itemWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on tab change event\r\n     * @param value {string | number} new tab value\r\n     * @param value {string | number} old tab value\r\n     */\r\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<TabsComponent>(() => ({\r\n    activeValue: vmodel.value,\r\n    type: props.type,\r\n    vertical: props.vertical,\r\n    animated: props.animated,\r\n    animation: props.animation,\r\n    animateInitially: props.animateInitially,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nconst items = computed<TabItem[]>(() =>\r\n    sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n    })),\r\n);\r\n\r\nconst vmodel = defineModel<string | number>();\r\n\r\n/**  When v-model is changed set the new active tab. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (vmodel.value !== value) performAction(value);\r\n    },\r\n);\r\n\r\nconst activeItem = computed(() =>\r\n    isDefined(vmodel.value)\r\n        ? items.value.find((item) => item.value === vmodel.value) ||\r\n          items.value[0]\r\n        : items.value[0],\r\n);\r\n\r\nconst activeIndex = computed(() => activeItem.value.index);\r\n\r\nfunction isActive(item: TabItem): boolean {\r\n    return item.value === activeItem.value.value;\r\n}\r\n\r\nconst isTransitioning = computed(() =>\r\n    items.value.some((item) => item.isTransitioning),\r\n);\r\n\r\n/** Item click listener, emit input event and change active child. */\r\nfunction itemClick(item: TabItem): void {\r\n    if (vmodel.value !== item.value) performAction(item.value);\r\n}\r\n\r\n/** Go to the next item or wrap around */\r\nfunction next(): void {\r\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\r\n    clickFirstViableChild(newIndex, true);\r\n}\r\n\r\n/** Go to the previous item or wrap around */\r\nfunction prev(): void {\r\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\r\n    clickFirstViableChild(newIndex, false);\r\n}\r\n\r\n/** Go to the first viable item */\r\nfunction homePressed(): void {\r\n    if (items.value.length < 1) return;\r\n    clickFirstViableChild(0, true);\r\n}\r\n\r\n/** Go to the last viable item */\r\nfunction endPressed(): void {\r\n    if (items.value.length < 1) return;\r\n    clickFirstViableChild(items.value.length - 1, false);\r\n}\r\n\r\n/**\r\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\r\n * by the boolean parameter forward. In other words, first try to select the child at index\r\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\r\n * specified direction until either returning to startIndex or finding a viable child item.\r\n */\r\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\r\n    const direction = forward ? 1 : -1;\r\n    let newIndex = startingIndex;\r\n    for (\r\n        ;\r\n        newIndex !== activeIndex.value;\r\n        newIndex = mod(newIndex + direction, items.value.length)\r\n    ) {\r\n        // Break if the item at this index is viable (not disabled and is visible)\r\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\r\n            break;\r\n    }\r\n    itemClick(items.value[newIndex]);\r\n}\r\n\r\n/** Activate next child and deactivate prev child */\r\nfunction performAction(newId: number | string): void {\r\n    const oldId = vmodel.value;\r\n    const oldItem = activeItem.value;\r\n    const newItem =\r\n        items.value.find((item) => item.value === newId) || items.value[0];\r\n\r\n    if (oldItem && newItem) {\r\n        oldItem.deactivate(newItem.index);\r\n        newItem.activate(oldItem.index);\r\n    }\r\n\r\n    nextTick(() => {\r\n        vmodel.value = newId;\r\n        emits(\"change\", newId, oldId);\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-tabs\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-tabs--\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && props.vertical),\r\n    ],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-tabs--fullwidth\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\r\n    [\r\n        \"multilineClass\",\r\n        \"o-tabs--multiline\",\r\n        null,\r\n        computed(() => props.multiline),\r\n    ],\r\n);\r\n\r\nconst itemWrapperClasses = defineClasses([\r\n    \"itemWrapperClass\",\r\n    \"o-tabs__nav-item-wrapper\",\r\n]);\r\n\r\nconst navClasses = defineClasses(\r\n    [\"navTabsClass\", \"o-tabs__nav\"],\r\n    [\r\n        \"navSizeClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"navPositionClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && !props.vertical),\r\n    ],\r\n    [\r\n        \"navTypeClass\",\r\n        \"o-tabs__nav--\",\r\n        computed(() => props.type),\r\n        computed(() => !!props.type),\r\n    ],\r\n);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-tabs__content\"],\r\n    [\r\n        \"transitioningClass\",\r\n        \"o-tabs__content--transitioning\",\r\n        null,\r\n        isTransitioning,\r\n    ],\r\n);\r\n\r\nfunction itemHeaderClasses(\r\n    childItem: (typeof items.value)[number],\r\n): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\r\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\r\n        [\r\n            \"itemHeaderActiveClass\",\r\n            \"o-tabs__nav-item-{*}--active\",\r\n            props.type,\r\n            isActive(childItem),\r\n        ],\r\n        [\r\n            \"itemHeaderDisabledClass\",\r\n            \"o-tabs__nav-item-{*}--disabled\",\r\n            props.type,\r\n            childItem.disabled,\r\n        ],\r\n    );\r\n    const headerClass = { [childItem.headerClass || \"\"]: true };\r\n\r\n    return [headerClass, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\r\n        <nav\r\n            :class=\"navClasses\"\r\n            role=\"tablist\"\r\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\r\n            <!--\r\n                @slot Additional slot before tabs\r\n            -->\r\n            <slot name=\"start\" />\r\n            <div\r\n                v-for=\"childItem in items\"\r\n                v-show=\"childItem.visible\"\r\n                :key=\"childItem.value\"\r\n                :class=\"itemWrapperClasses\"\r\n                role=\"tab\"\r\n                :aria-controls=\"`${childItem.value}-content`\"\r\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\r\n                <o-slot-component\r\n                    v-if=\"childItem.$slots.header\"\r\n                    :component=\"childItem\"\r\n                    :tag=\"childItem.tag\"\r\n                    name=\"header\"\r\n                    :class=\"itemHeaderClasses(childItem)\"\r\n                    @click=\"itemClick(childItem)\"\r\n                    @keydown.enter=\"itemClick(childItem)\"\r\n                    @keydown.left.prevent=\"prev\"\r\n                    @keydown.right.prevent=\"next\"\r\n                    @keydown.up.prevent=\"prev\"\r\n                    @keydown.down.prevent=\"next\"\r\n                    @keydown.home.prevent=\"homePressed\"\r\n                    @keydown.end.prevent=\"endPressed\" />\r\n\r\n                <component\r\n                    :is=\"childItem.tag\"\r\n                    v-else\r\n                    role=\"button\"\r\n                    :tabindex=\"0\"\r\n                    :class=\"itemHeaderClasses(childItem)\"\r\n                    @click=\"itemClick(childItem)\"\r\n                    @keydown.enter=\"itemClick(childItem)\"\r\n                    @keydown.left.prevent=\"prev\"\r\n                    @keydown.right.prevent=\"next\"\r\n                    @keydown.up.prevent=\"prev\"\r\n                    @keydown.down.prevent=\"next\"\r\n                    @keydown.home.prevent=\"homePressed\"\r\n                    @keydown.end.prevent=\"endPressed\">\r\n                    <o-icon\r\n                        v-if=\"childItem.icon\"\r\n                        :root-class=\"\r\n                            getActiveClasses(childItem.headerIconClasses)\r\n                        \"\r\n                        :icon=\"childItem.icon\"\r\n                        :pack=\"childItem.iconPack\"\r\n                        :size=\"size\" />\r\n                    <span :class=\"childItem.headerTextClasses\">\r\n                        {{ childItem.label }}\r\n                    </span>\r\n                </component>\r\n            </div>\r\n            <!--\r\n                @slot Additional slot after tabs\r\n            -->\r\n            <slot name=\"end\" />\r\n        </nav>\r\n\r\n        <section :class=\"contentClasses\">\r\n            <!--\r\n                @slot Place tab items here\r\n            -->\r\n            <slot />\r\n        </section>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isEqual, uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { TabsComponent, TabItemComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Tab Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTabItem\",\r\n    configField: \"tabs\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Item value (it will be used as v-model of wrapper component) */\r\n    value: { type: [String, Number], default: () => uuid() },\r\n    /** Item label */\r\n    label: { type: String, default: undefined },\r\n    /** Item will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Icon on the left */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.icon\"),\r\n    },\r\n    /** Icon pack */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.iconPack\"),\r\n    },\r\n    /** Show/hide item */\r\n    visible: { type: Boolean, default: true },\r\n    /** Tabs item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\r\n    },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\r\n    },\r\n    /** Sets a class to the item header */\r\n    headerClass: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the tab item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header when active */\r\n    itemHeaderActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header when disabled */\r\n    itemHeaderDisabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header type */\r\n    itemHeaderTypeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header icon */\r\n    itemHeaderIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tab item header text */\r\n    itemHeaderTextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** on tab item activate event */\r\n    (e: \"activate\"): void;\r\n    /** on tab item deactivate event */\r\n    (e: \"deactivate\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\n\r\nconst providedData = computed<TabItemComponent>(() => ({\r\n    ...props,\r\n    $slots: slots,\r\n    headerIconClasses: headerIconClasses.value,\r\n    headerTextClasses: headerTextClasses.value,\r\n    isTransitioning: isTransitioning.value,\r\n    activate,\r\n    deactivate,\r\n}));\r\n\r\n// Inject functionalities and data from the parent component\r\nconst { parent, item } = useProviderChild<TabsComponent>({\r\n    data: providedData,\r\n});\r\n\r\nconst transitionName = ref();\r\n\r\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\r\n\r\nconst isTransitioning = ref(false);\r\n\r\nconst nextAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\nconst prevAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\n/** Activate element, alter animation name based on the index. */\r\nfunction activate(oldIndex: number): void {\r\n    transitionName.value =\r\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"activate\");\r\n}\r\n\r\n/** Deactivate element, alter animation name based on the index. */\r\nfunction deactivate(newIndex: number): void {\r\n    transitionName.value =\r\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"deactivate\");\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\r\n\r\nconst headerIconClasses = defineClasses([\r\n    \"itemHeaderIconClass\",\r\n    \"o-tabs__nav-item-icon\",\r\n]);\r\n\r\nconst headerTextClasses = defineClasses([\r\n    \"itemHeaderTextClass\",\r\n    \"o-tabs__nav-item-text\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <Transition\r\n        :css=\"parent.animated\"\r\n        :name=\"transitionName\"\r\n        :appear=\"parent.animateInitially\"\r\n        @after-enter=\"afterEnter\"\r\n        @before-leave=\"beforeLeave\">\r\n        <div\r\n            v-show=\"isActive && visible\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"elementClasses\"\r\n            :data-id=\"`tabs-${item.identifier}`\"\r\n            data-oruga=\"tabs-item\"\r\n            :tabindex=\"isActive ? 0 : -1\"\r\n            :role=\"ariaRole\"\r\n            aria-roledescription=\"item\">\r\n            <!-- \r\n                @slot Tab item content\r\n            -->\r\n            <slot />\r\n        </div>\r\n    </Transition>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Tabs from \"./Tabs.vue\";\r\nimport TabItem from \"./TabItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export tabs specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export tabs plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Tabs);\r\n        registerComponent(app, TabItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export tabs components */\r\nexport { Tabs as OTabs, TabItem as OTabItem };\r\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\r\nimport {\r\n    computed,\r\n    nextTick,\r\n    ref,\r\n    useAttrs,\r\n    watch,\r\n    watchEffect,\r\n    type ComponentInstance,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { getValueByPath } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A simple tag input field that can have autocomplete functionality\r\n * @displayName Taginput\r\n * @style _taginput.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OTaginput\",\r\n    configField: \"taginput\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Array as PropType<T[]>, default: () => [] },\r\n    /** Items data */\r\n    data: { type: Array as PropType<T[]>, default: () => [] },\r\n    /** Property of the object (if data is array of objects) to use as display text */\r\n    field: { type: String, default: \"value\" },\r\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\r\n    groupField: { type: String, default: undefined },\r\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\r\n    groupOptions: { type: String, default: undefined },\r\n    /**\r\n     * Vertical size of the input control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.size\"),\r\n    },\r\n    /**\r\n     * Color of the each item\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.variant\"),\r\n    },\r\n    /** Limits the number of items, plus item counter */\r\n    maxitems: { type: Number, default: undefined },\r\n    /** Same as native maxlength, plus character counter */\r\n    maxlength: { type: Number, default: undefined },\r\n    /** Show counter when maxlength or maxtags props are passed */\r\n    counter: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.counter\", true),\r\n    },\r\n    /** Opens a dropdown with choices when the input field is focused */\r\n    openOnFocus: { type: Boolean, default: false },\r\n    /** Keep open dropdown list after select */\r\n    keepOpen: {\r\n        type: Boolean,\r\n        default: () => getOption(\"autocomplete.keepOpen\", false),\r\n    },\r\n    /** Input placeholder */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Same as native input disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /**\r\n     * Array of keys\r\n     * (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\r\n     * which will add a item when typing\r\n     */\r\n    confirmKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.confirmKeys\", [\",\", \"Tab\", \"Enter\"]),\r\n    },\r\n    /** Array of chars used to split when pasting a new string */\r\n    separators: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.separators\", [\",\"]),\r\n    },\r\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\r\n    keepFirst: { type: Boolean, default: false },\r\n    /** When autocomplete, it allow to add new items */\r\n    allowNew: { type: Boolean, default: false },\r\n    /** Allows adding the same item multiple time */\r\n    allowDuplicates: { type: Boolean, default: false },\r\n    /** Add autocomplete feature (if true, any Autocomplete props may be used too) */\r\n    allowAutocomplete: { type: Boolean, default: false },\r\n    /** Allow removing last item when pressing given keys, if input is empty */\r\n    removeOnKeys: {\r\n        type: Array as PropType<string[]>,\r\n        default: () => getOption(\"taginput.removeOnKeys\", [\"Backspace\"]),\r\n    },\r\n    /** Function to validate the value of the item before adding */\r\n    beforeAdding: {\r\n        type: Function as PropType<(value: any) => boolean>,\r\n        default: () => true,\r\n    },\r\n    /** Function to create a new item to push into v-model (items) */\r\n    createItem: {\r\n        type: Function as PropType<(value: any) => T>,\r\n        default: (item: any) => item,\r\n    },\r\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\r\n    checkScroll: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.checkScroll\", false),\r\n    },\r\n    /** Add close/delete button to the item */\r\n    closable: {\r\n        type: Boolean,\r\n        default: () => getOption(\"taginput.closable\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.iconPack\"),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.icon\"),\r\n    },\r\n    /** Icon name of close icon on selected item */\r\n    closeIcon: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.closeIcon\", \"close\"),\r\n    },\r\n    /** Accessibility label for the close button */\r\n    ariaCloseLabel: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.ariaCloseLabel\"),\r\n    },\r\n    /** Native options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"taginput.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"taginput.teleport\", false),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of input when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input container */\r\n    containerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the input container size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the entered item variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the close button of entered item */\r\n    closeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the entered item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the counter element */\r\n    counterClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Class configuration for the underlying autocomplete component\r\n     * @ignore\r\n     */\r\n    autocompleteClasses: {\r\n        type: Object,\r\n        default: () => getOption(\"taginput.autocompleteClasses\", {}),\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {(string | number | object)[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: T[]): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {String} input value\r\n     */\r\n    (e: \"input\", value: string): void;\r\n    /**\r\n     * new item got added\r\n     * @param value {string | number | object} added item\r\n     */\r\n    (e: \"add\", value: T): void;\r\n    /**\r\n     * item got removed\r\n     * @param value {string | number | object} removed item\r\n     */\r\n    (e: \"remove\", value: T): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n    /** the list inside the dropdown reached the start */\r\n    (e: \"scroll-start\"): void;\r\n    /** the list inside the dropdown reached it's end */\r\n    (e: \"scroll-end\"): void;\r\n}>();\r\n\r\nconst autocompleteRef = ref<ComponentInstance<typeof OAutocomplete<T>>>();\r\n\r\nconst items = defineModel<T[]>({ default: [] });\r\n\r\n// use form input functionalities\r\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\r\n    autocompleteRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst newItem = ref<string>(\"\");\r\nconst isComposing = ref(false);\r\n\r\nconst valueLength = computed(() => newItem.value.trim().length);\r\nconst itemsLength = computed(() => items.value.length);\r\n\r\n/** When modelValue is changed set internal value. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        items.value = Array.isArray(value) ? value.slice(0) : value || [];\r\n    },\r\n);\r\n\r\n/** Show the input field if a maxitems hasn't been set or reached. */\r\nconst hasInput = computed(\r\n    () => props.maxitems == null || itemsLength.value < props.maxitems,\r\n);\r\n\r\nwatchEffect(() => {\r\n    // blur if input is empty\r\n    if (!hasInput.value) onBlur();\r\n});\r\n\r\n/**\r\n * If input has pasteSeparators prop,\r\n * returning new RegExp used to split pasted string.\r\n */\r\nconst separatorsAsRegExp = computed(() =>\r\n    props.separators.length\r\n        ? new RegExp(\r\n              props.separators\r\n                  .map((s) =>\r\n                      s ? s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : null,\r\n                  )\r\n                  .join(\"|\"),\r\n              \"g\",\r\n          )\r\n        : null,\r\n);\r\n\r\nfunction getNormalizedItemText(item: T): string {\r\n    if (typeof item === \"object\") item = getValueByPath(item, props.field);\r\n    return `${item}`;\r\n}\r\n\r\nfunction addItem(item?: T | string): void {\r\n    item = item || newItem.value.trim();\r\n\r\n    if (item ) {\r\n        if (typeof item === \"string\") {\r\n            const reg = separatorsAsRegExp.value;\r\n            if (reg && item.match(reg)) {\r\n                item.split(reg)\r\n                    .map((t) => t.trim())\r\n                    .filter((t) => t.length !== 0)\r\n                    .map(addItem);\r\n                return;\r\n            }\r\n        }\r\n        // Add the item input if it is not blank\r\n        // or previously added (if not allowDuplicates).\r\n        const itemToAdd = props.createItem(item);\r\n        const add = !props.allowDuplicates\r\n            ? items.value.indexOf(itemToAdd) === -1\r\n            : true;\r\n        if (add && props.beforeAdding(item)) {\r\n            items.value.push(itemToAdd);\r\n            emits(\"add\", itemToAdd);\r\n        }\r\n    }\r\n\r\n    // after autocomplete events\r\n    requestAnimationFrame(() => {\r\n        newItem.value = \"\";\r\n        emits(\"input\", newItem.value);\r\n    });\r\n}\r\n\r\nfunction removeItem(index: number, event?: Event): void {\r\n    const item = items.value.splice(index, 1)[0];\r\n    emits(\"remove\", item);\r\n    if (event) event.stopPropagation();\r\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\r\n}\r\n\r\n// --- Event Handler ---\r\n\r\nfunction onSelect(option: T): void {\r\n    if (!option) return;\r\n    addItem(option);\r\n    nextTick(() => (newItem.value = \"\"));\r\n}\r\n\r\nfunction onKeydown(event: KeyboardEvent): void {\r\n    if (\r\n        props.removeOnKeys.indexOf(event.key) !== -1 &&\r\n        !newItem.value?.length &&\r\n        itemsLength.value > 0\r\n    ) {\r\n        // remove last item\r\n        removeItem(itemsLength.value - 1);\r\n    }\r\n    // Stop if is to accept select only\r\n    if (props.allowAutocomplete && !props.allowNew) return;\r\n\r\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\r\n        // Allow Tab to advance to next field regardless\r\n        if (event.key !== \"Tab\") event.preventDefault();\r\n        if (event.key === \"Enter\" && isComposing.value) return;\r\n        addItem();\r\n    }\r\n}\r\n\r\nfunction onInput(value: string | number): void {\r\n    emits(\"input\", String(value).trim());\r\n}\r\n\r\nfunction handleOnBlur(event: Event): void {\r\n    // Add item on-blur if not select only\r\n    if (!props.allowAutocomplete) addItem();\r\n    onBlur(event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst attrs = useAttrs();\r\n\r\nconst autocompleteRootClasses = defineClasses([\r\n    \"autocompleteClasses.rootClass\",\r\n    \"o-taginput__autocomplete\",\r\n]);\r\n\r\nconst autocompleteInputClasses = defineClasses([\r\n    \"autocompleteClasses.inputClasses.inputClass\",\r\n    \"o-taginput__input\",\r\n]);\r\n\r\nconst autocompleteBind = computed(() => ({\r\n    ...attrs,\r\n    \"root-class\": getActiveClasses(autocompleteRootClasses.value),\r\n    \"input-classes\": {\r\n        \"input-class\": getActiveClasses(autocompleteInputClasses.value),\r\n    },\r\n    ...props.autocompleteClasses,\r\n}));\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-taginput\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-taginput--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n);\r\n\r\nconst containerClasses = defineClasses(\r\n    [\"containerClass\", \"o-taginput__container\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-taginput__container--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-taginput__item\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-taginput__item--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\r\n\r\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\r\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\r\n            <!--\r\n                @slot Override selected items\r\n                @binding {unknown[]} items - selected items\r\n            -->\r\n            <slot name=\"selected\" :items=\"items\">\r\n                <span\r\n                    v-for=\"(item, index) in items\"\r\n                    :key=\"getNormalizedItemText(item) + index\"\r\n                    :class=\"itemClasses\">\r\n                    <span>{{ getNormalizedItemText(item) }}</span>\r\n                    <o-icon\r\n                        v-if=\"closable\"\r\n                        :class=\"closeClasses\"\r\n                        clickable\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"closeIcon\"\r\n                        :aria-label=\"ariaCloseLabel\"\r\n                        both\r\n                        @click=\"removeItem(index, $event)\" />\r\n                </span>\r\n            </slot>\r\n\r\n            <o-autocomplete\r\n                v-show=\"hasInput\"\r\n                ref=\"autocompleteRef\"\r\n                v-model=\"newItem\"\r\n                v-bind=\"autocompleteBind\"\r\n                :data=\"data\"\r\n                :field=\"field\"\r\n                :icon=\"icon\"\r\n                :icon-pack=\"iconPack\"\r\n                :maxlength=\"maxlength\"\r\n                :size=\"size\"\r\n                :disabled=\"disabled\"\r\n                :autocomplete=\"autocomplete\"\r\n                :open-on-focus=\"openOnFocus\"\r\n                :keep-first=\"keepFirst\"\r\n                :keep-open=\"keepOpen\"\r\n                :group-field=\"groupField\"\r\n                :group-options=\"groupOptions\"\r\n                :has-counter=\"false\"\r\n                :use-html5-validation=\"useHtml5Validation\"\r\n                :check-scroll=\"checkScroll\"\r\n                :teleport=\"teleport\"\r\n                :confirm-keys=\"confirmKeys\"\r\n                :placeholder=\"placeholder\"\r\n                :validation-message=\"validationMessage\"\r\n                :expanded=\"expanded\"\r\n                @input=\"onInput\"\r\n                @focus=\"onFocus\"\r\n                @blur=\"handleOnBlur\"\r\n                @invalid=\"onInvalid\"\r\n                @keydown=\"onKeydown\"\r\n                @compositionstart=\"isComposing = true\"\r\n                @compositionend=\"isComposing = false\"\r\n                @select=\"onSelect\"\r\n                @scroll-start=\"$emit('scroll-start')\"\r\n                @scroll-end=\"$emit('scroll-end')\"\r\n                @icon-click=\"$emit('icon-click', $event)\"\r\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\r\n                <template v-if=\"$slots.header\" #header>\r\n                    <!--\r\n                        @slot Define an additional header\r\n                    -->\r\n                    <slot name=\"header\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.default\" #default=\"props\">\r\n                    <!--\r\n                        @slot Override the select option\r\n                        @binding {object} option - option object\r\n                        @binding {number} index - option index\r\n                        @binding {unknown} value - option value\r\n                    -->\r\n                    <slot\r\n                        :option=\"props.option\"\r\n                        :index=\"props.index\"\r\n                        :value=\"props.value\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.empty\" #empty>\r\n                    <!--\r\n                        @slot Define content for empty state \r\n                    -->\r\n                    <slot name=\"empty\" />\r\n                </template>\r\n\r\n                <template v-if=\"$slots.footer\" #footer>\r\n                    <!--\r\n                        @slot Define an additional footer\r\n                    -->\r\n                    <slot name=\"footer\" />\r\n                </template>\r\n            </o-autocomplete>\r\n        </div>\r\n\r\n        <small\r\n            v-if=\"counter && (maxitems || maxlength)\"\r\n            :class=\"counterClasses\">\r\n            <template v-if=\"maxlength && valueLength > 0\">\r\n                <!--\r\n                    @slot Override the counter\r\n                    @binding {number} items - items count\r\n                    @binding {number} total - total count\r\n                -->\r\n                <slot name=\"counter\" :items=\"valueLength\" :total=\"maxlength\">\r\n                    {{ valueLength }} / {{ maxlength }}\r\n                </slot>\r\n            </template>\r\n\r\n            <template v-else-if=\"maxitems\">\r\n                <!--\r\n                    @slot Override the counter\r\n                    @binding {number} items - items count\r\n                    @binding {number} total - total count\r\n                -->\r\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\r\n                    {{ itemsLength }} / {{ maxitems }}\r\n                </slot>\r\n            </template>\r\n        </small>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Taginput from \"./Taginput.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export taginput plugin */\r\nexport default {\r\n    install(Vue: App) {\r\n        registerComponent(Vue, Taginput);\r\n    },\r\n} as Plugin;\r\n\r\n/** export taginput components */\r\nexport { Taginput as OTaginput };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Timepicker from \"./Timepicker.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export timepicker plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Timepicker);\r\n    },\r\n} as Plugin;\r\n\r\n/** export timepicker components */\r\nexport { Timepicker as OTimepicker };\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Tooltip from \"./Tooltip.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export tooltip plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Tooltip);\r\n    },\r\n} as Plugin;\r\n\r\n/** export tooltip components */\r\nexport { Tooltip as OTooltip };\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { File } from \"@/utils/ssr\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Upload one or more files\r\n * @displayName Upload\r\n * @style _upload.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OUpload\",\r\n    configField: \"upload\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Object, Array] as PropType<\r\n            object | typeof File | object[] | (typeof File)[]\r\n        >,\r\n        default: undefined,\r\n    },\r\n    /** Same as native, also push new item to v-model instead of replacing */\r\n    multiple: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"upload.variant\"),\r\n    },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native accept */\r\n    accept: { type: String, default: undefined },\r\n    /** Accepts drag & drop and change its style */\r\n    dragDrop: { type: Boolean, default: false },\r\n    /** Upload will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Replace last chosen files every time (like native file input element) */\r\n    native: { type: Boolean, default: true },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when draggable */\r\n    draggableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when hovered */\r\n    hoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref<HTMLInputElement>();\r\n\r\nconst vmodel = defineModel<object | object[] | File | File[]>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\r\n    useInputHandler(inputRef, emits, props);\r\n\r\nconst dragDropFocus = ref(false);\r\n\r\n/**\r\n * When v-model is changed:\r\n * 1. Reset interna input file value\r\n * 2. If it's invalid, validate again.\r\n */\r\nwatch(vmodel, (value) => {\r\n    if (!value || (Array.isArray(value) && value.length === 0))\r\n        inputRef.value.value = null;\r\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\r\n});\r\n\r\n/**\r\n * Listen change event on input type 'file',\r\n * emit 'input' event and validate\r\n */\r\nfunction onFileChange(event: Event | DragEvent): void {\r\n    if (props.disabled) return;\r\n    if (props.dragDrop) updateDragDropFocus(false);\r\n    const value =\r\n        (event.target as HTMLInputElement).files ||\r\n        (event as DragEvent).dataTransfer.files;\r\n    // no file selected\r\n    if (value.length === 0) {\r\n        if (!vmodel.value) return;\r\n        if (props.native) vmodel.value = null;\r\n    }\r\n\r\n    // multiple upload\r\n    if (props.multiple) {\r\n        // always new values if native or undefined local\r\n        const values =\r\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\r\n                ? []\r\n                : [...vmodel.value];\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const file = value[i];\r\n            // add file when type is valid\r\n            if (checkType(file)) values.push(file);\r\n        }\r\n        vmodel.value = values;\r\n    }\r\n    // single uplaod\r\n    else {\r\n        // only one element in case drag drop mode and isn't multiple\r\n        if (props.dragDrop && value.length !== 1) return;\r\n        else {\r\n            const file = value[0];\r\n            // add file when type is valid\r\n            if (checkType(file)) vmodel.value = file;\r\n            // else clear input\r\n            else if (vmodel.value) {\r\n                vmodel.value = null;\r\n                clearInput();\r\n            } else {\r\n                // Force input back to empty state and recheck validity\r\n                clearInput();\r\n                checkHtml5Validity();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!props.dragDrop) checkHtml5Validity();\r\n}\r\n\r\n/** Reset file input value */\r\nfunction clearInput(): void {\r\n    inputRef.value.value = null;\r\n}\r\n\r\n/** Listen drag-drop to update internal variable */\r\nfunction updateDragDropFocus(focus: boolean): void {\r\n    if (!props.disabled) dragDropFocus.value = focus;\r\n}\r\n\r\n/** Check mime type of file s*/\r\nfunction checkType(file: File): boolean {\r\n    if (!props.accept) return true;\r\n    const types = props.accept.split(\",\");\r\n    if (types.length === 0) return true;\r\n    for (let i = 0; i < types.length; i++) {\r\n        const type = types[i].trim();\r\n        if (type) {\r\n            if (type.substring(0, 1) === \".\") {\r\n                const extension = file.name.toLowerCase().slice(-type.length);\r\n                if (extension === type.toLowerCase()) return true;\r\n            } else {\r\n                // check mime type\r\n                if (file.type.match(type)) return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onClick(event: Event): void {\r\n    if (props.disabled) return;\r\n\r\n    // click input if not drag and drop is used\r\n    if (!props.dragDrop) {\r\n        event.preventDefault();\r\n        inputRef.value.click();\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-upl\"],\r\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\r\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst draggableClasses = defineClasses(\r\n    [\"draggableClass\", \"o-upl__draggable\"],\r\n    [\r\n        \"hoveredClass\",\r\n        \"o-upl__draggable--hovered\",\r\n        null,\r\n        computed(() => !props.variant && dragDropFocus.value),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-upl__draggable--hovered-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.variant && dragDropFocus.value),\r\n    ],\r\n);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label :id=\"ariaLabelledby\" :class=\"rootClasses\" data-oruga=\"upload\">\r\n        <template v-if=\"!dragDrop\">\r\n            <!--\r\n                @slot Default content\r\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\r\n            -->\r\n            <slot :onclick=\"onClick\" />\r\n        </template>\r\n\r\n        <div\r\n            v-else\r\n            :class=\"draggableClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @mouseenter=\"updateDragDropFocus(true)\"\r\n            @mouseleave=\"updateDragDropFocus(false)\"\r\n            @dragover.prevent=\"updateDragDropFocus(true)\"\r\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\r\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\r\n            @drop.prevent=\"onFileChange\">\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </div>\r\n\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            type=\"file\"\r\n            data-oruga-input=\"file\"\r\n            :multiple=\"multiple\"\r\n            :accept=\"accept\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @change=\"onFileChange\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\" />\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Upload from \"./Upload.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export upload plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Upload);\r\n    },\r\n} as Plugin;\r\n\r\n/** export upload components */\r\nexport { Upload as OUpload };\r\n","import type { App, Plugin } from \"vue\";\r\nimport type { OrugaOptions } from \"./types\";\r\n\r\nimport * as plugins from \"./components/plugins\";\r\n\r\nimport { ConfigProgrammatic, OrugaConfig } from \"./utils/config\";\r\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\r\n\r\n// export all types\r\nexport * from \"./types\";\r\nexport * from \"./components/types\";\r\n\r\n// export all vue components\r\nexport * from \"./components\";\r\n// export all components as vue plugin\r\nexport * from \"./components/plugins\";\r\n\r\n// export programmatic config\r\nexport {\r\n    OrugaConfig,\r\n    /** @deprecated use `OrugaConfig` instead - will be removed with 0.9 */\r\n    OrugaConfig as ConfigPlugin, // todo: remove export later - beaking change\r\n    ConfigProgrammatic,\r\n};\r\n\r\n// export programmatic composable\r\nexport { useOruga } from \"./utils/programmatic\";\r\n\r\n// main oruga vue plugin\r\nconst plugin: Plugin = {\r\n    install(app: App, options: OrugaOptions = {}) {\r\n        // initialise config with options\r\n        app.use(OrugaConfig, options);\r\n\r\n        // add all components\r\n        for (const componentKey in plugins) {\r\n            registerPlugin(app, plugins[componentKey]);\r\n        }\r\n\r\n        // add programmatic config component\r\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\r\n    },\r\n};\r\n\r\n// export default oruga vue plugin\r\nexport { plugin as Oruga };\r\nexport default plugin;\r\n"],"names":["uuid","signPoly","value","sign","mod","n","bound","val","min","max","isObject","obj","isDefined","d","blankIfUndefined","toCssDimension","width","indexOf","array","fn","index","arr","isEqual","valueA","valueB","keys1","keys2","key","val1","val2","areObjects","clone","merge","target","source","deep","mergeDeep","targetValue","sourceValue","getValueByPath","path","defaultValue","setValueByPath","p","field","removeElement","el","escapeRegExpChars","removeDiacriticsFromString","isMobileAgent","oruga","ref","addProgrammatic","property","component","useOruga","VueInstance","setVueInstance","Vue","registerPlugin","app","plugin","registerComponent","registerComponentProgrammatic","globalOptions","setOptions","options","getOptions","toRaw","getOption","ConfigProgrammatic","OrugaConfig","mdiIcons","faIcons","faIconPrefix","getIcons$1","icons","customIconPacks","unrefElement","elRef","plain","toValue","getActiveClasses","classes","bind","defineClasses","classDefinitions","vm","getCurrentInstance","scope","effectScope","defintion","className","defaultClass","suffix","apply","getClassBind","computedClass","computeClass","applied","isRef","watch","oldValue","classBind","getCurrentScope","onScopeDispose","props","configField","_a","config","globalOverride","localOverride","overrideClass","globalTransformClasses","localTransformClasses","globalClass","currentClass","getProps","suffixProcessor","appliedClasses","input","cls","usePropBinding","name","emit","event","proxy","isUpdating","nextTick","computed","useVModelBinding","useEventListener","listener","cleanup","register","optionsClone","stop","onMounted","onBeforeUnmount","isClient","isSSR","useMatchMedia","mobileBreakpoint","isMobile","mediaQuery","defaultWidth","onMatchMedia","_sfc_main$K","defineComponent","parentField","injectField","slots","useSlots","first","slot","children","h","element","message","Comment","Text","resolveComponent","__props","fieldVariant","v","fieldMessage","isFocused","isFilled","hasLabel","hasMessage","hasInnerField","hasAddons","renderedNode","rootRef","setFocus","setFilled","setVariant","setMessage","provideData","provideField","rootClasses","messageClasses","labelClasses","labelHorizontalClasses","bodyClasses","bodyHorizontalClasses","innerFieldClasses","$field","data","provide","inject","statusVariant","statusMessage","statusVariantIcon","validatableFormElementTypes","asValidatableFormElement","t","useInputHandler","inputRef","emits","inputs","doClick","onBlur","checkHtml5Validity","onFocus","isValid","setFieldValidity","variant","setInvalid","onInvalid","validatable","isFirstInvalid","formElements","i","fieldElement","invalidHandler","canScrollToField","useDebounce","func","wait","immediate","timeout","args","later","callNow","useProviderParent","childItems","sequence","sortedItems","a","b","registerItem","identifier","nextSequence","item","ids","sortedIds","unregisterItem","useProviderChild","parent","needParent","onUnmounted","useProgrammaticComponent","elementRef","isActive","cancelOptions","getElement","container","onKeyPress","cancel","method","close","useClickOutside","handler","ignore","shouldIgnore","getScrollingParent","isScrollingParent","nextParent","overflow","overflowY","scrollHeight","clientHeight","rootStyle","style","iconConfig","getIcons","iconPrefix","customSizeByPack","computedIcon","getEquivalentIconOf","computedSize","computedVariant","newVariant","_b","__emit","textareaRef","vmodel","_useModel","valueLength","resize","height","computedStyles","onInput","hasIconRight","computedIconRight","passwordVisibleIcon","computedIconRightVariant","iconClick","rightIconClick","togglePasswordVisibility","isPasswordVisible","inputType","inputClasses","iconLeftClasses","iconRightClasses","counterClasses","__expose","opposites","teleportTo","teleportDisabled","contentRef","setContent","updatePositioning","addHandler","initialPosition","scrollingParent","resizeObserver","removeHandler","position","getAutoPosition","content","trigger","rect","top","left","bestPosition","viewRect","contentRect","triggerRect","triggerAnchors","anchors","contentAnchors","contentRectAtAnchor","pos","triggerAnchor","contentAnchor","defaultOpposite","crossPosition","crossOpposite","positions","maxOverlap","overlap","intersectionArea","right","bottom","findFocusable","programmatic","onKeyDown","vTrapFocus","focusable","focusableProg","firstFocusable","lastFocusable","autoPosition","isMobileModal","isMobileNative","menuStyle","hoverable","triggerRef","eventCleanups","timer","onClickedOutside","onClick","toggle","onContextMenu","open","isHovered","onHover","onHoverLeave","onClose","checkDropdownScroll","dropdown","selectItem","triggerClasses","positionWrapperClasses","menuMobileOverlayClasses","menuClasses","itemValue","isClickable","selected","SpecialOption","SpecialOption2","isSpecialOption","option","dropdownRef","footerRef","headerRef","itemRefs","setItemRef","groupIndex","itemIndex","selectedOption","hoveredOption","headerHovered","footerHovered","hoveredId","menuId","currentValue","getValue","setSelected","isEmpty","selectFirstOption","setHovered","hoveredValue","computedData","setHoveredIdToIndex","group","items","empty","closeableOptions","onDropdownClose","closeDropdown","nonEmptyElements","selectHeaderOrFooterByClick","origin","navigateItem","direction","dropdownMenu","visMin","visMax","onKeydown","handleFocus","handleBlur","debouncedInput","emitInput","watchEffect","computedIconRightClickable","trashhold","headerHeight","footerHeight","attrs","useAttrs","inputBind","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","itemOptionClasses","optionClasses","index$s","Autocomplete","computedTag","computedNativeType","computedDisabled","iconClasses","wrapperClasses","index$r","Button","restartTimer","pauseTimer","startTimer","itemWidth","scrollIndex","switchTo","activeIndex","windowWidth","refresh_","settings","onRefresh","onResized","dragEnd","breakpoint","readonly","translation","delta","total","indicatorCount","indicatorIndex","hasArrows","hasPrev","onPrev","hasNext","onNext","onlyMove","onModeChange","isPaused","onMouseEnter","checkPause","onMouseLeave","status","isTouch","dragX","hold","isDragging","onDragStart","dragMove","dragEndX","signCheck","results","itemsClasses","arrowIconClasses","arrowIconPrevClasses","arrowIconNextClasses","indicatorItemClasses","indicatorsClasses","indicatorClasses","itemStyle","index$q","Carousel","CarouselItem","isIndeterminate","isChecked","index$p","Checkbox","isOpen","contentClasses","index$o","Collapse","selectRef","placeholderVisible","selectOptions","rightIcon","rightIconVariant","selectClasses","picker","nativeInputRef","togglePicker","onActiveChange","ariaRole","triggers","active","onInputClick","dropdownBind","getMonthNames","locale","format","dates","dtf","getWeekdayNames","firstDayOfWeek","j","matchWithGroups","pattern","str","matches","groupMatches","acc","curr","weekBuilder","startingDate","month","year","thisMonth","thisWeek","dayOfWeek","end","daysAgo","daysForward","firstWeekOffset","dow","doy","fwd","daysInYear","weeksInYear","weekOffset","weekOffsetNext","useDatepickerMixins","isDateSelectable","date","validity","enabledDate","disabledDate","isTypeMonth","localeOptions","dtfMonth","sampleTime","formatRegex","part","dateGroups","s","datepicker","hasEvents","dayRefs","setDayRef","refKey","day","clickWeekNumber","week","getDayOfYear","getWeekNumber","mom","resWeek","resYear","eventsDateMatch","weekDay","preventDefault","selectDate","changeFocus","inc","nextDay","setRangeHoverEndDate","dateMatch","dateOne","dateTwo","multiple","dateWithin","cellClasses","tableCellClasses","cellEventsClass","eventClasses","tableRowClasses","tableEventsClasses","focusedDateModel","selectedBeginDate","selectedEndDate","hoveredEndDate","visibleDayNames","currentDayName","eventsInThisMonth","weeksInThisMonth","validateFocusedDay","startingDay","newWeek","eventsInThisWeek","stripped","timed","weekDate","hoveredDateRange","currentDate","monthDays","onSelectedDate","handleSelectRangeDate","handleSelectMultipleDates","multipleSelectedDates","selectedDate","onRangeHoverEndDate","onChangeFocus","tableClasses","tableHeadClasses","tableHeadCellClasses","tableBodyClasses","monthRefs","setMonthRef","eventsInThisYear","monthDates","months","focused","dateMultipleSelected","monthClasses","monthBodyClasses","monthTableClasses","monthCellClasses","defaultDateFormatter","defaultDateParser","pickerRef","formattedValue","isArray","focusedDateData","_initialDate","computedMonthNames","listOfMonths","minMonth","maxMonth","computedDayNames","listOfYears","latestYear","earliestYear","showPrev","dateToCheck","prev","showNext","next","formatNative","onChange","onChangeNativePicker","headerClasses","headerButtonsClasses","prevButtonClasses","nextButtonClasses","listsClasses","footerClasses","dropdownClass","boxClasses","boxClassBind","index$n","Datepicker","AM","PM","HOUR_FORMAT_24","HOUR_FORMAT_12","useTimepickerMixins","isHourFormat24","computedHourFormat","amString","dayPeriod","pmString","meridiens","hourLiteral","parts","literal","idx","minuteLiteral","secondLiteral","defaultTimeFormatter","time","defaultTimeParser","timeGroups","am","dateString12","timeSplit","hours","minutes","seconds","hoursSelected","minutesSelected","secondsSelected","meridienSelected","nativeStep","formatNumber","prependZero","pad","numberOfHours","label","isHourDisabled","hour","disabled","minHours","noMinutesAvailable","minute","isMinuteDisabledForHour","maxHours","minMinutes","maxMinutes","isMinuteDisabled","isSecondDisabled","second","minSeconds","maxSeconds","isMeridienDisabled","meridienString","offset","updateDateSelected","onMeridienChange","onHoursChange","onMinutesChange","onSecondsChange","selectSelectClasses","selectPlaceholderClasses","selectBind","separatorClasses","datepickerRef","timepickerRef","updateVModel","minDate","maxDate","minTime","maxTime","datepickerSize","timepickerSize","timepickerDisabled","enableSeconds","defaultDatetimeParser","defaultParser","dayPeriods","datetimeGroups","defaultDatetimeFormatter","datepickerWrapperClasses","timepickerWrapperClasses","index$m","Datetimepicker","index$l","Dropdown","DropdownItem","index$k","Field","index$j","Icon","index$i","Input","displayInFullPage","overlayClasses","InstanceRegistry","__publicField","entry","callback","e","instances","LoadingProgrammatic$1","params","componentParams","propsData","p1","p2","defaultSlot","vnode","createVNode","Loading","render","index$h","LoadingProgrammatic","resetMenu","excludedItems","listClasses","providedData","reset","providedItem","itemParent","isExpanded","triggerReset","child","submenuClasses","index$g","Menu","MenuItem","_teleport","savedScrollTop","isAnimating","handleScroll","showX","customStyle","scrollto","scrollClass","afterEnter","beforeLeave","closeClasses","scrollClasses","noScrollClasses","ModalProgrammatic$1","Modal","index$f","ModalProgrammatic","notificationRef","parentTop","parentBottom","setAutoClose","onBeforeMount","noticeClasses","positionBottomClasses","positionTopClasses","topClasses","bottomClasses","noticeCustomContainerClasses","c","showNotice","correctParent","shouldQueue","handleClose","NotificationProgrammatic$1","defaultParams","notificationParams","NotificationNotice","index$e","Notification","NotificationProgrammatic","linkClasses","current","pageCount","last","firstItem","perPage","hasFirst","hasFirstEllipsis","hasLast","hasLastEllipsis","pagesInRange","pages","getPage","num","ariaLabel","changePage","getAriaPageLabel","pageNumber","isCurrent","page","prevBtnClasses","nextBtnClasses","infoClasses","ellipsisClasses","linkCurrentClasses","listItemClasses","index$d","Pagination","index$c","Radio","index$b","Select","index$a","Skeleton","sidebarContent","transitionName","vertical","hideOnMobile","removeOutsideListener","clickedOutside","SidebarProgrammatic$1","Sidebar","index$9","SidebarProgrammatic","arrowClasses","slider","dragging","startX","startPosition","newPosition","tooltip","tooltipAlways","step","indicator","precision","precisions","decimal","computedTooltipVariant","currentPosition","wrapperStyle","onButtonDown","onDragging","onDragEnd","onLeftKeyDown","setPosition","onRightKeyDown","onHomeKeyDown","onEndKeyDown","diff","percent","stepLength","hidden","tickStyle","tickLabelClasses","emitValue","isRange","minValue","maxValue","valueStart","sliderRef","thumbStartRef","thumbEndRef","valueEnd","isThumbReversed","isTrackClickDisabled","setValues","onInternalValueUpdate","tickValues","result","barSize","barStart","barStyle","newValue","smallValue","largeValue","sliderSize","onSliderClick","sliderOffsetLeft","diffFirst","diffSecond","trackClasses","fillClasses","thumbClasses","thumbWrapperClasses","index$8","Slider","SliderTick","column","performAction","activeItem","isTransitioning","prevItem","nextItem","isItemClickable","itemClick","newId","oldId","oldItem","newItem","stepDividerClasses","stepMarkerClasses","stepContentClasses","stepNavigationClasses","stepLinkLabelClasses","stepLinkClasses","childItem","activate","deactivate","nextAnimation","prevAnimation","oldIndex","newIndex","elementClasses","index$7","Steps","StepItem","switchClasses","switchCheckClasses","index$6","Switch","OSlotComponent","mobileSort","showPlaceholder","sortableColumns","isCurrentSort","sort","isHeaderUnselectable","currentPage","pageChanged","newPage","isMobileActive","slotRef","provider","tableColumns","tableData","row","tableRows","dataTotal","tableCurrentPage","isRowFiltered","currentSortColumn","newTotal","tableWrapperStyle","visibleRows","start","visibleColumns","col","columnCount","count","hasSearchablenewColumns","isScrollable","hasCustomSubheadings","hasCustomFooterSlot","footer","tag","onArrowPressed","selectRow","isRowSelected","selectedRow","getRowKey","filters","handleFiltersChange","onFiltersEvent","doSortSingleColumn","re","isAsc","checkSort","hasSortablenewColumns","isColumnSorted","initSort","sortField","sortDirection","sortColumn","updateDirection","sortBy","sorted","newA","newB","newCheckedRows","lastCheckedRowIndex","rows","isAllChecked","validVisibleData","currentVisibleRow","isAllUncheckable","isRowChecked","removeCheckedRow","checkAll","allChecked","currentRow","checkRow","visibleDetailRows","showDetailRowIcon","expandedRows","toggleDetails","isVisibleDetailRow","closeDetailRow","openDetailRow","handleDetailKey","isActiveDetailRow","isActiveCustomDetailRow","isDraggingRow","isDraggingColumn","canDragRow","canDragColumn","handleDragStart","handleDragEnd","handleDrop","handleDragOver","handleDragLeave","handleColumnDragStart","handleColumnDragEnd","handleColumnDrop","handleColumnDragOver","handleColumnDragLeave","tableWrapperClasses","thBaseClasses","tdBaseClasses","thCheckboxClasses","thDetailedClasses","thSubheadingClasses","tdCheckboxClasses","detailedClasses","tdDetailedChevronClasses","mobileSortClasses","paginationWrapperClasses","paginationWrapperRootClasses","thSortIconClasses","thClasses","rowClasses","rowClass","tdClasses","index$5","Table","TableColumn","clickFirstViableChild","homePressed","endPressed","startingIndex","forward","itemWrapperClasses","navClasses","headerIconClasses","headerTextClasses","index$4","Tabs","TabItem","autocompleteRef","isComposing","itemsLength","hasInput","separatorsAsRegExp","getNormalizedItemText","addItem","reg","itemToAdd","removeItem","onSelect","handleOnBlur","autocompleteRootClasses","autocompleteInputClasses","autocompleteBind","containerClasses","index$3","Taginput","index$2","Timepicker","index$1","Tooltip","dragDropFocus","onFileChange","updateDragDropFocus","values","file","checkType","clearInput","focus","types","type","draggableClasses","Upload","componentKey","plugins"],"mappings":"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"}