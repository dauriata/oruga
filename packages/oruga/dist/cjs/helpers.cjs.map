{"version":3,"file":"helpers.cjs","sources":["../../src/utils/helpers.ts"],"sourcesContent":["/**\r\n * Generates a random string\r\n */\r\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\r\n\r\n/**\r\n * +/- function to native math sign\r\n */\r\nfunction signPoly(value: number): number {\r\n    if (value < 0) return -1;\r\n    return value > 0 ? 1 : 0;\r\n}\r\nexport const sign = Math.sign || signPoly;\r\n\r\n/**\r\n * Native modulo bug with negative numbers\r\n * @param n\r\n * @param mod\r\n * @returns {number}\r\n */\r\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\r\n\r\n/**\r\n * Asserts a value is beetween min and max\r\n * @param val\r\n * @param min\r\n * @param max\r\n * @returns {number}\r\n */\r\nexport function bound(val: number, min: number, max: number): number {\r\n    return Math.max(min, Math.min(max, val));\r\n}\r\n\r\nexport const isObject = <T>(obj: T): boolean =>\r\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\r\n\r\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\r\n\r\nexport const blankIfUndefined = (value: string): string =>\r\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\r\n\r\nexport const defaultIfUndefined = <T>(\r\n    value: T | undefined,\r\n    defaultValue: T,\r\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\r\n\r\nexport const toCssDimension = (width: string | number): string | number =>\r\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\r\n\r\n/**\r\n * Extension of indexOf method by equality function if specified\r\n */\r\nexport function indexOf<T>(\r\n    array: T[],\r\n    obj: T,\r\n    fn: (value: T, array: T[]) => boolean,\r\n): number {\r\n    if (!array) return -1;\r\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\r\n    return array.findIndex((value, index, arr) => fn(value, arr));\r\n}\r\n\r\n/**\r\n * Deeply check if two values are equal\r\n */\r\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\r\n    // Check if only one value is empty.\r\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\r\n\r\n    // If both objects are identical, return true.\r\n    if (valueA === valueB) return true;\r\n\r\n    // Check if both values are objecs.\r\n    if (isObject(valueA) && isObject(valueB)) {\r\n        // Get the keys of both objects.\r\n        const keys1 = Object.keys(valueA);\r\n        const keys2 = Object.keys(valueB);\r\n\r\n        // Check if the number of keys is the same.\r\n        if (keys1.length !== keys2.length) return false;\r\n\r\n        // Iterate through the keys and compare their values recursively.\r\n        for (const key of keys1) {\r\n            const val1 = valueA[key];\r\n            const val2 = valueB[key];\r\n            const areObjects = isObject(val1) && isObject(val2);\r\n            if (\r\n                (areObjects && !isEqual(val1, val2)) ||\r\n                (!areObjects && val1 !== val2)\r\n            )\r\n                return false;\r\n        }\r\n        // If all checks pass, the objects are deep equal.\r\n        return true;\r\n    }\r\n\r\n    // Check if both values are arrays.\r\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\r\n        // Check if the number of keys is the same.\r\n        if (valueA.length !== valueB.length) return false;\r\n        // Check if each value of the array is the same.\r\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\r\n        // If all checks pass, the arrays are deep equal.\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Clone an obj with Object.assign\r\n */\r\nexport function clone<T extends object>(obj: T): T {\r\n    return Object.assign({}, obj);\r\n}\r\n\r\n/**\r\n * Merge function to replace Object.assign with deep merging possibility\r\n */\r\nexport function merge(target: any, source: any, deep = false): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n    if (!deep) return Object.assign(target, source);\r\n    else return mergeDeep(target, source);\r\n}\r\n\r\n/**\r\n * Performs a deep merge of `source` into `target`.\r\n * Mutates `target` only but not its objects and arrays.\r\n *\r\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\r\n */\r\nexport function mergeDeep(target: any, source: any): any {\r\n    if (!isObject(target) || !isObject(source)) return source;\r\n\r\n    Object.getOwnPropertyNames(source).forEach((key) => {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n\r\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n            target[key] = targetValue.concat(sourceValue);\r\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n            target[key] = mergeDeep(\r\n                Object.assign({}, targetValue),\r\n                sourceValue,\r\n            );\r\n        } else {\r\n            target[key] = sourceValue;\r\n        }\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Get a value of an object property/path even if it's nested\r\n */\r\nexport function getValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    defaultValue?: T,\r\n): T {\r\n    const value = path\r\n        .split(\".\")\r\n        .reduce(\r\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\r\n            obj,\r\n        ) as T;\r\n    return typeof value !== \"undefined\" ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Set a value of an object property/path even if it's nested\r\n */\r\nexport function setValueByPath<T = any>(\r\n    obj: Record<string, any>,\r\n    path: string,\r\n    value: T,\r\n): void {\r\n    const p = path.split(\".\");\r\n    if (p.length === 1) {\r\n        obj[path] = value;\r\n        return;\r\n    }\r\n    const field = p[0];\r\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\r\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\r\n}\r\n\r\nexport function removeElement(el: Element): void {\r\n    if (typeof el.remove !== \"undefined\") {\r\n        el.remove();\r\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n\r\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\r\n    const root = document.createElement(\"div\");\r\n    root.style.position = \"absolute\";\r\n    root.style.left = \"0px\";\r\n    root.style.top = \"0px\";\r\n    const wrapper = document.createElement(\"div\");\r\n    root.appendChild(wrapper);\r\n    wrapper.appendChild(el);\r\n    document.body.appendChild(root);\r\n    return root;\r\n}\r\n\r\n/**\r\n * Escape regex characters\r\n * http://stackoverflow.com/a/6969486\r\n */\r\nexport function escapeRegExpChars(value: string): string {\r\n    if (!value) return value;\r\n    // eslint-disable-next-line no-useless-escape\r\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\n/**\r\n * Remove accents/diacritics in a string in JavaScript\r\n * https://stackoverflow.com/a/37511463\r\n */\r\nexport function removeDiacriticsFromString(value: string): string {\r\n    if (!value) return value;\r\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * Mobile detection\r\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\r\n */\r\nexport const isMobileAgent = {\r\n    Android: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Android/i),\r\n    BlackBerry: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/BlackBerry/i),\r\n    iOS: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\r\n    Opera: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/Opera Mini/i),\r\n    Windows: (): boolean =>\r\n        typeof window !== \"undefined\" &&\r\n        !!window.navigator.userAgent.match(/IEMobile/i),\r\n    any: (): boolean =>\r\n        isMobileAgent.Android() ||\r\n        isMobileAgent.BlackBerry() ||\r\n        isMobileAgent.iOS() ||\r\n        isMobileAgent.Opera() ||\r\n        isMobileAgent.Windows(),\r\n};\r\n"],"names":["mod"],"mappings":"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"}