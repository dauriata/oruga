{"version":3,"file":"Select.vue_vue_type_script_setup_true_lang-CepSUurg.cjs","sources":["../../src/components/select/Select.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport { injectField } from \"../field/useFieldShare\";\r\n\r\nimport type { OptionsItem } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Select an item in a dropdown list. Use with Field to access all functionalities\r\n * @displayName Select\r\n * @style _select.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSelect\",\r\n    configField: \"select\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [String, Number, Boolean, Object, Array],\r\n        default: null,\r\n    },\r\n    /** Select options, unnecessary when default slot is used */\r\n    options: {\r\n        type: Array as PropType<string[] | OptionsItem[]>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * Vertical size of input\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"select.size\"),\r\n    },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"select.variant\"),\r\n    },\r\n    /** Text when nothing is selected */\r\n    placeholder: { type: String, default: undefined },\r\n    /** Allow multiple selection */\r\n    multiple: { type: Boolean, default: false },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Makes input full width when inside a grouped or addon field */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Makes the element rounded */\r\n    rounded: { type: Boolean, default: false },\r\n    /** Same as native size */\r\n    nativeSize: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconPack\", undefined),\r\n    },\r\n    /** Icon to be shown */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"select.icon\", undefined),\r\n    },\r\n    /** Makes the icon clickable */\r\n    iconClickable: { type: Boolean, default: false },\r\n    /** Icon to be added on the right side */\r\n    iconRight: {\r\n        type: String,\r\n        default: () => getOption(\"select.iconRight\", undefined),\r\n    },\r\n    /** Make the icon right clickable */\r\n    iconRightClickable: { type: Boolean, default: false },\r\n    /** Variant of right icon */\r\n    iconRightVariant: { type: String, default: undefined },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"select.autocomplete\", \"off\"),\r\n    },\r\n    /** Show status icon using field and variant prop */\r\n    statusIcon: {\r\n        type: Boolean,\r\n        default: () => getOption(\"statusIcon\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native select element */\r\n    selectClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon space inside the select */\r\n    iconLeftSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon space inside the select */\r\n    iconRightSpaceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select when multiple mode is active */\r\n    multipleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of select when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the left icon */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the right icon */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select placeholder */\r\n    placeholderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select arrow */\r\n    arrowClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the select variant for the root element*/\r\n    rootVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\r\n     */\r\n    (\r\n        e: \"update:modelValue\",\r\n        value: string | number | boolean | object | Array<any>,\r\n    ): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n    /**\r\n     * on icon click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-click\", event: Event): void;\r\n    /**\r\n     * on icon right click event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"icon-right-click\", event: Event): void;\r\n}>();\r\n\r\nconst selectRef = ref<HTMLInputElement>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\r\n    useInputHandler(selectRef, emits, props);\r\n\r\n// inject parent field component if used inside one\r\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\r\n\r\nconst vmodel = useVModelBinding<\r\n    string | number | boolean | object | Array<any>\r\n>(props, emits, { passive: true });\r\n\r\nconst placeholderVisible = computed(() => vmodel.value === null);\r\n\r\nonMounted(() => {\r\n    /**\r\n     * When v-model is changed:\r\n     *  1. Set parent field filled state.\r\n     *  2. Resize textarea input\r\n     *  3. Check html5 valdiation\r\n     */\r\n    watch(\r\n        () => vmodel.value,\r\n        (value) => {\r\n            if (parentField?.value) parentField.value.setFilled(!!value);\r\n            checkHtml5Validity();\r\n        },\r\n        { immediate: true },\r\n    );\r\n});\r\n\r\nconst selectOptions = computed<OptionsItem[]>(() => {\r\n    if (!props.options || !Array.isArray(props.options)) return [];\r\n\r\n    return props.options.map((option) =>\r\n        typeof option === \"string\"\r\n            ? { value: option, label: option, key: uuid() }\r\n            : { ...option, key: uuid() },\r\n    );\r\n});\r\n\r\n// --- Icon Feature ---\r\n\r\nconst hasIconRight = computed(\r\n    () =>\r\n        (props.iconRight && !props.multiple) ||\r\n        (props.statusIcon && statusVariantIcon.value),\r\n);\r\n\r\nconst rightIcon = computed(() =>\r\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\r\n);\r\n\r\nconst rightIconVariant = computed(() =>\r\n    props.iconRight\r\n        ? props.iconRightVariant || props.variant || null\r\n        : statusVariant.value,\r\n);\r\n\r\nfunction iconClick(emit, event): void {\r\n    emits(emit, event);\r\n    nextTick(() => setFocus());\r\n}\r\n\r\nfunction rightIconClick(event): void {\r\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-ctrl-sel\"],\r\n    [\r\n        \"expandedClass\",\r\n        \"o-ctrl-sel--expanded\",\r\n        null,\r\n        computed(() => props.expanded),\r\n    ],\r\n    [\r\n        \"rootVariantClass\",\r\n        \"o-ctrl-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n);\r\n\r\nconst selectClasses = defineClasses(\r\n    [\"selectClass\", \"o-sel\"],\r\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\r\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sel--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-sel--\",\r\n        computed(() => statusVariant.value || props.variant),\r\n        computed(() => !!statusVariant.value || !!props.variant),\r\n    ],\r\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\r\n    [\r\n        \"iconLeftSpaceClass\",\r\n        \"o-sel-iconspace-left\",\r\n        null,\r\n        computed(() => !!props.icon),\r\n    ],\r\n    [\r\n        \"iconRightSpaceClass\",\r\n        \"o-sel-iconspace-right\",\r\n        null,\r\n        computed(() => !!props.iconRight),\r\n    ],\r\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\r\n    [\r\n        \"arrowClass\",\r\n        \"o-sel-arrow\",\r\n        null,\r\n        computed(() => !props.iconRight && !props.multiple),\r\n    ],\r\n);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"select\">\r\n        <o-icon\r\n            v-if=\"icon\"\r\n            :class=\"iconLeftClasses\"\r\n            :clickable=\"iconClickable\"\r\n            :icon=\"icon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            @click=\"iconClick('icon-click', $event)\" />\r\n\r\n        <select\r\n            v-bind=\"$attrs\"\r\n            ref=\"selectRef\"\r\n            v-model=\"vmodel\"\r\n            data-oruga-input=\"select\"\r\n            :class=\"selectClasses\"\r\n            :autocomplete=\"autocomplete\"\r\n            :multiple=\"multiple\"\r\n            :size=\"nativeSize\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\">\r\n            <template v-if=\"placeholder || $slots.placeholder\">\r\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\r\n                    <!--\r\n                        @slot Override the placeholder\r\n                    -->\r\n                    <slot name=\"placeholder\">\r\n                        {{ placeholder }}\r\n                    </slot>\r\n                </option>\r\n            </template>\r\n\r\n            <!--\r\n                @slot Override the options, default is options prop\r\n            -->\r\n            <slot>\r\n                <option\r\n                    v-for=\"option in selectOptions\"\r\n                    :key=\"option.key\"\r\n                    :value=\"option.value\"\r\n                    v-bind=\"option.attrs\">\r\n                    {{ option.label }}\r\n                </option>\r\n            </slot>\r\n        </select>\r\n\r\n        <o-icon\r\n            v-if=\"hasIconRight\"\r\n            :class=\"iconRightClasses\"\r\n            :clickable=\"iconRightClickable\"\r\n            :icon=\"rightIcon\"\r\n            :pack=\"iconPack\"\r\n            :size=\"size\"\r\n            :variant=\"rightIconVariant\"\r\n            both\r\n            @click=\"rightIconClick\" />\r\n    </div>\r\n</template>\r\n"],"names":["ref","useInputHandler","injectField","useVModelBinding","computed","onMounted","watch","uuid","nextTick","defineClasses"],"mappings":"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"}