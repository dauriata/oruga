{"version":3,"file":"loading.mjs","sources":["../../src/components/loading/LoadingProgrammatic.ts","../../src/components/loading/index.ts"],"sourcesContent":["import { createVNode, render } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport type { LoadingProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        loading: typeof LoadingProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Loading>();\r\n\r\ntype LoadingProgrammaticProps = Readonly<\r\n    string | (LoadingProps & OrugaOptions[\"loading\"])\r\n>;\r\n\r\nconst LoadingProgrammatic = {\r\n    open(params: LoadingProgrammaticProps): ProgrammaticExpose {\r\n        const componentParams =\r\n            typeof params === \"string\"\r\n                ? {\r\n                      label: params,\r\n                  }\r\n                : { ...params };\r\n\r\n        let slot;\r\n        if (Array.isArray(componentParams.label)) {\r\n            slot = componentParams.label;\r\n            delete componentParams.label;\r\n        }\r\n\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, componentParams);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const defaultSlot = () => slot;\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Loading, propsData, defaultSlot);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default LoadingProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Loading from \"./Loading.vue\";\r\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export loading specific types */\r\nexport type { LoadingProps } from \"./types\";\r\n\r\n/** export loading plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Loading);\r\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export loading components */\r\nexport { LoadingProgrammatic, Loading as OLoading };\r\n"],"names":["Loading","LoadingProgrammatic"],"mappings":";;;;;;AAgBA,MAAM,YAAY,IAAI;AAMtB,MAAM,sBAAsB;AAAA,EACxB,KAAK,QAAsD;AACjD,UAAA,kBACF,OAAO,WAAW,WACZ;AAAA,MACI,OAAO;AAAA,IAAA,IAEX,EAAE,GAAG;AAEX,QAAA;AACJ,QAAI,MAAM,QAAQ,gBAAgB,KAAK,GAAG;AACtC,aAAO,gBAAgB;AACvB,aAAO,gBAAgB;AAAA,IAC3B;AAEA,UAAM,gBAAgB;AAAA,MAClB,cAAc,EAAE,UAAU;AAAA,MAC1B,QAAQ;AAAA;AAAA,IAAA;AAGN,UAAA,YAAY,MAAM,eAAe,eAAe;AACtD,cAAU,UAAU,IAAI,QAAQ,CAAC,IAAI,OAAO;AACxC,gBAAU,aAAa,UAAU;AACjC,gBAAU,aAAa,SAAS;AAAA,IAAA,CACnC;AAED,UAAM,cAAc,MAAM;AAE1B,UAAM,MAAM;AACZ,UAAM,QAAQ,YAAYA,WAAS,WAAW,WAAW;AACzD,UAAM,aAAa,IAAI;AACvB,WAAO,OAAO,SAAS,cAAc,KAAK,CAAC;AAG3C,WAAO,MAAM,UAAU;AAAA,EAC3B;AAAA,EACA,YAAY,MAAmB;AACjB,cAAA,KAAK,CAAC,UAAU,MAAM,QAAQ,MAAM,GAAG,IAAI,CAAC;AAAA,EAC1D;AACJ;AAEA,MAAA,wBAAe;ACjDf,MAAe,QAAA;AAAA,EACX,QAAQ,KAAU;AACd,sBAAkB,KAAKA,SAAO;AACA,kCAAA,KAAK,WAAWC,qBAAmB;AAAA,EACrE;AACJ;"}