{"version":3,"file":"Button.vue_vue_type_script_setup_true_lang-D7iwVqb3.mjs","sources":["../../src/components/button/Button.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * The classic button, in different colors, sizes, and states\r\n * @displayName Button\r\n * @style _button.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OButton\",\r\n    configField: \"button\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /**\r\n     * Button tag name\r\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\r\n     */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\r\n    },\r\n    /**\r\n     * Color variant of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"button.variant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"button.size\"),\r\n    },\r\n    /** Button label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"button.iconPack\", undefined),\r\n    },\r\n    /** Icon name to show on the left */\r\n    iconLeft: { type: String, default: undefined },\r\n    /** Icon name to show on the right */\r\n    iconRight: { type: String, default: undefined },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"button.rounded\", false),\r\n    },\r\n    /** Button will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Button will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Enable outlined style */\r\n    outlined: { type: Boolean, default: false },\r\n    /** Enable loading style */\r\n    loading: { type: Boolean, default: false },\r\n    /** Enable inverted style */\r\n    inverted: { type: Boolean, default: false },\r\n    /** Button type, like native */\r\n    nativeType: {\r\n        type: String,\r\n        default: \"button\",\r\n        validator: (value: string) =>\r\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\r\n    },\r\n    /** Accessibility Role attribute to be passed to the button. */\r\n    role: {\r\n        type: String,\r\n        default: () => getOption(\"button.role\", \"button\"),\r\n    },\r\n    /**\r\n     * This is used internally\r\n     * @ignore\r\n     */\r\n    iconBoth: { type: Boolean, default: false },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button elements wrapper */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when outlined */\r\n    outlinedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button with loading */\r\n    loadingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when inverted */\r\n    invertedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon */\r\n    iconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the left */\r\n    iconLeftClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button icon on the right */\r\n    iconRightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the button variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst computedTag = computed(() =>\r\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\r\n        ? \"button\"\r\n        : props.tag,\r\n);\r\n\r\nconst computedNativeType = computed(() =>\r\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\r\n);\r\n\r\nconst computedDisabled = computed(() => (props.disabled ? true : null));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-btn\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-btn--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined\",\r\n        null,\r\n        computed(() => props.outlined && !props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted\",\r\n        null,\r\n        computed(() => props.inverted && !props.variant),\r\n    ],\r\n    [\r\n        \"outlinedClass\",\r\n        \"o-btn--outlined-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.outlined && !!props.variant),\r\n    ],\r\n    [\r\n        \"invertedClass\",\r\n        \"o-btn--inverted-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.inverted && !!props.variant),\r\n    ],\r\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\r\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\r\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\r\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\r\n\r\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\r\n\r\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\r\n\r\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\r\n</script>\r\n\r\n<template>\r\n    <component\r\n        :is=\"computedTag\"\r\n        :disabled=\"computedDisabled\"\r\n        :type=\"computedNativeType\"\r\n        :class=\"rootClasses\"\r\n        :role=\"role\"\r\n        data-oruga=\"button\">\r\n        <span :class=\"wrapperClasses\">\r\n            <o-icon\r\n                v-if=\"iconLeft\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconLeft\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\r\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\r\n                <!--\r\n                    @slot Override the label, default is label prop \r\n                -->\r\n                <slot>{{ label }}</slot>\r\n            </span>\r\n            <o-icon\r\n                v-if=\"iconRight\"\r\n                :pack=\"iconPack\"\r\n                :icon=\"iconRight\"\r\n                :size=\"size\"\r\n                :both=\"iconBoth\"\r\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\r\n        </span>\r\n    </component>\r\n</template>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,UAAM,QAAQ;AAmJd,UAAM,cAAc;AAAA,MAAS,MACzB,OAAO,MAAM,aAAa,eAAe,MAAM,aAAa,QACtD,WACA,MAAM;AAAA,IAAA;AAGhB,UAAM,qBAAqB;AAAA,MAAS,MAChC,MAAM,QAAQ,YAAY,MAAM,QAAQ,UAAU,MAAM,aAAa;AAAA,IAAA;AAGzE,UAAM,mBAAmB,SAAS,MAAO,MAAM,WAAW,OAAO,IAAK;AAItE,UAAM,cAAc;AAAA,MAChB,CAAC,aAAa,OAAO;AAAA,MACrB;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,IAAI;AAAA,QACzB,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,OAAO;AAAA,QAC5B,SAAS,MAAM,CAAC,CAAC,MAAM,OAAO;AAAA,MAClC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,YAAY,CAAC,MAAM,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,YAAY,CAAC,MAAM,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,OAAO;AAAA,QAC5B,SAAS,MAAM,MAAM,YAAY,CAAC,CAAC,MAAM,OAAO;AAAA,MACpD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,OAAO;AAAA,QAC5B,SAAS,MAAM,MAAM,YAAY,CAAC,CAAC,MAAM,OAAO;AAAA,MACpD;AAAA,MACA,CAAC,iBAAiB,mBAAmB,MAAM,SAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,MACzE,CAAC,gBAAgB,kBAAkB,MAAM,SAAS,MAAM,MAAM,OAAO,CAAC;AAAA,MACtE,CAAC,gBAAgB,kBAAkB,MAAM,SAAS,MAAM,MAAM,OAAO,CAAC;AAAA,MACtE,CAAC,iBAAiB,mBAAmB,MAAM,SAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,IAAA;AAG7E,UAAM,eAAe,cAAc,CAAC,cAAc,cAAc,CAAC;AAEjE,UAAM,cAAc,cAAc,CAAC,aAAa,aAAa,CAAC;AAE9D,UAAM,kBAAkB,cAAc,CAAC,iBAAiB,kBAAkB,CAAC;AAE3E,UAAM,mBAAmB,cAAc,CAAC,kBAAkB,mBAAmB,CAAC;AAE9E,UAAM,iBAAiB,cAAc,CAAC,gBAAgB,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}