{"version":3,"file":"switch.mjs","sources":["../../src/components/switch/Switch.vue","../../src/components/switch/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useInputHandler,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Switch between two opposing states\r\n * @displayName Switch\r\n * @style _switch.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSwitch\",\r\n    configField: \"switch\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number, Boolean], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.variant\"),\r\n    },\r\n    /**\r\n     * Color of the switch when is passive\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    passiveVariant: {\r\n        type: String,\r\n        default: () => getOption(\"switch.passiveVariant\"),\r\n    },\r\n    /**\r\n     * Size of the control\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"switch.size\"),\r\n    },\r\n    /** Input label, unnecessary when default slot is used */\r\n    label: { type: String, default: undefined },\r\n    /** Same as native value */\r\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native required */\r\n    required: { type: Boolean, default: false },\r\n    /** Name attribute on native checkbox */\r\n    name: { type: String, default: undefined },\r\n    /** Overrides the returned value when it's checked */\r\n    trueValue: { type: [String, Number, Boolean], default: true },\r\n    /** Overrides the returned value when it's not checked */\r\n    falseValue: { type: [String, Number, Boolean], default: false },\r\n    /** Rounded style */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Label position */\r\n    position: { type: String, default: \"right\" },\r\n    /** Accessibility label to establish relationship between the switch and control label' */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Same as native autocomplete options to use in HTML5 validation */\r\n    autocomplete: {\r\n        type: String,\r\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\r\n    },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when switch is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check */\r\n    switchClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the outer switch check when checked */\r\n    switchCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the inner switch check */\r\n    switchCheckClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch when rounded */\r\n    roundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch passive variant */\r\n    passiveVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of switch label position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Root class of the native input checkbox */\r\n    inputClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the native input element when checked */\r\n    inputCheckedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch label */\r\n    labelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the switch variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number | boolean} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number | boolean): void;\r\n    /**\r\n     * on input change event\r\n     * @param value {string, number, boolean} input value\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"input\", value: string | number | boolean, event: Event): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref();\r\n\r\n// use form input functionalities\r\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\r\n    inputRef,\r\n    emits,\r\n    props,\r\n);\r\n\r\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\r\n    passive: true,\r\n});\r\n\r\nconst isChecked = computed(\r\n    () =>\r\n        vmodel.value === props.trueValue ||\r\n        (Array.isArray(vmodel.value) &&\r\n            vmodel.value.includes(props.nativeValue)),\r\n);\r\n\r\nfunction onInput(event: Event): void {\r\n    emits(\"input\", vmodel.value, event);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-switch\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-switch--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"passiveVariantClass\",\r\n        \"o-switch--\",\r\n        computed(() => props.passiveVariant + \"-passive\"),\r\n        computed(() => !!props.passiveVariant),\r\n    ],\r\n);\r\n\r\nconst inputClasses = defineClasses(\r\n    [\"inputClass\", \"o-switch__input\"],\r\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\r\n);\r\n\r\nconst switchClasses = defineClasses(\r\n    [\"switchClass\", \"o-switch__check\"],\r\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst switchCheckClasses = defineClasses(\r\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\r\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\r\n);\r\n\r\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label\r\n        ref=\"label\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"switch\"\r\n        role=\"switch\"\r\n        :aria-checked=\"isChecked\"\r\n        @click=\"setFocus\"\r\n        @keydown.prevent.enter=\"setFocus\">\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            v-model=\"vmodel\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            data-oruga-input=\"switch\"\r\n            :class=\"inputClasses\"\r\n            :disabled=\"disabled\"\r\n            :required=\"required\"\r\n            :name=\"name\"\r\n            :autocomplete=\"autocomplete\"\r\n            :value=\"nativeValue\"\r\n            :true-value=\"trueValue\"\r\n            :false-value=\"falseValue\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @click.stop\r\n            @blur=\"onBlur\"\r\n            @focus=\"onFocus\"\r\n            @invalid=\"onInvalid\"\r\n            @input=\"onInput\" />\r\n\r\n        <span :class=\"switchClasses\">\r\n            <span :class=\"switchCheckClasses\"></span>\r\n        </span>\r\n\r\n        <span\r\n            v-if=\"label || $slots.default\"\r\n            :id=\"ariaLabelledby\"\r\n            :class=\"labelClasses\">\r\n            <!--\r\n                @slot Override the label, default is label prop \r\n            -->\r\n            <slot>{{ label }}</slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Switch from \"./Switch.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export switch plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Switch);\r\n    },\r\n} as Plugin;\r\n\r\n/** export switch components */\r\nexport { Switch as OSwitch };\r\n"],"names":["Switch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,UAAM,QAAQ;AA+Hd,UAAM,QAAQ;AA6Bd,UAAM,WAAW;AAGjB,UAAM,EAAE,QAAQ,SAAS,WAAW,SAAa,IAAA;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAGE,UAAA,SAAS,iBAA4C,OAAO,OAAO;AAAA,MACrE,SAAS;AAAA,IAAA,CACZ;AAED,UAAM,YAAY;AAAA,MACd,MACI,OAAO,UAAU,MAAM,aACtB,MAAM,QAAQ,OAAO,KAAK,KACvB,OAAO,MAAM,SAAS,MAAM,WAAW;AAAA,IAAA;AAGnD,aAAS,QAAQ,OAAoB;AAC3B,YAAA,SAAS,OAAO,OAAO,KAAK;AAAA,IACtC;AAIA,UAAM,cAAc;AAAA,MAChB,CAAC,aAAa,UAAU;AAAA,MACxB;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,IAAI;AAAA,QACzB,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,MACjC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,OAAO;AAAA,QAC5B,SAAS,MAAM,CAAC,CAAC,MAAM,OAAO;AAAA,MAClC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,QAC7B,SAAS,MAAM,CAAC,CAAC,MAAM,QAAQ;AAAA,MACnC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,iBAAiB,UAAU;AAAA,QAChD,SAAS,MAAM,CAAC,CAAC,MAAM,cAAc;AAAA,MACzC;AAAA,IAAA;AAGJ,UAAM,eAAe;AAAA,MACjB,CAAC,cAAc,iBAAiB;AAAA,MAChC,CAAC,qBAAqB,4BAA4B,MAAM,SAAS;AAAA,IAAA;AAGrE,UAAM,gBAAgB;AAAA,MAClB,CAAC,eAAe,iBAAiB;AAAA,MACjC,CAAC,sBAAsB,4BAA4B,MAAM,SAAS;AAAA,MAClE,CAAC,gBAAgB,qBAAqB,MAAM,SAAS,MAAM,MAAM,OAAO,CAAC;AAAA,IAAA;AAG7E,UAAM,qBAAqB;AAAA,MACvB,CAAC,oBAAoB,wBAAwB;AAAA,MAC7C,CAAC,gBAAgB,qBAAqB,MAAM,SAAS,MAAM,MAAM,OAAO,CAAC;AAAA,IAAA;AAG7E,UAAM,eAAe,cAAc,CAAC,cAAc,iBAAiB,CAAC;AAKvD,aAAA,EAAE,OAAO,SAAA,CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/PhC,MAAe,QAAA;AAAA,EACX,QAAQ,KAAU;AACd,sBAAkB,KAAKA,SAAM;AAAA,EACjC;AACJ;"}