{"version":3,"file":"carousel.mjs","sources":["../../src/components/carousel/Carousel.vue","../../src/components/carousel/CarouselItem.vue","../../src/components/carousel/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {\r\n    computed,\r\n    watch,\r\n    onBeforeUnmount,\r\n    onMounted,\r\n    ref,\r\n    nextTick,\r\n    readonly,\r\n    toRaw,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    useVModelBinding,\r\n    useEventListener,\r\n    useProviderParent,\r\n} from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow for cycling images in confined spaces\r\n * @displayName Carousel\r\n * @requires ./CarouselItem.vue\r\n * @style _carousel.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarousel\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: Number, default: 0 },\r\n    /** Enable drag mode */\r\n    dragable: { type: Boolean, default: true },\r\n    /** Timer interval for `autoplay` */\r\n    interval: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.interval\", 3500),\r\n    },\r\n    /** Move item automaticalls after `interval` */\r\n    autoplay: { type: Boolean, default: false },\r\n    /** Pause autoplay on hover */\r\n    pauseHover: { type: Boolean, default: false },\r\n    /** Repeat from the beginning after reaching the end */\r\n    repeat: { type: Boolean, default: false },\r\n    /** Show an overlay */\r\n    overlay: { type: Boolean, default: false },\r\n    /** Enable indicators */\r\n    indicators: { type: Boolean, default: true },\r\n    /** Place indicators inside the carousel */\r\n    indicatorInside: { type: Boolean, default: false },\r\n    /**\r\n     * Indicator interaction mode\r\n     * @values click, hover\r\n     */\r\n    indicatorMode: {\r\n        type: String,\r\n        default: \"click\",\r\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\r\n    },\r\n    /** Position of the indicator - depends on used theme */\r\n    indicatorPosition: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\r\n    },\r\n    /** Style of the indicator - depends on used theme */\r\n    indicatorStyle: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\r\n    },\r\n    /** Number of items to show at once*/\r\n    itemsToShow: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToShow\", 1),\r\n    },\r\n    /** Number of items to switch at once */\r\n    itemsToList: {\r\n        type: Number,\r\n        default: () => getOption(\"carousel.itemsToList\", 1),\r\n    },\r\n    /** Show next / prev arrows */\r\n    arrows: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrows\", true),\r\n    },\r\n    /** Show next / prev arrows only on hover */\r\n    arrowsHover: {\r\n        type: Boolean,\r\n        default: () => getOption(\"carousel.arrowsHover\", true),\r\n    },\r\n    /**\r\n     * Icon pack to use\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPack\"),\r\n    },\r\n    /**\r\n     * Icon size\r\n     * @values small, medium, large\r\n     */\r\n    iconSize: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconSize\"),\r\n    },\r\n    /** Icon name for previous icon */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon name for next icon */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\r\n    },\r\n    /** Define these props for different screen sizes */\r\n    breakpoints: {\r\n        type: Object as PropType<Record<number, any>>,\r\n        default: () => ({}),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the root element in overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the wrapper element of carousel items */\r\n    wrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items */\r\n    itemsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider items on drag */\r\n    itemsDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of arrow elements */\r\n    arrowIconClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of prev arrow element */\r\n    arrowIconPrevClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of next arrow element */\r\n    arrowIconNextClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator link element */\r\n    indicatorClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element */\r\n    indicatorsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside */\r\n    indicatorsInsideClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicators wrapper element when inside and position */\r\n    indicatorsInsidePositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator item element */\r\n    indicatorItemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element when is active */\r\n    indicatorItemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of indicator element to separate different styles */\r\n    indicatorItemStyleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number): void;\r\n    /**\r\n     * on carousel scroll event\r\n     * @param value {number} scroll index\r\n     */\r\n    (e: \"scroll\", value: number): void;\r\n    /**\r\n     * on item click event\r\n     * @param event {event} native event\r\n     */\r\n    (e: \"click\", event: Event): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\n\r\nfunction restartTimer(): void {\r\n    pauseTimer();\r\n    startTimer();\r\n}\r\n\r\nconst provideData = computed<CarouselComponent>(() => ({\r\n    restartTimer,\r\n    itemWidth: itemWidth.value,\r\n    activeIndex: scrollIndex.value,\r\n    onClick: (event: Event): void => emits(\"click\", event),\r\n    setActive: (index: number): void => switchTo(index),\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\r\n\r\nconst activeIndex = useVModelBinding<number>(props, emits);\r\nconst scrollIndex = ref(props.modelValue);\r\n\r\nconst resizeObserver = ref(null);\r\nconst windowWidth = ref(0);\r\n\r\nconst refresh_ = ref(0);\r\n\r\n/** When v-model is changed switch to the new active item. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (value <= childItems.value.length - 1)\r\n            switchTo(value * settings.value.itemsToList, true);\r\n    },\r\n);\r\n\r\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\r\n\r\nonMounted(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) {\r\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\r\n            resizeObserver.value.observe(rootRef.value);\r\n        }\r\n        onResized();\r\n        startTimer();\r\n    }\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    if (isClient) {\r\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\r\n        dragEnd();\r\n        pauseTimer();\r\n    }\r\n});\r\n\r\n// add dom event handler\r\nif (isClient) {\r\n    useEventListener(\"resize\", onResized, window);\r\n    useEventListener(\"animationend\", onRefresh);\r\n    useEventListener(\"transitionend\", onRefresh);\r\n    useEventListener(\"transitionstart\", onRefresh);\r\n}\r\n\r\nfunction onResized(): void {\r\n    windowWidth.value = window.innerWidth;\r\n}\r\n\r\nfunction onRefresh(): void {\r\n    nextTick(() => refresh_.value++);\r\n}\r\n\r\nconst settings = computed<typeof props>(() => {\r\n    const breakpoints = Object.keys(props.breakpoints)\r\n        .map(Number)\r\n        .sort((a, b) => b - a);\r\n\r\n    const breakpoint = breakpoints.filter(\r\n        (breakpoint) => windowWidth.value >= breakpoint,\r\n    )[0];\r\n\r\n    const settings = toRaw(\r\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\r\n    );\r\n\r\n    // prevent empty values\r\n    if (!settings.itemsToList) settings.itemsToList = 1;\r\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\r\n    return readonly(settings);\r\n});\r\n\r\nconst itemWidth = computed(() => {\r\n    // Ensure component is mounted\r\n    if (!windowWidth.value) return 0;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\r\n\r\n    const rect = rootRef.value.getBoundingClientRect();\r\n    return rect.width / settings.value.itemsToShow;\r\n});\r\n\r\nconst translation = computed(\r\n    () =>\r\n        -bound(\r\n            delta.value + scrollIndex.value * itemWidth.value,\r\n            0,\r\n            (childItems.value.length - settings.value.itemsToShow) *\r\n                itemWidth.value,\r\n        ),\r\n);\r\n\r\nconst total = computed(() => childItems.value.length);\r\n\r\nconst indicatorCount = computed(() =>\r\n    Math.ceil(total.value / settings.value.itemsToList),\r\n);\r\n\r\nconst indicatorIndex = computed(() =>\r\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\r\n);\r\n\r\nconst hasArrows = computed(\r\n    () =>\r\n        (settings.value.arrowsHover && isHovered.value) ||\r\n        !settings.value.arrowsHover,\r\n);\r\n\r\nconst hasPrev = computed(\r\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\r\n);\r\n\r\nfunction onPrev(): void {\r\n    switchTo(scrollIndex.value - settings.value.itemsToList);\r\n}\r\n\r\nconst hasNext = computed(\r\n    () =>\r\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\r\n        hasArrows.value,\r\n);\r\n\r\nfunction onNext(): void {\r\n    switchTo(scrollIndex.value + settings.value.itemsToList);\r\n}\r\n\r\nfunction switchTo(index: number, onlyMove?: boolean): void {\r\n    if (settings.value.repeat) index = mod(index, total.value);\r\n\r\n    index = bound(index, 0, total.value);\r\n    scrollIndex.value = index;\r\n    emits(\"scroll\", indicatorIndex.value);\r\n\r\n    if (!onlyMove)\r\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\r\n}\r\n\r\nfunction onModeChange(trigger: string, index: number): void {\r\n    if (props.indicatorMode === trigger)\r\n        switchTo(index * settings.value.itemsToList);\r\n}\r\n\r\n// --- Autoplay Feature ---\r\n\r\nconst isHovered = ref(false);\r\nconst isPaused = ref(false);\r\nconst timer = ref(null);\r\n\r\nfunction onMouseEnter(): void {\r\n    isHovered.value = true;\r\n    checkPause();\r\n}\r\n\r\nfunction onMouseLeave(): void {\r\n    isHovered.value = false;\r\n    startTimer();\r\n}\r\n\r\n/** When autoplay is changed, start or pause timer accordingly */\r\nwatch(\r\n    () => props.autoplay,\r\n    (status) => {\r\n        if (status) startTimer();\r\n        else pauseTimer();\r\n    },\r\n);\r\n\r\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\r\nwatch(\r\n    () => props.repeat,\r\n    (status) => {\r\n        if (status) startTimer();\r\n    },\r\n);\r\n\r\nfunction startTimer(): void {\r\n    if (!props.autoplay || timer.value) return;\r\n    isPaused.value = false;\r\n    timer.value = setInterval(() => {\r\n        if (!props.repeat && !hasNext.value) pauseTimer();\r\n        else onNext();\r\n    }, props.interval);\r\n}\r\n\r\nfunction pauseTimer(): void {\r\n    isPaused.value = true;\r\n    if (timer.value) {\r\n        clearInterval(timer.value);\r\n        timer.value = null;\r\n    }\r\n}\r\n\r\nfunction checkPause(): void {\r\n    if (props.pauseHover && props.autoplay) pauseTimer();\r\n}\r\n\r\n// --- Drag & Drop Feature ---\r\n\r\nconst isTouch = ref(false);\r\nconst dragX = ref();\r\nconst hold = ref(0);\r\nconst delta = ref(0);\r\n\r\nconst isDragging = computed(() => isDefined(dragX.value));\r\n\r\n/** handle drag event */\r\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\r\n    if (\r\n        isDragging.value ||\r\n        !settings.value.dragable ||\r\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\r\n    )\r\n        return;\r\n    hold.value = Date.now();\r\n    isTouch.value = !!(event as TouchEvent).touches;\r\n    dragX.value = isTouch.value\r\n        ? (event as TouchEvent).touches[0].clientX\r\n        : (event as MouseEvent).clientX;\r\n    if (isTouch.value) {\r\n        pauseTimer();\r\n    }\r\n    if (isClient) {\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.addEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\nfunction dragMove(event: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value) return;\r\n    const dragEndX = (event as TouchEvent).touches\r\n        ? (\r\n              (event as TouchEvent).changedTouches[0] ||\r\n              (event as TouchEvent).touches[0]\r\n          ).clientX\r\n        : (event as MouseEvent).clientX;\r\n    delta.value = dragX.value - dragEndX;\r\n    // prevent event if not touch event\r\n    if (!(event as TouchEvent).touches) event.preventDefault();\r\n}\r\n\r\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\r\n    if (!isDragging.value && !hold.value) return;\r\n    if (hold.value) {\r\n        const signCheck = sign(delta.value);\r\n        const results = Math.round(\r\n            Math.abs(delta.value / itemWidth.value) + 0.15,\r\n        ); // Hack\r\n        switchTo(scrollIndex.value + signCheck * results);\r\n    }\r\n    delta.value = 0;\r\n    dragX.value = undefined;\r\n    if ((event as TouchEvent)?.touches) startTimer();\r\n\r\n    if (isClient) {\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchmove\" : \"mousemove\",\r\n            dragMove,\r\n        );\r\n        window.removeEventListener(\r\n            isTouch.value ? \"touchend\" : \"mouseup\",\r\n            dragEnd,\r\n        );\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-car\"],\r\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\r\n);\r\n\r\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\r\n\r\nconst itemsClasses = defineClasses(\r\n    [\"itemsClass\", \"o-car__items\"],\r\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\r\n);\r\n\r\nconst arrowIconClasses = defineClasses([\r\n    \"arrowIconClass\",\r\n    \"o-car__arrow__icon\",\r\n]);\r\n\r\nconst arrowIconPrevClasses = defineClasses([\r\n    \"arrowIconPrevClass\",\r\n    \"o-car__arrow__icon-prev\",\r\n]);\r\n\r\nconst arrowIconNextClasses = defineClasses([\r\n    \"arrowIconNextClass\",\r\n    \"o-car__arrow__icon-next\",\r\n]);\r\n\r\nfunction indicatorItemClasses(index): ClassBind[] {\r\n    return defineClasses(\r\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\r\n        [\r\n            \"indicatorItemActiveClass\",\r\n            \"o-car__indicator__item--active\",\r\n            null,\r\n            indicatorIndex.value === index,\r\n        ],\r\n        [\r\n            \"indicatorItemStyleClass\",\r\n            \"o-car__indicator__item--\",\r\n            props.indicatorStyle,\r\n            !!props.indicatorStyle,\r\n        ],\r\n    ).value;\r\n}\r\n\r\nconst indicatorsClasses = defineClasses(\r\n    [\"indicatorsClass\", \"o-car__indicators\"],\r\n    [\r\n        \"indicatorsInsideClass\",\r\n        \"o-car__indicators--inside\",\r\n        null,\r\n        computed(() => !!props.indicatorInside),\r\n    ],\r\n    [\r\n        \"indicatorsInsidePositionClass\",\r\n        \"o-car__indicators--inside--\",\r\n        computed(() => props.indicatorPosition),\r\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\r\n    ],\r\n);\r\n\r\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        ref=\"rootRef\"\r\n        :class=\"rootClasses\"\r\n        data-oruga=\"carousel\"\r\n        role=\"region\"\r\n        @mouseover=\"onMouseEnter\"\r\n        @mouseleave=\"onMouseLeave\"\r\n        @focus=\"onMouseEnter\"\r\n        @blur=\"onMouseLeave\"\r\n        @keydown.left=\"onPrev\"\r\n        @keydown.right=\"onNext\">\r\n        <div :class=\"wrapperClasses\">\r\n            <div\r\n                :class=\"itemsClasses\"\r\n                :style=\"'transform:translateX(' + translation + 'px)'\"\r\n                tabindex=\"0\"\r\n                role=\"group\"\r\n                draggable=\"true\"\r\n                aria-roledescription=\"carousel\"\r\n                @mousedown=\"onDragStart\"\r\n                @touchstart=\"onDragStart\">\r\n                <!--\r\n                    @slot Display carousel item\r\n                -->\r\n                <slot />\r\n            </div>\r\n            <!--\r\n                @slot Override the arrows\r\n                @binding {boolean} has-prev has prev arrow button \r\n                @binding {boolean} has-next has next arrow button \r\n                @binding {(): void} prev switch to prev item function\r\n                @binding {(): void} next switch to next item function\r\n            -->\r\n            <slot\r\n                name=\"arrow\"\r\n                :has-prev=\"hasPrev\"\r\n                :prev=\"onPrev\"\r\n                :has-next=\"hasNext\"\r\n                :next=\"onNext\">\r\n                <template v-if=\"arrows\">\r\n                    <o-icon\r\n                        v-show=\"hasPrev\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconPrev\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onPrev\"\r\n                        @keydown.enter=\"onPrev\" />\r\n                    <o-icon\r\n                        v-show=\"hasNext\"\r\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\r\n                        :pack=\"iconPack\"\r\n                        :icon=\"iconNext\"\r\n                        :size=\"iconSize\"\r\n                        both\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @click=\"onNext\"\r\n                        @keydown.enter=\"onNext\" />\r\n                </template>\r\n            </slot>\r\n        </div>\r\n\r\n        <!--\r\n            @slot Override the indicators\r\n            @binding {number} active active index \r\n            @binding {(idx: number): void} switch-to switch to item function\r\n            @binding {number} indicator-index current indicator index\r\n        -->\r\n        <slot\r\n            :active=\"activeIndex\"\r\n            :switch-to=\"switchTo\"\r\n            :indicator-index=\"indicatorIndex\"\r\n            name=\"indicators\">\r\n            <template v-if=\"childItems.length\">\r\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\r\n                    <div\r\n                        v-for=\"(_, index) in indicatorCount\"\r\n                        :key=\"index\"\r\n                        :class=\"indicatorClasses\"\r\n                        role=\"button\"\r\n                        tabindex=\"0\"\r\n                        @focus=\"onModeChange('hover', index)\"\r\n                        @mouseover=\"onModeChange('hover', index)\"\r\n                        @click=\"onModeChange('click', index)\"\r\n                        @keypress.enter=\"onModeChange('click', index)\">\r\n                        <!--\r\n                            @slot Override the indicator elements\r\n                            @binding {index} index indicator index \r\n                        -->\r\n                        <slot :index=\"index\" name=\"indicator\">\r\n                            <span :class=\"indicatorItemClasses(index)\" />\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </slot>\r\n        <template v-if=\"overlay\">\r\n            <!-- @slot Overlay element -->\r\n            <slot name=\"overlay\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { CarouselComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A Slideshow item used by the carousel\r\n * @displayName Carousel Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OCarouselItem\",\r\n    configField: \"carousel\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Make item clickable */\r\n    clickable: { type: Boolean, default: false },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of carousel item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is active */\r\n    itemActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of carousel item when is clickable */\r\n    itemClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<CarouselComponent>();\r\n\r\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\r\n\r\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\r\n\r\nfunction onClick(event: Event): void {\r\n    if (isActive.value) parent.value.onClick(event);\r\n    if (props.clickable) parent.value.setActive(item.value.index);\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-car__item\"],\r\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\r\n    [\r\n        \"itemClickableClass\",\r\n        \"o-car__item--clickable\",\r\n        null,\r\n        computed(() => props.clickable),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"itemClasses\"\r\n        :style=\"itemStyle\"\r\n        :data-id=\"`carousel-${item.identifier}`\"\r\n        data-oruga=\"carousel-item\"\r\n        :role=\"ariaRole\"\r\n        aria-roledescription=\"item\"\r\n        :aria-selected=\"isActive\"\r\n        @click=\"onClick\"\r\n        @keypress.enter=\"onClick\">\r\n        <!--\r\n            @slot Default content\r\n        -->\r\n        <slot />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Carousel from \"./Carousel.vue\";\r\nimport CarouselItem from \"./CarouselItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export carousel plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Carousel);\r\n        registerComponent(app, CarouselItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export carousel components */\r\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\r\n"],"names":["index","breakpoint","settings","Carousel","CarouselItem"],"mappings":"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"}