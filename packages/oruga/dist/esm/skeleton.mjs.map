{"version":3,"file":"skeleton.mjs","sources":["../../src/components/skeleton/Skeleton.vue","../../src/components/skeleton/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { toCssDimension } from \"@/utils/helpers\";\r\nimport { defineClasses } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A placeholder for content to load\r\n * @displayName Skeleton\r\n * @style _skeleton.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSkeleton\",\r\n    configField: \"skeleton\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Show or hide loader\t */\r\n    active: { type: Boolean, default: true },\r\n    /** Show a loading animation */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.animated\", true),\r\n    },\r\n    /** Custom width */\r\n    width: { type: [Number, String], default: undefined },\r\n    /** Custom height */\r\n    height: { type: [Number, String], default: undefined },\r\n    /** Show a circle shape */\r\n    circle: { type: Boolean, default: false },\r\n    /** Enable rounded style */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"skeleton.rounded\", true),\r\n    },\r\n    /** Number of shapes to display */\r\n    count: { type: Number, default: 1 },\r\n    /**\r\n     * Size of skeleton\r\n     * @values small, medium, large\r\n     */\r\n    size: { type: String, default: undefined },\r\n    /**\r\n     * Skeleton position in relation to the element\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\r\n        default: \"left\",\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton animation */\r\n    animationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton item rounded */\r\n    itemRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the skeleton size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst itemStyle = computed(() => ({\r\n    height: toCssDimension(props.height),\r\n    width: toCssDimension(props.width),\r\n    borderRadius: props.circle ? \"50%\" : null,\r\n}));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-sklt\"],\r\n    [\r\n        \"positionClass\",\r\n        \"o-sklt--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n);\r\n\r\nconst itemClasses = defineClasses(\r\n    [\"itemClass\", \"o-sklt__item\"],\r\n    [\r\n        \"itemRoundedClass\",\r\n        \"o-sklt__item--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n    [\r\n        \"animationClass\",\r\n        \"o-sklt__item--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-sklt__item--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\r\n        <div\r\n            v-for=\"i in count\"\r\n            :key=\"i\"\r\n            :class=\"itemClasses\"\r\n            :style=\"itemStyle\" />\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Skeleton from \"./Skeleton.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export skeleton plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Skeleton);\r\n    },\r\n} as Plugin;\r\n\r\n/** export skeleton components */\r\nexport { Skeleton as OSkeleton };\r\n"],"names":["Skeleton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,UAAM,QAAQ;AAuER,UAAA,YAAY,SAAS,OAAO;AAAA,MAC9B,QAAQ,eAAe,MAAM,MAAM;AAAA,MACnC,OAAO,eAAe,MAAM,KAAK;AAAA,MACjC,cAAc,MAAM,SAAS,QAAQ;AAAA,IACvC,EAAA;AAIF,UAAM,cAAc;AAAA,MAChB,CAAC,aAAa,QAAQ;AAAA,MACtB;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,QAC7B,SAAS,MAAM,CAAC,CAAC,MAAM,QAAQ;AAAA,MACnC;AAAA,IAAA;AAGJ,UAAM,cAAc;AAAA,MAChB,CAAC,aAAa,cAAc;AAAA,MAC5B;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,OAAO;AAAA,MAChC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,QAAQ;AAAA,MACjC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA,SAAS,MAAM,MAAM,IAAI;AAAA,QACzB,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,IAAA;;;;;;;;;;;;;;;;;;ACzHJ,MAAe,QAAA;AAAA,EACX,QAAQ,KAAU;AACd,sBAAkB,KAAKA,SAAQ;AAAA,EACnC;AACJ;"}