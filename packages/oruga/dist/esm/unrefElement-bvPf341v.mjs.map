{"version":3,"file":"unrefElement-bvPf341v.mjs","sources":["../../src/composables/unrefElement.ts"],"sourcesContent":["import {\r\n    toValue,\r\n    type ComponentPublicInstance,\r\n    type MaybeRefOrGetter,\r\n    type MaybeRef,\r\n    type Component,\r\n} from \"vue\";\r\n\r\nexport type MaybeElement =\r\n    | Element\r\n    | Document\r\n    | Window\r\n    | HTMLElement\r\n    | SVGElement\r\n    | Component\r\n    | ComponentPublicInstance\r\n    | undefined\r\n    | null;\r\n\r\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\r\n    T extends ComponentPublicInstance\r\n        ? Exclude<MaybeElement, ComponentPublicInstance>\r\n        : T extends Component\r\n          ? HTMLElement\r\n          : T | undefined;\r\n\r\n/**\r\n * Get the dom element of a ref of element or Vue component instance\r\n *\r\n * @param elRef\r\n */\r\nexport function unrefElement<T extends MaybeElement>(\r\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\r\n): UnRefElementReturn<T> {\r\n    const plain = toValue(elRef);\r\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\r\n}\r\n"],"names":[],"mappings":";;AA+BO,SAAS,aACZ,OACqB;AACf,QAAA,QAAQ,QAAQ,KAAK;AAC3B,UAAQ,+BAAmC,QAAO;AACtD;"}