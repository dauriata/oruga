{"version":3,"file":"upload.mjs","sources":["../../src/components/upload/Upload.vue","../../src/components/upload/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { File } from \"@/utils/ssr\";\r\nimport { uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useInputHandler } from \"@/composables\";\r\n\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * Upload one or more files\r\n * @displayName Upload\r\n * @style _upload.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OUpload\",\r\n    configField: \"upload\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Object, Array] as PropType<\r\n            object | typeof File | object[] | (typeof File)[]\r\n        >,\r\n        default: undefined,\r\n    },\r\n    /** Same as native, also push new item to v-model instead of replacing */\r\n    multiple: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"upload.variant\"),\r\n    },\r\n    /** Same as native disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Same as native accept */\r\n    accept: { type: String, default: undefined },\r\n    /** Accepts drag & drop and change its style */\r\n    dragDrop: { type: Boolean, default: false },\r\n    /** Upload will be expanded (full-width) */\r\n    expanded: { type: Boolean, default: false },\r\n    /** Replace last chosen files every time (like native file input element) */\r\n    native: { type: Boolean, default: true },\r\n    /** Accessibility label to establish relationship between the input and control label */\r\n    ariaLabelledby: { type: String, default: () => uuid() },\r\n    /** Enable html 5 native validation */\r\n    useHtml5Validation: {\r\n        type: Boolean,\r\n        default: () => getOption(\"useHtml5Validation\", true),\r\n    },\r\n    /** The message which is shown when a validation error occurs */\r\n    validationMessage: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when draggable */\r\n    draggableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when expanded */\r\n    expandedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Upload when hovered */\r\n    hoveredClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\r\n    /**\r\n     * on input focus event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"focus\", event: Event): void;\r\n    /**\r\n     * on input blur event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"blur\", event: Event): void;\r\n    /**\r\n     * on input invalid event\r\n     * @param event {Event} native event\r\n     */\r\n    (e: \"invalid\", event: Event): void;\r\n}>();\r\n\r\nconst inputRef = ref<HTMLInputElement>();\r\n\r\nconst vmodel = defineModel<object | object[] | File | File[]>();\r\n\r\n// use form input functionality\r\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\r\n    useInputHandler(inputRef, emits, props);\r\n\r\nconst dragDropFocus = ref(false);\r\n\r\n/**\r\n * When v-model is changed:\r\n * 1. Reset interna input file value\r\n * 2. If it's invalid, validate again.\r\n */\r\nwatch(vmodel, (value) => {\r\n    if (!value || (Array.isArray(value) && value.length === 0))\r\n        inputRef.value.value = null;\r\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\r\n});\r\n\r\n/**\r\n * Listen change event on input type 'file',\r\n * emit 'input' event and validate\r\n */\r\nfunction onFileChange(event: Event | DragEvent): void {\r\n    if (props.disabled) return;\r\n    if (props.dragDrop) updateDragDropFocus(false);\r\n    const value =\r\n        (event.target as HTMLInputElement).files ||\r\n        (event as DragEvent).dataTransfer.files;\r\n    // no file selected\r\n    if (value.length === 0) {\r\n        if (!vmodel.value) return;\r\n        if (props.native) vmodel.value = null;\r\n    }\r\n\r\n    // multiple upload\r\n    if (props.multiple) {\r\n        // always new values if native or undefined local\r\n        const values =\r\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\r\n                ? []\r\n                : [...vmodel.value];\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const file = value[i];\r\n            // add file when type is valid\r\n            if (checkType(file)) values.push(file);\r\n        }\r\n        vmodel.value = values;\r\n    }\r\n    // single uplaod\r\n    else {\r\n        // only one element in case drag drop mode and isn't multiple\r\n        if (props.dragDrop && value.length !== 1) return;\r\n        else {\r\n            const file = value[0];\r\n            // add file when type is valid\r\n            if (checkType(file)) vmodel.value = file;\r\n            // else clear input\r\n            else if (vmodel.value) {\r\n                vmodel.value = null;\r\n                clearInput();\r\n            } else {\r\n                // Force input back to empty state and recheck validity\r\n                clearInput();\r\n                checkHtml5Validity();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!props.dragDrop) checkHtml5Validity();\r\n}\r\n\r\n/** Reset file input value */\r\nfunction clearInput(): void {\r\n    inputRef.value.value = null;\r\n}\r\n\r\n/** Listen drag-drop to update internal variable */\r\nfunction updateDragDropFocus(focus: boolean): void {\r\n    if (!props.disabled) dragDropFocus.value = focus;\r\n}\r\n\r\n/** Check mime type of file s*/\r\nfunction checkType(file: File): boolean {\r\n    if (!props.accept) return true;\r\n    const types = props.accept.split(\",\");\r\n    if (types.length === 0) return true;\r\n    for (let i = 0; i < types.length; i++) {\r\n        const type = types[i].trim();\r\n        if (type) {\r\n            if (type.substring(0, 1) === \".\") {\r\n                const extension = file.name.toLowerCase().slice(-type.length);\r\n                if (extension === type.toLowerCase()) return true;\r\n            } else {\r\n                // check mime type\r\n                if (file.type.match(type)) return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onClick(event: Event): void {\r\n    if (props.disabled) return;\r\n\r\n    // click input if not drag and drop is used\r\n    if (!props.dragDrop) {\r\n        event.preventDefault();\r\n        inputRef.value.click();\r\n    }\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-upl\"],\r\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\r\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\r\n);\r\n\r\nconst draggableClasses = defineClasses(\r\n    [\"draggableClass\", \"o-upl__draggable\"],\r\n    [\r\n        \"hoveredClass\",\r\n        \"o-upl__draggable--hovered\",\r\n        null,\r\n        computed(() => !props.variant && dragDropFocus.value),\r\n    ],\r\n    [\r\n        \"variantClass\",\r\n        \"o-upl__draggable--hovered-\",\r\n        computed(() => props.variant),\r\n        computed(() => props.variant && dragDropFocus.value),\r\n    ],\r\n);\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ focus: setFocus });\r\n</script>\r\n\r\n<template>\r\n    <label :id=\"ariaLabelledby\" :class=\"rootClasses\" data-oruga=\"upload\">\r\n        <template v-if=\"!dragDrop\">\r\n            <!--\r\n                @slot Default content\r\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\r\n            -->\r\n            <slot :onclick=\"onClick\" />\r\n        </template>\r\n\r\n        <div\r\n            v-else\r\n            :class=\"draggableClasses\"\r\n            role=\"button\"\r\n            tabindex=\"0\"\r\n            @mouseenter=\"updateDragDropFocus(true)\"\r\n            @mouseleave=\"updateDragDropFocus(false)\"\r\n            @dragover.prevent=\"updateDragDropFocus(true)\"\r\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\r\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\r\n            @drop.prevent=\"onFileChange\">\r\n            <!--\r\n                @slot Default content\r\n            -->\r\n            <slot />\r\n        </div>\r\n\r\n        <input\r\n            v-bind=\"$attrs\"\r\n            ref=\"inputRef\"\r\n            type=\"file\"\r\n            data-oruga-input=\"file\"\r\n            :multiple=\"multiple\"\r\n            :accept=\"accept\"\r\n            :disabled=\"disabled\"\r\n            :aria-labelledby=\"ariaLabelledby\"\r\n            @change=\"onFileChange\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\" />\r\n    </label>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Upload from \"./Upload.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export upload plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Upload);\r\n    },\r\n} as Plugin;\r\n\r\n/** export upload components */\r\nexport { Upload as OUpload };\r\n"],"names":["_useModel","Upload"],"mappings":"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"}