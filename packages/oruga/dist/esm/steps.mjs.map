{"version":3,"file":"steps.mjs","sources":["../../src/components/steps/Steps.vue","../../src/components/steps/StepItem.vue","../../src/components/steps/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OButton from \"../button/Button.vue\";\r\nimport OIcon from \"../icon/Icon.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isDefined } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\r\n\r\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\r\nimport type { ComponentClass, ClassBind } from \"@/types\";\r\n\r\n/**\r\n * Responsive horizontal process steps\r\n * @displayName Steps\r\n * @requires ./StepItem.vue\r\n * @style _steps.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSteps\",\r\n    configField: \"steps\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Color of the control\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"steps.variant\"),\r\n    },\r\n    /**\r\n     * Tab size\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"steps.size\"),\r\n    },\r\n    /** Show tab in vertical layout */\r\n    vertical: { type: Boolean, default: false },\r\n    /**\r\n     * Position of the tab\r\n     * @values left, centered, right\r\n     */\r\n    position: {\r\n        type: String,\r\n        default: undefined,\r\n        validator: (value: string) =>\r\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\r\n    },\r\n    /**\r\n     * Icon pack to use for the navigation\r\n     * @values mdi, fa, fas and any other custom icon pack\r\n     */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconPrev: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\r\n    },\r\n    /** Icon to use for navigation button */\r\n    iconNext: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\r\n    },\r\n    /**\r\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\r\n     */\r\n    hasNavigation: { type: Boolean, default: true },\r\n    /** Step navigation is animated */\r\n    animated: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animated\", true),\r\n    },\r\n    /**\r\n     * Transition animation name\r\n     * @values [next, prev], [right, left, down, up]\r\n     */\r\n    animation: {\r\n        type: Array as PropType<Array<string>>,\r\n        default: () =>\r\n            getOption(\"tabs.animation\", [\r\n                \"slide-next\",\r\n                \"slide-prev\",\r\n                \"slide-down\",\r\n                \"slide-up\",\r\n            ]),\r\n        validator: (value: Array<string>) =>\r\n            value.length === 2 || value.length === 4,\r\n    },\r\n    /** Apply animation on the initial render */\r\n    animateInitially: {\r\n        type: Boolean,\r\n        default: () => getOption(\"steps.animateInitially\", false),\r\n    },\r\n    /**\r\n     * Position of the marker label\r\n     * @values bottom, right, left\r\n     */\r\n    labelPosition: {\r\n        type: String,\r\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\r\n        validator: (value: string) =>\r\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\r\n    },\r\n    /** Rounded step markers */\r\n    rounded: { type: Boolean, default: true },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"steps.mobileBreakpoint\"),\r\n    },\r\n    /** Accessibility next button aria label */\r\n    ariaNextLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaNextLabel\"),\r\n    },\r\n    /** Accessibility previous button aria label  */\r\n    ariaPreviousLabel: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Size of the steps */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the tooltip trigger */\r\n    verticalClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component when is vertical and its position changes */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the steps container */\r\n    stepsClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of Steps component when animation gets triggered */\r\n    animatedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps markers trigger when are rounded */\r\n    stepMarkerRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component dividers */\r\n    stepDividerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component marker */\r\n    stepMarkerClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content */\r\n    stepContentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component content when transition is happening */\r\n    stepContentTransitioningClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component navigation element */\r\n    stepNavigationClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link */\r\n    stepLinkClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Steps component link when clickable */\r\n    stepLinkClickableClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label */\r\n    stepLinkLabelClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the Step component link label when positioned */\r\n    stepLinkLabelPositionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of steps component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {string | number} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: string | number): void;\r\n    /**\r\n     * on tab change event\r\n     * @param value {string | number} new tab value\r\n     * @param value {string | number} old tab value\r\n     */\r\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\r\n}>();\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst rootRef = ref();\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<StepsComponent>(() => ({\r\n    activeValue: vmodel.value,\r\n    vertical: props.vertical,\r\n    animated: props.animated,\r\n    animation: props.animation,\r\n    animateInitially: props.animateInitially,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\r\n    data: provideData,\r\n});\r\n\r\nconst items = computed<StepItem[]>(() =>\r\n    sortedItems.value.map((column) => ({\r\n        index: column.index,\r\n        identifier: column.identifier,\r\n        ...toValue(column.data),\r\n    })),\r\n);\r\n\r\nconst vmodel = defineModel<string | number>();\r\n\r\n/** When v-model is changed set the new active tab. */\r\nwatch(\r\n    () => props.modelValue,\r\n    (value) => {\r\n        if (vmodel.value !== value) performAction(value);\r\n    },\r\n);\r\n\r\nconst activeItem = computed(() =>\r\n    isDefined(vmodel.value)\r\n        ? items.value.find((item) => item.value === vmodel.value) ||\r\n          items.value[0]\r\n        : items.value[0],\r\n);\r\n\r\nconst isTransitioning = computed(() =>\r\n    items.value.some((item) => item.isTransitioning),\r\n);\r\n\r\n/** Check if previous button is available. */\r\nconst hasPrev = computed(() => !!prevItem.value);\r\n\r\n/** Check if next button is available. */\r\nconst hasNext = computed(() => !!nextItem.value);\r\n\r\n/** Retrieves the previous visible item */\r\nconst prevItem = computed(() => {\r\n    if (!activeItem.value) return null;\r\n\r\n    let prevItem = null;\r\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\r\n        if (items.value[idx].visible) {\r\n            prevItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return prevItem;\r\n});\r\n\r\n/** Retrieves the next visible item */\r\nconst nextItem = computed(() => {\r\n    let nextItem = null;\r\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\r\n    for (; idx < items.value.length; idx++) {\r\n        if (items.value[idx].visible) {\r\n            nextItem = items.value[idx];\r\n            break;\r\n        }\r\n    }\r\n    return nextItem;\r\n});\r\n\r\n/**\r\n * Return if the step should be clickable or not.\r\n */\r\nfunction isItemClickable(item: StepItem): boolean {\r\n    if (item.clickable === undefined)\r\n        return item.index < activeItem.value?.index;\r\n    return item.clickable;\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction prev(): void {\r\n    if (hasPrev.value) itemClick(prevItem.value);\r\n}\r\n\r\n/** Previous button click listener. */\r\nfunction next(): void {\r\n    if (hasNext.value) itemClick(nextItem.value);\r\n}\r\n\r\n/** Item click listener, emit input event and change active child. */\r\nfunction itemClick(item: StepItem): void {\r\n    if (vmodel.value !== item.value) performAction(item.value);\r\n}\r\n\r\n/** Activate next child and deactivate prev child */\r\nfunction performAction(newId: number | string): void {\r\n    const oldId = activeItem.value.value;\r\n    const oldItem = activeItem.value;\r\n    const newItem =\r\n        items.value.find((item) => item.value === newId) || items.value[0];\r\n\r\n    if (oldItem && newItem) {\r\n        oldItem.deactivate(newItem.index);\r\n        newItem.activate(oldItem.index);\r\n    }\r\n\r\n    nextTick(() => {\r\n        vmodel.value = newId;\r\n        emits(\"change\", newId, oldId);\r\n    });\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-steps__wrapper\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-steps--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"verticalClass\",\r\n        \"o-steps__wrapper-vertical\",\r\n        null,\r\n        computed(() => props.vertical),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-steps__wrapper-position-\",\r\n        computed(() => props.position),\r\n        computed(() => props.position && props.vertical),\r\n    ],\r\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\r\n);\r\n\r\nconst wrapperClasses = defineClasses(\r\n    [\"stepsClass\", \"o-steps\"],\r\n    [\r\n        \"animatedClass\",\r\n        \"o-steps--animated\",\r\n        null,\r\n        computed(() => props.animated),\r\n    ],\r\n);\r\n\r\nconst stepDividerClasses = defineClasses([\r\n    \"stepDividerClass\",\r\n    \"o-steps__divider\",\r\n]);\r\n\r\nconst stepMarkerClasses = defineClasses(\r\n    [\"stepMarkerClass\", \"o-steps__marker\"],\r\n    [\r\n        \"stepMarkerRoundedClass\",\r\n        \"o-steps__marker--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst stepContentClasses = defineClasses(\r\n    [\"stepContentClass\", \"o-steps__content\"],\r\n    [\r\n        \"stepContentTransitioningClass\",\r\n        \"o-steps__content-transitioning\",\r\n        null,\r\n        isTransitioning,\r\n    ],\r\n);\r\n\r\nconst stepNavigationClasses = defineClasses([\r\n    \"stepNavigationClass\",\r\n    \"o-steps__navigation\",\r\n]);\r\n\r\nconst stepLinkLabelClasses = defineClasses([\r\n    \"stepLinkLabelClass\",\r\n    \"o-steps__title\",\r\n]);\r\n\r\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"stepLinkClass\", \"o-steps__link\"],\r\n        [\r\n            \"stepLinkLabelPositionClass\",\r\n            \"o-steps__link-label-\",\r\n            props.labelPosition,\r\n            !!props.labelPosition,\r\n        ],\r\n        [\r\n            \"stepLinkClickableClass\",\r\n            \"o-steps__link-clickable\",\r\n            null,\r\n            isItemClickable(childItem),\r\n        ],\r\n    );\r\n\r\n    return classes.value;\r\n}\r\n\r\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\r\n    const classes = defineClasses(\r\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\r\n        [\r\n            \"itemHeaderVariantClass\",\r\n            \"o-steps__nav-item--\",\r\n            childItem.variant || props.variant,\r\n            !!childItem.variant || !!props.variant,\r\n        ],\r\n        [\r\n            \"itemHeaderActiveClass\",\r\n            \"o-steps__nav-item-active\",\r\n            null,\r\n            childItem.value === activeItem.value.value,\r\n        ],\r\n        [\r\n            \"itemHeaderPreviousClass\",\r\n            \"o-steps__nav-item-previous\",\r\n            null,\r\n            activeItem.value.index > childItem.index,\r\n        ],\r\n    );\r\n\r\n    const headerClass = { [childItem.headerClass || \"\"]: true };\r\n    return [headerClass, ...classes.value];\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\r\n        <ol :class=\"wrapperClasses\">\r\n            <li\r\n                v-for=\"(childItem, index) in items\"\r\n                v-show=\"childItem.visible\"\r\n                :key=\"childItem.value\"\r\n                :aria-current=\"\r\n                    childItem.value === activeItem.value ? 'step' : undefined\r\n                \"\r\n                :class=\"itemClasses(childItem)\">\r\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\r\n\r\n                <component\r\n                    :is=\"childItem.tag\"\r\n                    role=\"button\"\r\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\r\n                    :class=\"stepLinkClasses(childItem)\"\r\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\r\n                    @keydown.enter=\"\r\n                        isItemClickable(childItem) && itemClick(childItem)\r\n                    \">\r\n                    <div :class=\"stepMarkerClasses\">\r\n                        <o-icon\r\n                            v-if=\"childItem.icon\"\r\n                            :icon=\"childItem.icon\"\r\n                            :pack=\"childItem.iconPack\"\r\n                            :size=\"size\" />\r\n                        <span v-else-if=\"childItem.step\">\r\n                            {{ childItem.step }}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div :class=\"stepLinkLabelClasses\">\r\n                        {{ childItem.label }}\r\n                    </div>\r\n                </component>\r\n            </li>\r\n        </ol>\r\n\r\n        <section :class=\"stepContentClasses\">\r\n            <!--\r\n                @slot Place step items here\r\n            -->\r\n            <slot />\r\n        </section>\r\n\r\n        <!--\r\n            @slot Override step navigation\r\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\r\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\r\n        -->\r\n        <slot\r\n            name=\"navigation\"\r\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\r\n            :next=\"{ disabled: !hasNext, action: next }\">\r\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconPrev\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasPrev\"\r\n                    :aria-label=\"ariaPreviousLabel\"\r\n                    @click.prevent=\"prev\" />\r\n\r\n                <o-button\r\n                    role=\"button\"\r\n                    :icon-left=\"iconNext\"\r\n                    :icon-pack=\"iconPack\"\r\n                    icon-both\r\n                    :disabled=\"!hasNext\"\r\n                    :aria-label=\"ariaNextLabel\"\r\n                    @click.prevent=\"next\" />\r\n            </nav>\r\n        </slot>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, useSlots, type PropType } from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isEqual, uuid } from \"@/utils/helpers\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { StepsComponent, StepItemComponent } from \"./types\";\r\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\r\n\r\n/**\r\n * @displayName Step Item\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OStepItem\",\r\n    configField: \"steps\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Item value (it will be used as v-model of wrapper component) */\r\n    value: { type: [String, Number], default: () => uuid() },\r\n    /** Item label */\r\n    label: { type: String, default: undefined },\r\n    /** Step marker content (when there is no icon) */\r\n    step: { type: [String, Number], default: undefined },\r\n    /**\r\n     * Default style for the step.\r\n     * This will override parent type.\r\n     * Could be used to set a completed step to \"success\" for example\r\n     */\r\n    variant: { type: String, default: undefined },\r\n    /**\r\n     * Item can be used directly to navigate.\r\n     * If undefined, previous steps are clickable while the others are not\r\n     */\r\n    clickable: { type: Boolean, default: undefined },\r\n    /** Show/hide item */\r\n    visible: { type: Boolean, default: true },\r\n    /** Icon on the left */\r\n    icon: {\r\n        type: String,\r\n        default: () => getOption(\"steps.icon\"),\r\n    },\r\n    /** Icon pack */\r\n    iconPack: {\r\n        type: String,\r\n        default: () => getOption(\"steps.iconPack\"),\r\n    },\r\n    /** Step item tag name */\r\n    tag: {\r\n        type: [String, Object, Function] as PropType<DynamicComponent>,\r\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\r\n    },\r\n    /** Role attribute to be passed to the div wrapper for better accessibility */\r\n    ariaRole: {\r\n        type: String,\r\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\r\n    },\r\n    /** Sets a class to the item header */\r\n    headerClass: { type: String, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the content item */\r\n    itemClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item */\r\n    itemHeaderClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item when active */\r\n    itemHeaderActiveClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item behind the active one */\r\n    itemHeaderPreviousClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the nav item with variant (default value by parent steps component) */\r\n    itemHeaderVariantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /** on tab item activate event */\r\n    (e: \"activate\"): void;\r\n    /** on tab item deactivate event */\r\n    (e: \"deactivate\"): void;\r\n}>();\r\n\r\nconst slots = useSlots();\r\n\r\nconst providedData = computed<StepItemComponent>(() => ({\r\n    ...props,\r\n    $slots: slots,\r\n    isTransitioning: isTransitioning.value,\r\n    activate,\r\n    deactivate,\r\n}));\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent, item } = useProviderChild<StepsComponent>({\r\n    data: providedData,\r\n});\r\n\r\nconst transitionName = ref();\r\n\r\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\r\n\r\nconst isTransitioning = ref(false);\r\n\r\nconst nextAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\nconst prevAnimation = computed(() => {\r\n    const idx =\r\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\r\n    return parent.value.animation[idx];\r\n});\r\n\r\n/** Activate element, alter animation name based on the index. */\r\nfunction activate(oldIndex: number): void {\r\n    transitionName.value =\r\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"activate\");\r\n}\r\n\r\n/** Deactivate element, alter animation name based on the index. */\r\nfunction deactivate(newIndex: number): void {\r\n    transitionName.value =\r\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\r\n\r\n    // emit event\r\n    emits(\"deactivate\");\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isTransitioning.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\r\n</script>\r\n\r\n<template>\r\n    <Transition\r\n        :css=\"parent.animated\"\r\n        :name=\"transitionName\"\r\n        :appear=\"parent.animateInitially\"\r\n        @after-enter=\"afterEnter\"\r\n        @before-leave=\"beforeLeave\">\r\n        <div\r\n            v-show=\"isActive && visible\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"elementClasses\"\r\n            :data-id=\"`steps-${item.identifier}`\"\r\n            data-oruga=\"steps-item\"\r\n            :tabindex=\"isActive ? 0 : -1\"\r\n            :role=\"ariaRole\"\r\n            aria-roledescription=\"item\">\r\n            <!-- \r\n                @slot Step item content\r\n            -->\r\n            <slot />\r\n        </div>\r\n    </Transition>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Steps from \"./Steps.vue\";\r\nimport StepItem from \"./StepItem.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export steps specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export steps plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Steps);\r\n        registerComponent(app, StepItem);\r\n    },\r\n} as Plugin;\r\n\r\n/** export steps components */\r\nexport { Steps as OSteps, StepItem as OStepItem };\r\n"],"names":["_useModel","prevItem","nextItem","Steps","StepItem"],"mappings":"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"}