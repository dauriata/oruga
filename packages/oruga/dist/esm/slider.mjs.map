{"version":3,"file":"slider.mjs","sources":["../../src/components/slider/SliderThumb.vue","../../src/components/slider/SliderTick.vue","../../src/components/slider/Slider.vue","../../src/components/slider/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { computed, ref, type PropType } from \"vue\";\r\n\r\nimport OTooltip from \"../tooltip/Tooltip.vue\";\r\n\r\nimport { isClient } from \"@/utils/ssr\";\r\n\r\nimport type { SliderProps } from \"./types\";\r\nimport type { ClassBind } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Thumb\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderThumb\",\r\n    configField: \"slider\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** parent slider component props  */\r\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\r\n    modelValue: { type: Number, required: true },\r\n    sliderSize: { type: Function as PropType<() => number>, required: true },\r\n    thumbWrapperClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n    thumbClasses: {\r\n        type: Array as PropType<ClassBind[]>,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /** on value change event */\r\n    (e: \"change\"): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\r\nconst slider = computed<SliderProps>(() => props.sliderProps);\r\n\r\nconst isFocused = ref(false);\r\nconst dragging = ref(false);\r\nconst startX = ref(0);\r\nconst startPosition = ref(0);\r\nconst newPosition = ref(null);\r\nconst oldValue = ref(props.modelValue);\r\n\r\nconst tooltip = computed(() => slider.value.tooltip);\r\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\r\nconst disabled = computed(() => slider.value.disabled);\r\nconst max = computed(() => slider.value.max);\r\nconst min = computed(() => slider.value.min);\r\nconst step = computed(() => slider.value.step);\r\nconst indicator = computed(() => slider.value.indicator);\r\n\r\nconst ariaLabel = computed(() =>\r\n    Array.isArray(slider.value.ariaLabel)\r\n        ? slider.value.ariaLabel[0]\r\n        : slider.value.ariaLabel,\r\n);\r\n\r\nconst precision = computed(() => {\r\n    const precisions = [min.value, max.value, step.value].map((item) => {\r\n        const decimal = (\"\" + item).split(\".\")[1];\r\n        return decimal ? decimal.length : 0;\r\n    });\r\n    return Math.max(...precisions);\r\n});\r\n\r\nconst computedTooltipVariant = computed(() =>\r\n    slider.value.tooltipVariant\r\n        ? slider.value.tooltipVariant\r\n        : slider.value.variant,\r\n);\r\n\r\nconst currentPosition = computed(\r\n    () =>\r\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\r\n);\r\n\r\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\r\n\r\nconst formattedValue = computed(() => {\r\n    if (typeof slider.value.customFormatter !== \"undefined\")\r\n        return slider.value.customFormatter(props.modelValue);\r\n\r\n    if (slider.value.format === \"percent\")\r\n        return new Intl.NumberFormat(slider.value.locale, {\r\n            style: \"percent\",\r\n        }).format((props.modelValue - min.value) / (max.value - min.value));\r\n\r\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\r\n});\r\n\r\nfunction onFocus(): void {\r\n    isFocused.value = true;\r\n}\r\n\r\nfunction onBlur(): void {\r\n    isFocused.value = false;\r\n}\r\n\r\nfunction onButtonDown(event): void {\r\n    if (disabled.value) return;\r\n    event.preventDefault();\r\n    onDragStart(event);\r\n\r\n    if (isClient) {\r\n        document.addEventListener(\"mousemove\", onDragging);\r\n        document.addEventListener(\"touchmove\", onDragging);\r\n        document.addEventListener(\"mouseup\", onDragEnd);\r\n        document.addEventListener(\"touchend\", onDragEnd);\r\n        document.addEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction onLeftKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) -\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onRightKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value =\r\n        parseFloat(currentPosition.value) +\r\n        (step.value / (max.value - min.value)) * 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onHomeKeyDown(): void {\r\n    if (disabled.value || props.modelValue === min.value) return;\r\n    newPosition.value = 0;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onEndKeyDown(): void {\r\n    if (disabled.value || props.modelValue === max.value) return;\r\n    newPosition.value = 100;\r\n    setPosition(newPosition.value);\r\n    emits(\"change\");\r\n}\r\n\r\nfunction onDragStart(event): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\r\n\r\n    startX.value = event.clientX;\r\n    startPosition.value = parseFloat(currentPosition.value);\r\n    newPosition.value = startPosition.value;\r\n}\r\n\r\nfunction onDragging(event): void {\r\n    if (dragging.value) {\r\n        if (event.type === \"touchmove\")\r\n            event.clientX = event.touches[0].clientX;\r\n\r\n        const diff =\r\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\r\n        newPosition.value = startPosition.value + diff;\r\n        setPosition(newPosition.value);\r\n    }\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.modelValue !== oldValue.value) emits(\"change\");\r\n\r\n    setPosition(newPosition.value);\r\n    if (isClient) {\r\n        document.removeEventListener(\"mousemove\", onDragging);\r\n        document.removeEventListener(\"touchmove\", onDragging);\r\n        document.removeEventListener(\"mouseup\", onDragEnd);\r\n        document.removeEventListener(\"touchend\", onDragEnd);\r\n        document.removeEventListener(\"contextmenu\", onDragEnd);\r\n    }\r\n}\r\n\r\nfunction setPosition(percent: number): void {\r\n    if (percent === null || isNaN(percent)) return;\r\n    if (percent < 0) percent = 0;\r\n    else if (percent > 100) percent = 100;\r\n\r\n    const stepLength = 100 / ((max.value - min.value) / step.value);\r\n    const steps = Math.round(percent / stepLength);\r\n    let value =\r\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\r\n    value = parseFloat(value.toFixed(precision.value));\r\n    emits(\"update:modelValue\", value);\r\n\r\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\r\n}\r\n\r\ndefineExpose({ setPosition });\r\n</script>\r\n\r\n<template>\r\n    <div\r\n        :class=\"thumbWrapperClasses\"\r\n        :style=\"wrapperStyle\"\r\n        data-oruga=\"slider-thumb\">\r\n        <o-tooltip\r\n            :label=\"formattedValue\"\r\n            :variant=\"computedTooltipVariant\"\r\n            :disabled=\"disabled || !tooltip\"\r\n            :always=\"tooltipAlways || dragging || isFocused\">\r\n            <div\r\n                v-bind=\"$attrs\"\r\n                :class=\"thumbClasses\"\r\n                :tabindex=\"disabled ? null : 0\"\r\n                role=\"slider\"\r\n                :aria-label=\"ariaLabel\"\r\n                :aria-valuenow=\"modelValue\"\r\n                :aria-valuemin=\"min\"\r\n                :aria-valuemax=\"max\"\r\n                :aria-disabled=\"disabled\"\r\n                aria-orientation=\"horizontal\"\r\n                @mousedown=\"onButtonDown\"\r\n                @touchstart=\"onButtonDown\"\r\n                @focus=\"onFocus\"\r\n                @blur=\"onBlur\"\r\n                @keydown.left.prevent=\"onLeftKeyDown\"\r\n                @keydown.right.prevent=\"onRightKeyDown\"\r\n                @keydown.down.prevent=\"onLeftKeyDown\"\r\n                @keydown.up.prevent=\"onRightKeyDown\"\r\n                @keydown.home.prevent=\"onHomeKeyDown\"\r\n                @keydown.end.prevent=\"onEndKeyDown\">\r\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\r\n            </div>\r\n        </o-tooltip>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, type PropType } from \"vue\";\r\nimport { defineClasses, useProviderChild } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * @displayName Slider Tick\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSliderTick\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Value of single tick */\r\n    value: { type: Number, required: true },\r\n    /** Tick label */\r\n    label: { type: String, default: undefined },\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\n// Inject functionalities and data from the parent carousel component\r\nconst { parent } = useProviderChild<SliderComponent>();\r\n\r\nconst position = computed(() => {\r\n    const pos =\r\n        ((props.value - parent.value.min) /\r\n            (parent.value.max - parent.value.min)) *\r\n        100;\r\n    return pos >= 0 && pos <= 100 ? pos : 0;\r\n});\r\n\r\nconst hidden = computed(\r\n    () => props.value === parent.value.min || props.value === parent.value.max,\r\n);\r\n\r\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"tickClass\", \"o-slide__tick\"],\r\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\r\n);\r\n\r\nconst tickLabelClasses = defineClasses([\r\n    \"tickLabelClass\",\r\n    \"o-slide__tick-label\",\r\n]);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\r\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\r\n            <!-- \r\n                @slot Override tick content, default is label prop\r\n             -->\r\n            <slot> {{ label }} </slot>\r\n        </span>\r\n    </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, watch, type PropType } from \"vue\";\r\n\r\nimport OSliderThumb from \"./SliderThumb.vue\";\r\nimport OSliderTick from \"./SliderTick.vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { defineClasses, useProviderParent } from \"@/composables\";\r\n\r\nimport type { SliderComponent } from \"./types\";\r\nimport type { ComponentClass } from \"@/types\";\r\n\r\n/**\r\n * A slider to select a value or range from a given range\r\n * @displayName Slider\r\n * @requires ./SliderTick.vue\r\n * @style _slider.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSlider\",\r\n    configField: \"slider\",\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** @model */\r\n    modelValue: {\r\n        type: [Number, Array] as PropType<number | number[]>,\r\n        default: 0,\r\n    },\r\n    /** Minimum value */\r\n    min: { type: Number, default: 0 },\r\n    /** Maximum  value */\r\n    max: { type: Number, default: 100 },\r\n    /** Step interval of ticks */\r\n    step: { type: Number, default: 1 },\r\n    /**\r\n     * Color of the slider\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.variant\"),\r\n    },\r\n    /**\r\n     * Vertical size of slider\r\n     * @values small, medium, large\r\n     */\r\n    size: {\r\n        type: String,\r\n        default: () => getOption(\"slider.size\"),\r\n    },\r\n    /** Show tick marks */\r\n    ticks: { type: Boolean, default: false },\r\n    /** Show tooltip when thumb is being dragged */\r\n    tooltip: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.tooltip\", true),\r\n    },\r\n    /**\r\n     * Color of the tooltip\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    tooltipVariant: {\r\n        type: String,\r\n        default: () => getOption(\"slider.tooltipVariant\"),\r\n    },\r\n    /** Tooltip displays always */\r\n    tooltipAlways: { type: Boolean, default: false },\r\n    /** Rounded thumb */\r\n    rounded: {\r\n        type: Boolean,\r\n        default: () => getOption(\"slider.rounded\", false),\r\n    },\r\n    /** Slider will be disabled */\r\n    disabled: { type: Boolean, default: false },\r\n    /** Update v-model only when dragging is finished */\r\n    lazy: { type: Boolean, default: false },\r\n    /** Function to format the tooltip label for display */\r\n    customFormatter: { type: Function, default: undefined },\r\n    /** Increases slider size on focus */\r\n    biggerSliderFocus: { type: Boolean, default: false },\r\n    /** Show indicators */\r\n    indicator: { type: Boolean, default: false },\r\n    /**\r\n     * Define v-model format\r\n     * @values row, percent\r\n     */\r\n    format: {\r\n        type: String,\r\n        default: () => getOption(\"slider.format\", \"raw\"),\r\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\r\n    },\r\n    /** Date format locale */\r\n    locale: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"locale\"),\r\n    },\r\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\r\n    ariaLabel: {\r\n        type: [String, Array] as PropType<string | string[]>,\r\n        default: () => getOption(\"slider.ariaLabel\"),\r\n    },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the vertical slider size */\r\n    sizeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider track */\r\n    trackClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the filled part of the slider */\r\n    fillClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the slider is rounded */\r\n    thumbRoundedClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when the thumb gets dragged */\r\n    thumbDraggingClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider is disabled */\r\n    disabledClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb wrapper */\r\n    thumbWrapperClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the thumb */\r\n    thumbClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the slider variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of slider tick */\r\n    tickClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class when slider tick is hidden */\r\n    tickHiddenClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of tick label */\r\n    tickLabelClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class to display on the wrapper element when the slider is dragged */\r\n    thumbWrapperDraggingClass: {\r\n        type: [String, Function, Array] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * modelValue prop two-way binding\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"update:modelValue\", value: number | number[]): void;\r\n    /**\r\n     * on value change event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     */\r\n    (e: \"change\", value: number | number[]): void;\r\n    /**\r\n     * on dragging event\r\n     * @param value {number | number[]} updated modelValue prop\r\n     * */\r\n    (e: \"dragging\", value: number | number[]): void;\r\n    /** on drag start event */\r\n    (e: \"dragstart\"): void;\r\n    /** on drag end event */\r\n    (e: \"dragend\"): void;\r\n}>();\r\n\r\nfunction emitValue(event: any): void {\r\n    const val = isRange.value\r\n        ? [minValue.value, maxValue.value]\r\n        : valueStart.value || 0;\r\n    emits(event, val);\r\n}\r\n\r\n// Provided data is a computed ref to enjure reactivity.\r\nconst provideData = computed<SliderComponent>(() => ({\r\n    max: props.max,\r\n    min: props.min,\r\n}));\r\n\r\n/** Provide functionalities and data to child item components */\r\nuseProviderParent(undefined, { data: provideData });\r\n\r\nconst sliderRef = ref();\r\nconst thumbStartRef = ref();\r\nconst thumbEndRef = ref();\r\n\r\nconst valueStart = ref<number>(null);\r\nconst valueEnd = ref<number>(null);\r\nconst dragging = ref(false);\r\nconst isRange = ref(false);\r\n\r\nconst isThumbReversed = ref();\r\nconst isTrackClickDisabled = ref();\r\n\r\nsetValues(props.modelValue);\r\n\r\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\r\n\r\n/** When min, max or v-model is changed set the new active step. */\r\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\r\n    setValues(props.modelValue),\r\n);\r\n\r\nconst tickValues = computed(() => {\r\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\r\n    const result = [];\r\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n});\r\n\r\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\r\n\r\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\r\n\r\nconst barSize = computed(() =>\r\n    isRange.value\r\n        ? `${\r\n              (100 * (maxValue.value - minValue.value)) /\r\n              (props.max - props.min)\r\n          }%`\r\n        : `${\r\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\r\n          }%`,\r\n);\r\n\r\nconst barStart = computed(() =>\r\n    isRange.value\r\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\r\n        : \"0%\",\r\n);\r\n\r\nconst barStyle = computed(() => ({\r\n    width: barSize.value,\r\n    left: barStart.value,\r\n}));\r\n\r\nfunction setValues(newValue: number | number[]): void {\r\n    if (props.min > props.max) return;\r\n\r\n    if (Array.isArray(newValue)) {\r\n        isRange.value = true;\r\n        const smallValue =\r\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\r\n                ? props.min\r\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\r\n        const largeValue =\r\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\r\n                ? props.max\r\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\r\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\r\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\r\n    } else {\r\n        isRange.value = false;\r\n        valueStart.value = isNaN(newValue)\r\n            ? props.min\r\n            : Math.min(props.max, Math.max(props.min, newValue));\r\n        valueEnd.value = null;\r\n    }\r\n}\r\n\r\nfunction onInternalValueUpdate(): void {\r\n    if (isRange.value)\r\n        isThumbReversed.value = valueStart.value > valueEnd.value;\r\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\r\n    if (dragging.value) emitValue(\"dragging\");\r\n}\r\n\r\nfunction sliderSize(): number {\r\n    return sliderRef.value.getBoundingClientRect().width;\r\n}\r\n\r\nfunction onSliderClick(event: MouseEvent): void {\r\n    if (props.disabled || isTrackClickDisabled.value) return;\r\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\r\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\r\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\r\n    const diffFirst = Math.abs(targetValue - valueStart.value);\r\n    if (!isRange.value) {\r\n        if (diffFirst < props.step / 2) return;\r\n        thumbStartRef.value.setPosition(percent);\r\n    } else {\r\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\r\n        if (diffFirst <= diffSecond) {\r\n            if (diffFirst < props.step / 2) return;\r\n            thumbStartRef.value.setPosition(percent);\r\n        } else {\r\n            if (diffSecond < props.step / 2) return;\r\n            thumbEndRef.value.setPosition(percent);\r\n        }\r\n    }\r\n    emitValue(\"change\");\r\n}\r\n\r\nfunction onDragStart(): void {\r\n    dragging.value = true;\r\n    emits(\"dragstart\");\r\n}\r\n\r\nfunction onDragEnd(): void {\r\n    isTrackClickDisabled.value = true;\r\n    // avoid triggering onSliderClick after dragend\r\n    setTimeout(() => (isTrackClickDisabled.value = false));\r\n    dragging.value = false;\r\n    emits(\"dragend\");\r\n    if (props.lazy) emitValue(\"update:modelValue\");\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-slide\"],\r\n    [\r\n        \"sizeClass\",\r\n        \"o-slide--\",\r\n        computed(() => props.size),\r\n        computed(() => !!props.size),\r\n    ],\r\n    [\r\n        \"disabledClass\",\r\n        \"o-slide--disabled\",\r\n        null,\r\n        computed(() => props.disabled),\r\n    ],\r\n);\r\n\r\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\r\n\r\nconst fillClasses = defineClasses(\r\n    [\"fillClass\", \"o-slide__fill\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-slide__fill--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n);\r\n\r\nconst thumbClasses = defineClasses(\r\n    [\"thumbClass\", \"o-slide__thumb\"],\r\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\r\n    [\r\n        \"thumbRoundedClass\",\r\n        \"o-slide__thumb--rounded\",\r\n        null,\r\n        computed(() => props.rounded),\r\n    ],\r\n);\r\n\r\nconst thumbWrapperClasses = defineClasses(\r\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\r\n    [\r\n        \"thumbWrapperDraggingClass\",\r\n        \"o-slide__thumb-wrapper--dragging\",\r\n        null,\r\n        dragging,\r\n    ],\r\n);\r\n</script>\r\n\r\n<template>\r\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\r\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\r\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\r\n            <template v-if=\"ticks\">\r\n                <o-slider-tick\r\n                    v-for=\"(val, key) in tickValues\"\r\n                    :key=\"key\"\r\n                    :value=\"val\"\r\n                    :tick-class=\"tickClass\"\r\n                    :tick-hidden-class=\"tickHiddenClass\"\r\n                    :tick-label-class=\"tickLabelClass\" />\r\n            </template>\r\n\r\n            <!--\r\n                @slot Define additional slider ticks here\r\n             -->\r\n            <slot />\r\n\r\n            <o-slider-thumb\r\n                ref=\"thumbStartRef\"\r\n                v-model=\"valueStart\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n\r\n            <o-slider-thumb\r\n                v-if=\"isRange\"\r\n                ref=\"thumbEndRef\"\r\n                v-model=\"valueEnd\"\r\n                :slider-props=\"props\"\r\n                :slider-size=\"sliderSize\"\r\n                :thumb-classes=\"thumbClasses\"\r\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\r\n                @change=\"emitValue('change')\"\r\n                @dragstart=\"onDragStart\"\r\n                @dragend=\"onDragEnd\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Slider from \"./Slider.vue\";\r\nimport SliderTick from \"./SliderTick.vue\";\r\n\r\nimport { registerComponent } from \"@/utils/plugins\";\r\n\r\n/** export slider specific types */\r\nexport type * from \"./types\";\r\n\r\n/** export slider plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Slider);\r\n        registerComponent(app, SliderTick);\r\n    },\r\n} as Plugin;\r\n\r\n/** export slider components */\r\nexport { Slider as OSlider, SliderTick as OSliderTick };\r\n"],"names":["Slider","SliderTick"],"mappings":"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"}