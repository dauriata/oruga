{"version":3,"file":"sidebar.mjs","sources":["../../src/components/sidebar/Sidebar.vue","../../src/components/sidebar/SidebarProgrammatic.ts","../../src/components/sidebar/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {\r\n    ref,\r\n    computed,\r\n    watch,\r\n    onMounted,\r\n    onBeforeUnmount,\r\n    type Component,\r\n    type PropType,\r\n} from \"vue\";\r\n\r\nimport { getOption } from \"@/utils/config\";\r\nimport { isClient } from \"@/utils/ssr\";\r\nimport {\r\n    defineClasses,\r\n    getActiveClasses,\r\n    useClickOutside,\r\n    useMatchMedia,\r\n    useProgrammaticComponent,\r\n} from \"@/composables\";\r\n\r\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\r\n\r\n/**\r\n * A sidebar to use as left/right overlay or static\r\n * @displayName Sidebar\r\n * @style _sidebar.scss\r\n */\r\ndefineOptions({\r\n    isOruga: true,\r\n    name: \"OSidebar\",\r\n    configField: \"sidebar\",\r\n    inheritAttrs: false,\r\n});\r\n\r\nconst props = defineProps({\r\n    /** Override existing theme classes completely */\r\n    override: { type: Boolean, default: undefined },\r\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\r\n    active: { type: Boolean, default: false },\r\n    /**\r\n     * Color of the sidebar\r\n     * @values primary, info, success, warning, danger, and any other custom color\r\n     */\r\n    variant: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.variant\"),\r\n    },\r\n    /** Show an overlay like modal */\r\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\r\n    /** Display the Sidebear inline */\r\n    inline: { type: Boolean, default: false },\r\n    /**\r\n     * Sidebar position\r\n     * @values top, right, bottom, left\r\n     */\r\n    position: {\r\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\r\n        default: () => getOption(\"sidebar.position\", \"left\"),\r\n    },\r\n    /** Show sidebar in fullheight */\r\n    fullheight: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullheight\", false),\r\n    },\r\n    /** Show sidebar in fullwidth */\r\n    fullwidth: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.fullwidth\", false),\r\n    },\r\n    /** Show a small sidebar */\r\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\r\n    /**\r\n     * Custom layout on mobile\r\n     * @values fullwidth, reduced, hidden\r\n     */\r\n    mobile: {\r\n        type: String,\r\n        default: getOption(\"sidebar.mobile\"),\r\n        validator: (value: string) =>\r\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\r\n    },\r\n    /** Expand sidebar on hover when reduced or mobile is reduce */\r\n    expandOnHover: {\r\n        type: Boolean,\r\n        default: getOption(\"sidebar.expandOnHover\", false),\r\n    },\r\n    /** Custom animation (transition name) */\r\n    animation: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.animation\"),\r\n    },\r\n    /**\r\n     * Is Sidebar cancleable by pressing escape or clicking outside.\r\n     * @values escape, outside, true, false\r\n     */\r\n    cancelable: {\r\n        type: [Array, Boolean] as PropType<string[] | boolean>,\r\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\r\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\r\n    /** Callback function to call after close (programmatically close or user canceled) */\r\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\r\n    /**\r\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\r\n     * but will set body to position fixed, might break some layouts.\r\n     * @values keep, clip\r\n     */\r\n    scroll: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\r\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\r\n    },\r\n    /** Destroy sidebar on hide */\r\n    destroyOnHide: {\r\n        type: Boolean,\r\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\r\n    },\r\n    /** Mobile breakpoint as max-width value */\r\n    mobileBreakpoint: {\r\n        type: String,\r\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\r\n    },\r\n    /**\r\n     * Append the component to another part of the DOM.\r\n     * Set `true` to append the component to the body.\r\n     * In addition, any CSS selector string or an actual DOM node can be used.\r\n     */\r\n    teleport: {\r\n        type: [Boolean, String, Object],\r\n        default: () => getOption(\"sidebar.teleport\", false),\r\n    },\r\n    /**\r\n     * Component to be injected, used to open a component sidebar programmatically.\r\n     * Close sidebar within the component by emitting a 'close' event â€” emits('close')\r\n     */\r\n    component: {\r\n        type: [Object, Function] as PropType<Component>,\r\n        default: undefined,\r\n    },\r\n    /** Props to be binded to the injected component. */\r\n    props: { type: Object, default: undefined },\r\n    /** Events to be binded to the injected component. */\r\n    events: { type: Object, default: () => ({}) },\r\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\r\n    container: {\r\n        type: [Object, String] as PropType<string | HTMLElement>,\r\n        default: () => getOption(\"sidebar.container\", \"body\"),\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    programmatic: {\r\n        type: Object as PropType<ProgrammaticInstance>,\r\n        default: undefined,\r\n    },\r\n    /**\r\n     * This is used internally for programmatic usage.\r\n     * @ignore\r\n     */\r\n    promise: { type: Promise, default: undefined },\r\n    // class props (will not be displayed in the docs)\r\n    /** Class of the root element */\r\n    rootClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when its active */\r\n    activeClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar when teleported */\r\n    teleportClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar overlay */\r\n    overlayClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content */\r\n    contentClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar position */\r\n    positionClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullheight */\r\n    fullheightClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when is fullwidth */\r\n    fullwidthClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when its inlined */\r\n    inlineClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when reduced */\r\n    reduceClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar when expanded on hover */\r\n    expandOnHoverClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar variant */\r\n    variantClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of sidebar component when on mobile */\r\n    mobileClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar clipped */\r\n    crollClipClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the body when sidebar is not clipped */\r\n    noScrollClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is hidden */\r\n    hiddenClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n    /** Class of the sidebar content when sidebar is visible */\r\n    visibleClass: {\r\n        type: [String, Array, Function] as PropType<ComponentClass>,\r\n        default: undefined,\r\n    },\r\n});\r\n\r\nconst emits = defineEmits<{\r\n    /**\r\n     * active prop two-way binding\r\n     * @param value {boolean} - updated active prop\r\n     */\r\n    (e: \"update:active\", value: boolean): void;\r\n    /**\r\n     * on component close event\r\n     * @param value {any} - close event data\r\n     */\r\n    (e: \"close\", ...args: any[]): void;\r\n}>();\r\n\r\nconst rootRef = ref();\r\nconst sidebarContent = ref();\r\n\r\n/** add programmatic usage to this component */\r\nconst { isActive, close, cancel } = useProgrammaticComponent(\r\n    rootRef,\r\n    props,\r\n    emits,\r\n    {\r\n        destroyOnHide: props.destroyOnHide,\r\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\r\n    },\r\n);\r\n\r\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\r\n\r\nconst savedScrollTop = ref(null);\r\nconst isAnimating = ref(!props.active);\r\n\r\nwatch(isActive, (value) => {\r\n    if (props.overlay) handleScroll();\r\n    if (value) addHandler();\r\n    else removeHandler();\r\n});\r\n\r\nconst _teleport = computed(() =>\r\n    typeof props.teleport === \"boolean\"\r\n        ? { to: \"body\", disabled: !props.teleport }\r\n        : { to: props.teleport, disabled: false },\r\n);\r\n\r\nconst transitionName = computed(() => {\r\n    if (props.animation) return props.animation;\r\n\r\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\r\n    const right = props.position === \"right\";\r\n    const open = right ? !isActive.value : isActive.value;\r\n\r\n    return open\r\n        ? vertical\r\n            ? \"slide-down\"\r\n            : \"slide-next\"\r\n        : vertical\r\n          ? \"slide-up\"\r\n          : \"slide-prev\";\r\n});\r\n\r\nconst hideOnMobile = computed(\r\n    () => props.mobile === \"hidden\" && isMobile.value,\r\n);\r\n\r\nonMounted(() => {\r\n    if (props.active) addHandler();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    removeHandler();\r\n    if (isClient) {\r\n        if (props.overlay) {\r\n            // reset scroll\r\n            const scrollto = savedScrollTop.value\r\n                ? savedScrollTop.value\r\n                : document.documentElement.scrollTop;\r\n            if (scrollClass.value) {\r\n                document.body.classList.remove(...scrollClass.value);\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n            document.documentElement.scrollTop = scrollto;\r\n            document.body.style.top = null;\r\n        }\r\n    }\r\n});\r\n\r\nlet removeOutsideListener = null;\r\n\r\n/** add outside click event listener */\r\nfunction addHandler(): void {\r\n    if (isClient && !props.overlay) {\r\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\r\n    }\r\n}\r\n\r\n/** remove outside click event listener */\r\nfunction removeHandler(): void {\r\n    if (removeOutsideListener !== null) removeOutsideListener();\r\n}\r\n\r\n/** Close fixed sidebar if clicked outside. */\r\nfunction clickedOutside(event: Event): void {\r\n    if (props.inline || !isActive.value || isAnimating.value) return;\r\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\r\n        event.preventDefault();\r\n    cancel(\"outside\");\r\n}\r\n\r\nfunction handleScroll(): void {\r\n    if (!isClient) return;\r\n\r\n    if (props.scroll === \"clip\") {\r\n        if (scrollClass.value?.length) {\r\n            if (isActive.value) {\r\n                document.documentElement.classList.add(...scrollClass.value);\r\n            } else {\r\n                document.documentElement.classList.remove(...scrollClass.value);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    savedScrollTop.value = savedScrollTop.value\r\n        ? savedScrollTop.value\r\n        : document.documentElement.scrollTop;\r\n\r\n    if (scrollClass.value) {\r\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\r\n        else document.body.classList.remove(...scrollClass.value);\r\n    }\r\n\r\n    if (isActive.value) {\r\n        document.body.style.top = `-${savedScrollTop.value}px`;\r\n        return;\r\n    }\r\n\r\n    document.documentElement.scrollTop = savedScrollTop.value;\r\n    document.body.style.top = null;\r\n    savedScrollTop.value = null;\r\n}\r\n\r\n/** Transition after-enter hook */\r\nfunction afterEnter(): void {\r\n    isAnimating.value = false;\r\n}\r\n\r\n/** Transition before-leave hook */\r\nfunction beforeLeave(): void {\r\n    isAnimating.value = true;\r\n}\r\n\r\n// --- Computed Component Classes ---\r\n\r\nconst rootClasses = defineClasses(\r\n    [\"rootClass\", \"o-side\"],\r\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\r\n    [\"activeClass\", \"o-side--active\", null, isActive],\r\n    [\r\n        \"teleportClass\",\r\n        \"o-side--teleport\",\r\n        null,\r\n        computed(() => !!props.teleport),\r\n    ],\r\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\r\n);\r\n\r\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\r\n\r\nconst contentClasses = defineClasses(\r\n    [\"contentClass\", \"o-side__content\"],\r\n    [\r\n        \"variantClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.variant),\r\n        computed(() => !!props.variant),\r\n    ],\r\n    [\r\n        \"positionClass\",\r\n        \"o-side__content--\",\r\n        computed(() => props.position),\r\n        computed(() => !!props.position),\r\n    ],\r\n    [\r\n        \"fullheightClass\",\r\n        \"o-side__content--fullheight\",\r\n        null,\r\n        computed(() => props.fullheight),\r\n    ],\r\n    [\r\n        \"fullwidthClass\",\r\n        \"o-side__content--fullwidth\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.fullwidth ||\r\n                (props.mobile === \"fullwidth\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"reduceClass\",\r\n        \"o-side__content--reduced\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\r\n        ),\r\n    ],\r\n    [\r\n        \"expandOnHoverClass\",\r\n        \"o-side__content--reduced-expand\",\r\n        null,\r\n        computed(\r\n            () =>\r\n                props.expandOnHover &&\r\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\r\n        ),\r\n    ],\r\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\r\n    [\r\n        \"hiddenClass\",\r\n        \"o-side__content--hidden\",\r\n        null,\r\n        computed(() => !isActive.value),\r\n    ],\r\n);\r\n\r\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\r\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\r\n\r\nconst scrollClass = computed(() =>\r\n    getActiveClasses(\r\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\r\n    ),\r\n);\r\n\r\n// computed ref must be computed at least once for programmatic usage\r\nscrollClass.value;\r\n\r\n// --- Expose Public Functionalities ---\r\n\r\n/** expose functionalities for programmatic usage */\r\ndefineExpose({ close, promise: props.promise });\r\n</script>\r\n\r\n<template>\r\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\r\n        <div\r\n            v-show=\"!hideOnMobile\"\r\n            ref=\"rootRef\"\r\n            v-bind=\"$attrs\"\r\n            :class=\"rootClasses\"\r\n            data-oruga=\"sidebar\">\r\n            <div\r\n                v-if=\"overlay && isActive\"\r\n                :class=\"overlayClasses\"\r\n                :tabindex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                @click=\"(evt) => clickedOutside(evt)\" />\r\n            <transition\r\n                :name=\"transitionName\"\r\n                @after-enter=\"afterEnter\"\r\n                @before-leave=\"beforeLeave\">\r\n                <div\r\n                    v-show=\"isActive\"\r\n                    ref=\"sidebarContent\"\r\n                    :class=\"contentClasses\">\r\n                    <!--\r\n                        @slot Sidebar default content, default is component prop\r\n                        @binding {(...args):void} close - function to close the component\r\n                    -->\r\n                    <slot :close=\"close\">\r\n                        <!-- injected component for programmatic usage -->\r\n                        <component\r\n                            v-bind=\"$props.props\"\r\n                            :is=\"component\"\r\n                            v-if=\"component\"\r\n                            v-on=\"$props.events\"\r\n                            @close=\"close\" />\r\n                    </slot>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </Teleport>\r\n</template>\r\n","import { createVNode, render } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport type { SidebarProps } from \"./types\";\r\n\r\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\r\nimport { VueInstance } from \"@/utils/plugins\";\r\nimport { merge } from \"@/utils/helpers\";\r\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\r\n\r\ndeclare module \"../../index\" {\r\n    interface OrugaProgrammatic {\r\n        sidebar: typeof SidebarProgrammatic;\r\n    }\r\n}\r\n\r\nconst instances = new InstanceRegistry<typeof Sidebar>();\r\n\r\ntype SidebarProgrammaticProps = Readonly<\r\n    SidebarProps & OrugaOptions[\"sidebar\"]\r\n>;\r\n\r\nconst SidebarProgrammatic = {\r\n    open(params: SidebarProgrammaticProps): ProgrammaticExpose {\r\n        const defaultParams = {\r\n            programmatic: { instances },\r\n            active: true, // set the active state to true\r\n        };\r\n\r\n        const propsData = merge(defaultParams, params);\r\n        propsData.promise = new Promise((p1, p2) => {\r\n            propsData.programmatic.resolve = p1;\r\n            propsData.programmatic.reject = p2;\r\n        });\r\n\r\n        const app = VueInstance;\r\n        const vnode = createVNode(Sidebar, propsData);\r\n        vnode.appContext = app._context;\r\n        render(vnode, document.createElement(\"div\"));\r\n        // return exposed functionalities\r\n        return vnode.component.exposed as ProgrammaticExpose;\r\n    },\r\n    closeAll(...args: any[]): void {\r\n        instances.walk((entry) => entry.exposed.close(...args));\r\n    },\r\n};\r\n\r\nexport default SidebarProgrammatic;\r\n","import type { App, Plugin } from \"vue\";\r\n\r\nimport Sidebar from \"./Sidebar.vue\";\r\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\r\n\r\nimport {\r\n    registerComponent,\r\n    registerComponentProgrammatic,\r\n} from \"@/utils/plugins\";\r\n\r\n/** export sidebar specific types */\r\nexport type { SidebarProps } from \"./types\";\r\n\r\n/** export sidebar plugin */\r\nexport default {\r\n    install(app: App) {\r\n        registerComponent(app, Sidebar);\r\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\r\n    },\r\n} as Plugin;\r\n\r\n/** export sidebar components */\r\nexport { SidebarProgrammatic, Sidebar as OSidebar };\r\n"],"names":["Sidebar","SidebarProgrammatic"],"mappings":"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"}